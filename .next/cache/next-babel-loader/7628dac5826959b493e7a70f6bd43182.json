{"ast":null,"code":"import BaseAction from '~/packages/BaseAction';\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction';\nimport PracticeService from '../services/PracticeService';\nexport const practiceByGuestConsts = {\n  SET_ITEM: 'PRACTICE_BY_GUEST_SET_ITEM',\n  RESET_ITEM: 'PRACTICE_BY_GUEST_RESET_ITEM',\n  CREATE: 'PRACTICE_BY_GUEST_CREATE'\n};\nexport default class PracticeByGuestAction extends BaseAction {\n  constructor() {\n    super();\n    this.service = new PracticeService();\n    this.consts = practiceByGuestConsts;\n  }\n\n  setItem(item) {\n    return dispatch => {\n      console.log('setItem', item);\n      dispatch({\n        type: this.consts.SET_ITEM,\n        item: item\n      });\n    };\n  }\n\n  resetItem() {\n    return dispatch => {\n      dispatch({\n        type: this.consts.RESET_ITEM\n      });\n    };\n  }\n\n  create(params) {\n    return dispatch => {\n      this.service.createByGuest(params).then(response => {\n        dispatch(this.resetItem());\n        dispatch(AlertMessageAction.alertMessageSuccess('Pratica salvata con successo!'));\n      }).catch(error => {\n        dispatch(AlertMessageAction.alertMessageError(error.response.data.meta.message));\n      });\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/packages/TravelgoOne/actions/PracticeByGuestAction.js"],"names":["BaseAction","AlertMessageAction","PracticeService","practiceByGuestConsts","SET_ITEM","RESET_ITEM","CREATE","PracticeByGuestAction","constructor","service","consts","setItem","item","dispatch","console","log","type","resetItem","create","params","createByGuest","then","response","alertMessageSuccess","catch","error","alertMessageError","data","meta","message"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG;AACnCC,EAAAA,QAAQ,EAAE,4BADyB;AAEnCC,EAAAA,UAAU,EAAE,8BAFuB;AAGnCC,EAAAA,MAAM,EAAE;AAH2B,CAA9B;AAMP,eAAe,MAAMC,qBAAN,SAAoCP,UAApC,CAA+C;AAC5DQ,EAAAA,WAAW,GAAG;AACd;AACA,SAAKC,OAAL,GAAe,IAAIP,eAAJ,EAAf;AACA,SAAKQ,MAAL,GAAcP,qBAAd;AACC;;AAIDQ,EAAAA,OAAO,CAACC,IAAD,EAAO;AACZ,WAAQC,QAAD,IAAc;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;AACpBC,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE,KAAKN,MAAL,CAAYN,QADX;AAEPQ,QAAAA,IAAI,EAAEA;AAFC,OAAD,CAAR;AAID,KALD;AAMD;;AAEDK,EAAAA,SAAS,GAAG;AACV,WAAQJ,QAAD,IAAc;AACnBA,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAE,KAAKN,MAAL,CAAYL;AADX,OAAD,CAAR;AAGD,KAJD;AAKD;;AAEDa,EAAAA,MAAM,CAACC,MAAD,EAAS;AACb,WAAQN,QAAD,IAAc;AACnB,WAAKJ,OAAL,CAAaW,aAAb,CAA2BD,MAA3B,EACCE,IADD,CACMC,QAAQ,IAAI;AAChBT,QAAAA,QAAQ,CAAC,KAAKI,SAAL,EAAD,CAAR;AACAJ,QAAAA,QAAQ,CAACZ,kBAAkB,CAACsB,mBAAnB,CAAuC,+BAAvC,CAAD,CAAR;AACD,OAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;AACdZ,QAAAA,QAAQ,CAACZ,kBAAkB,CAACyB,iBAAnB,CAAqCD,KAAK,CAACH,QAAN,CAAeK,IAAf,CAAoBC,IAApB,CAAyBC,OAA9D,CAAD,CAAR;AACD,OAPD;AAQD,KATD;AAUD;;AArC2D","sourcesContent":["import BaseAction from '~/packages/BaseAction'\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction'\nimport PracticeService from '../services/PracticeService'\n\nexport const practiceByGuestConsts = {\n  SET_ITEM: 'PRACTICE_BY_GUEST_SET_ITEM',\n  RESET_ITEM: 'PRACTICE_BY_GUEST_RESET_ITEM',\n  CREATE: 'PRACTICE_BY_GUEST_CREATE',\n}\n\nexport default class PracticeByGuestAction extends BaseAction {\n  constructor() {\n\t\tsuper();\n\t\tthis.service = new PracticeService();\n\t\tthis.consts = practiceByGuestConsts;\n  }\n\n\n\n  setItem(item) {\n    return (dispatch) => {console.log('setItem', item)\n      dispatch({\n        type: this.consts.SET_ITEM,\n        item: item\n      })\n    }\n  }\n\n  resetItem() {\n    return (dispatch) => {\n      dispatch({\n        type: this.consts.RESET_ITEM,\n      })\n    }\n  }\n\n  create(params) {\n    return (dispatch) => {\n      this.service.createByGuest(params)\n      .then(response => {\n        dispatch(this.resetItem())\n        dispatch(AlertMessageAction.alertMessageSuccess('Pratica salvata con successo!'))\n      })\n      .catch(error => {\n        dispatch(AlertMessageAction.alertMessageError(error.response.data.meta.message))\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}