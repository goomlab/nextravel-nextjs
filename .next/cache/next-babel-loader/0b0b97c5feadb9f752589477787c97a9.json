{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { MakeStore, createWrapper, Context, HYDRATE } from 'next-redux-wrapper';\nimport alertMessage from './packages/Base/reducers/AlertMessageReducer';\nimport pageLoader from './packages/Base/reducers/PageLoaderReducer';\nimport practiceByGuest from './packages/TravelgoOne/reducers/PracticeByGuestReducer'; // create a makeStore function\n\nexport const makeStore = context => createStore(combineReducers({\n  alertMessage: alertMessage,\n  pageLoader: pageLoader,\n  practiceByGuest: practiceByGuest\n}), {}, composeWithDevTools(applyMiddleware(reduxThunk))); // export an assembled wrapper\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":null,"metadata":{},"sourceType":"module"}