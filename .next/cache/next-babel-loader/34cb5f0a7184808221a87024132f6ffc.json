{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/Partials/PriceTableWrap.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport PriceTable from './PriceTable';\nexport const getPriceList = period => {\n  let priceList = {};\n\n  for (const [key, treatmentObj] of Object.entries(period.viewPrices)) {\n    priceList[roomTypeName][key] = {\n      n1: treatmentObj.n1 ? treatmentObj.n1 : null,\n      n2: treatmentObj.n2 ? treatmentObj.n2 : null,\n      n3: treatmentObj.n3 ? treatmentObj.n3 : null,\n      n4: treatmentObj.n4 ? treatmentObj.n4 : null,\n      n5: treatmentObj.n5 ? treatmentObj.n5 : null,\n      n6: treatmentObj.n6 ? treatmentObj.n6 : null,\n      n7: treatmentObj.n7 ? treatmentObj.n7 : null\n    };\n  }\n\n  return priceList;\n};\n\nconst PriceTableWrap = props => {\n  const priceList = getPriceList(props.period);\n  return __jsx(React.Fragment, null, priceList && Object.entries(priceList).map(([treatment, prices], index) => __jsx(PriceTable, {\n    key: index,\n    index: index,\n    treatment: treatment,\n    prices: prices,\n    hotel: props.hotel,\n    period: props.period,\n    priceTableLink: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default PriceTableWrap;","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/Partials/PriceTableWrap.js"],"names":["React","moment","PriceTable","getPriceList","period","priceList","key","treatmentObj","Object","entries","viewPrices","roomTypeName","n1","n2","n3","n4","n5","n6","n7","PriceTableWrap","props","map","treatment","prices","index","hotel"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,MAAMC,YAAY,GAAGC,MAAM,IAAI;AACpC,MAAIC,SAAS,GAAG,EAAhB;;AAEA,OAAK,MAAM,CAACC,GAAD,EAAMC,YAAN,CAAX,IAAkCC,MAAM,CAACC,OAAP,CAAeL,MAAM,CAACM,UAAtB,CAAlC,EAAqE;AACnEL,IAAAA,SAAS,CAACM,YAAD,CAAT,CAAwBL,GAAxB,IAA+B;AAC7BM,MAAAA,EAAE,EAAGL,YAAY,CAACK,EAAd,GAAoBL,YAAY,CAACK,EAAjC,GAAsC,IADb;AAE7BC,MAAAA,EAAE,EAAGN,YAAY,CAACM,EAAd,GAAoBN,YAAY,CAACM,EAAjC,GAAsC,IAFb;AAG7BC,MAAAA,EAAE,EAAGP,YAAY,CAACO,EAAd,GAAoBP,YAAY,CAACO,EAAjC,GAAsC,IAHb;AAI7BC,MAAAA,EAAE,EAAGR,YAAY,CAACQ,EAAd,GAAoBR,YAAY,CAACQ,EAAjC,GAAsC,IAJb;AAK7BC,MAAAA,EAAE,EAAGT,YAAY,CAACS,EAAd,GAAoBT,YAAY,CAACS,EAAjC,GAAsC,IALb;AAM7BC,MAAAA,EAAE,EAAGV,YAAY,CAACU,EAAd,GAAoBV,YAAY,CAACU,EAAjC,GAAsC,IANb;AAO7BC,MAAAA,EAAE,EAAGX,YAAY,CAACW,EAAd,GAAoBX,YAAY,CAACW,EAAjC,GAAsC;AAPb,KAA/B;AASD;;AAED,SAAOb,SAAP;AACD,CAhBM;;AAkBP,MAAMc,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAMf,SAAS,GAAGF,YAAY,CAACiB,KAAK,CAAChB,MAAP,CAA9B;AAEA,SACE,4BACCC,SAAS,IAAIG,MAAM,CAACC,OAAP,CAAeJ,SAAf,EAA0BgB,GAA1B,CAA+B,CAAC,CAACC,SAAD,EAAYC,MAAZ,CAAD,EAAsBC,KAAtB,KAC3C,MAAC,UAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,KAAK,EAAEA,KAFT;AAGE,IAAA,SAAS,EAAEF,SAHb;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,KAAK,EAAEH,KAAK,CAACK,KALf;AAME,IAAA,MAAM,EAAEL,KAAK,CAAChB,MANhB;AAOE,IAAA,cAAc,EAAE,IAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,CADd,CADF;AAeD,CAlBD;;AAoBA,eAAee,cAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nimport PriceTable from './PriceTable';\n\nexport const getPriceList = period => {\n  let priceList = {};\n  \n  for (const [key, treatmentObj] of Object.entries(period.viewPrices)) {\n    priceList[roomTypeName][key] = {\n      n1: (treatmentObj.n1) ? treatmentObj.n1 : null,\n      n2: (treatmentObj.n2) ? treatmentObj.n2 : null,\n      n3: (treatmentObj.n3) ? treatmentObj.n3 : null,\n      n4: (treatmentObj.n4) ? treatmentObj.n4 : null,\n      n5: (treatmentObj.n5) ? treatmentObj.n5 : null,\n      n6: (treatmentObj.n6) ? treatmentObj.n6 : null,\n      n7: (treatmentObj.n7) ? treatmentObj.n7 : null,\n    };\n  }\n  \n  return priceList\n}\n\nconst PriceTableWrap = props => {\n  const priceList = getPriceList(props.period)\n\n  return(\n    <>\n    {priceList && Object.entries(priceList).map( ([treatment, prices], index) => \n      <PriceTable \n        key={index}\n        index={index}\n        treatment={treatment}\n        prices={prices}\n        hotel={props.hotel}\n        period={props.period}\n        priceTableLink={true}\n        />\n    )}\n    </>\n  )\n}\n\nexport default PriceTableWrap;"]},"metadata":{},"sourceType":"module"}