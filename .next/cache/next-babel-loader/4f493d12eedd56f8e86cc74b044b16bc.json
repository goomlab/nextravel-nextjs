{"ast":null,"code":"import axios from 'axios';\nimport BaseService from '../../BaseService';\nexport default class PracticeService extends BaseService {\n  constructor() {\n    super('/travelgo-one/practices');\n  }\n\n  createByGuest(postData) {\n    let config = {\n      headers: {\n        'Content-Type': 'application/json' // 'Authorization': `Bearer ${token}`\n\n      }\n    };\n    return axios.post(this.url + '/create-by-guest', postData, config).then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/packages/TravelgoOne/services/PracticeService.js"],"names":["axios","BaseService","PracticeService","constructor","createByGuest","postData","config","headers","post","url","then","response","Promise","resolve","catch","error","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,eAAe,MAAMC,eAAN,SAA8BD,WAA9B,CAA0C;AAEvDE,EAAAA,WAAW,GAAE;AACX,UAAM,yBAAN;AACD;;AAEDC,EAAAA,aAAa,CAACC,QAAD,EAAW;AACtB,QAAIC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAEP;;AAFO;AADE,KAAb;AAOA,WAAOP,KAAK,CAACQ,IAAN,CAAW,KAAKC,GAAL,GAAW,kBAAtB,EAA0CJ,QAA1C,EAAoDC,MAApD,EACNI,IADM,CACDC,QAAQ,IAAI;AAChB,aAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAhB,CAAP;AACD,KAHM,EAGJG,KAHI,CAGEC,KAAK,IAAI;AAChB,aAAOH,OAAO,CAACI,MAAR,CAAeD,KAAf,CAAP;AACD,KALM,CAAP;AAMD;;AApBsD","sourcesContent":["import axios from 'axios';\nimport BaseService from '../../BaseService';\n\nexport default class PracticeService extends BaseService {\n\n  constructor(){\n    super('/travelgo-one/practices');\n  }\n\n  createByGuest(postData) {\n    let config = {\n      headers: {\n        'Content-Type': 'application/json',\n        // 'Authorization': `Bearer ${token}`\n      }\n    }\n\n    return axios.post(this.url + '/create-by-guest', postData, config)\n    .then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n}"]},"metadata":{},"sourceType":"module"}