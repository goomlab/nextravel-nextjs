{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap-html.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport Link from \"next/link\";\nimport NextHead from 'next/head';\nimport { HotelSchema, makeHotelSchema } from \"~/components/JsonLdSchema\";\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\"; // import HotelArchive from \"~/components/Partials/HotelArchive\";\n\nimport HotelArchive2 from \"~/components/Partials/HotelArchive2\";\nimport HomeRecap from \"~/components/Partials/HomeRecap\";\nimport Newsletter from \"~/components/Partials/Newsletter\";\n\nvar SitemapHotels = function SitemapHotels(models) {\n  return __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, Object.entries(models).map(function (model, index) {\n    __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"\".concat(process.env.app_url, \"/\").concat(model.slug.it),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, model.title.it)));\n  }));\n};\n\n_c = SitemapHotels;\n\nvar SitemapHtml = function SitemapHtml(props) {\n  return __jsx(Layout, {\n    settings: {\n      template: \"front-page\",\n      menu: props.menu\n    },\n    meta: {\n      title: \"Mappa del sito\",\n      description: \"Mappa del sito\",\n      url: \"\".concat(process.env.meta.url, \"/sitemap-html\"),\n      image: null\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(BookingSearchBox, {\n    query: props.query,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(SitemapHotels, {\n    models: props.hotels,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c2 = SitemapHtml;\n\nSitemapHtml.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var menu, pages, hotels, pagefilters, rateplanperiods, menuService, postService, hotelService, pagefilterService, rateplanperiodService;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            menu = null;\n            pages = [];\n            hotels = [];\n            pagefilters = [];\n            rateplanperiods = [];\n            _context.prev = 5;\n            menuService = new MenuService();\n            _context.next = 9;\n            return menuService.get(1);\n\n          case 9:\n            menu = _context.sent;\n            postService = new PostService();\n            _context.next = 13;\n            return postService.all({\n              stauts: {\n                key: 'status',\n                compare: '=',\n                value: 1\n              }\n            });\n\n          case 13:\n            pages = _context.sent;\n            hotelService = new HotelService();\n            _context.next = 17;\n            return hotelService.all({\n              stauts: {\n                key: 'status',\n                compare: '=',\n                value: 1\n              }\n            });\n\n          case 17:\n            hotels = _context.sent;\n            pagefilterService = new PageFilterService();\n            _context.next = 21;\n            return pagefilterService.all({\n              stauts: {\n                key: 'status',\n                compare: '=',\n                value: 1\n              }\n            });\n\n          case 21:\n            pagefilters = _context.sent;\n            rateplanperiodService = new RatePlanPeriodService();\n            _context.next = 25;\n            return rateplanperiodService.all({\n              stauts: {\n                key: 'status',\n                compare: '=',\n                value: 1\n              }\n            });\n\n          case 25:\n            rateplanperiods = _context.sent;\n            _context.next = 31;\n            break;\n\n          case 28:\n            _context.prev = 28;\n            _context.t0 = _context[\"catch\"](5);\n            console.log('error', _context.t0);\n\n          case 31:\n            return _context.abrupt(\"return\", {\n              params: ctx.params,\n              query: ctx.query,\n              menu: menu,\n              pages: pages,\n              hotels: hotels,\n              pagefilters: pagefilters,\n              rateplanperiods: rateplanperiods\n            });\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 28]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default SitemapHtml; // const mapStateToProps = (state) => {\n// \treturn {\n//     hotelLoading: state.hotel.loading,\n//     hotelSeatchParams: state.hotel.params,\n// \t\thotels: state.hotel.items,\n//     hotelMeta: state.hotel.meta,\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   let hotelAction = new HotelAction()\n//   return {\n//     loading: (state) => {\n//       dispatch(hotelAction.loading(state))\n//     },\n//     query: (data) => {\n//       dispatch(hotelAction.query(data))\n//     },\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(SitemapHtml);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SitemapHotels\");\n$RefreshReg$(_c2, \"SitemapHtml\");","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap-html.js"],"names":["React","connect","Link","NextHead","HotelSchema","makeHotelSchema","PostService","HotelService","PageFilterService","RatePlanPeriodService","Layout","BookingSearchBox","HotelArchive2","HomeRecap","Newsletter","SitemapHotels","models","Object","entries","map","model","index","process","env","app_url","slug","it","title","SitemapHtml","props","template","menu","description","url","meta","image","query","hotels","getInitialProps","ctx","pages","pagefilters","rateplanperiods","menuService","MenuService","get","postService","all","stauts","key","compare","value","hotelService","pagefilterService","rateplanperiodService","console","log","params"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,2BAA7C;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,iBAAP,MAA8B,mDAA9B;AACA,OAAOC,qBAAP,MAAkC,uDAAlC;AAGA,OAAOC,MAAP,MAAmB,4CAAnB;AACA,OAAOC,gBAAP,MAA6B,wCAA7B,C,CACA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM,EAAI;AAC9B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,OAAP,CAAeF,MAAf,EAAuBG,GAAvB,CAA2B,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC5C;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,YAAKC,OAAO,CAACC,GAAR,CAAYC,OAAjB,cAA4BJ,KAAK,CAACK,IAAN,CAAWC,EAAvC,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,KAAK,CAACO,KAAN,CAAYD,EAAhB,CADF,CADF;AAKD,GANA,CADH,CADF;AAWD,CAZD;;KAAMX,a;;AAcN,IAAMa,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,SACE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE;AAACC,MAAAA,QAAQ,EAAC,YAAV;AAAwBC,MAAAA,IAAI,EAAEF,KAAK,CAACE;AAApC,KADZ;AAEE,IAAA,IAAI,EAAE;AACJJ,MAAAA,KAAK,EAAE,gBADH;AAEJK,MAAAA,WAAW,EAAE,gBAFT;AAGJC,MAAAA,GAAG,YAAKX,OAAO,CAACC,GAAR,CAAYW,IAAZ,CAAiBD,GAAtB,kBAHC;AAIJE,MAAAA,KAAK,EAAE;AAJH,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEN,KAAK,CAACO,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAYE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEP,KAAK,CAACQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CAjBD;;MAAMT,W;;AAmBNA,WAAW,CAACU,eAAZ;AAAA,sEAA8B,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBR,YAAAA,IADwB,GACjB,IADiB;AAExBS,YAAAA,KAFwB,GAEhB,EAFgB;AAGxBH,YAAAA,MAHwB,GAGf,EAHe;AAIxBI,YAAAA,WAJwB,GAIV,EAJU;AAKxBC,YAAAA,eALwB,GAKN,EALM;AAAA;AAOtBC,YAAAA,WAPsB,GAOR,IAAIC,WAAJ,EAPQ;AAAA;AAAA,mBAQbD,WAAW,CAACE,GAAZ,CAAgB,CAAhB,CARa;;AAAA;AAQ1Bd,YAAAA,IAR0B;AAUtBe,YAAAA,WAVsB,GAUR,IAAIxC,WAAJ,EAVQ;AAAA;AAAA,mBAWZwC,WAAW,CAACC,GAAZ,CAAgB;AAC5BC,cAAAA,MAAM,EAAE;AAACC,gBAAAA,GAAG,EAAE,QAAN;AAAgBC,gBAAAA,OAAO,EAAE,GAAzB;AAA8BC,gBAAAA,KAAK,EAAE;AAArC;AADoB,aAAhB,CAXY;;AAAA;AAW1BX,YAAAA,KAX0B;AAetBY,YAAAA,YAfsB,GAeP,IAAI7C,YAAJ,EAfO;AAAA;AAAA,mBAgBX6C,YAAY,CAACL,GAAb,CAAiB;AAC9BC,cAAAA,MAAM,EAAE;AAACC,gBAAAA,GAAG,EAAE,QAAN;AAAgBC,gBAAAA,OAAO,EAAE,GAAzB;AAA8BC,gBAAAA,KAAK,EAAE;AAArC;AADsB,aAAjB,CAhBW;;AAAA;AAgB1Bd,YAAAA,MAhB0B;AAoBtBgB,YAAAA,iBApBsB,GAoBF,IAAI7C,iBAAJ,EApBE;AAAA;AAAA,mBAqBN6C,iBAAiB,CAACN,GAAlB,CAAsB;AACxCC,cAAAA,MAAM,EAAE;AAACC,gBAAAA,GAAG,EAAE,QAAN;AAAgBC,gBAAAA,OAAO,EAAE,GAAzB;AAA8BC,gBAAAA,KAAK,EAAE;AAArC;AADgC,aAAtB,CArBM;;AAAA;AAqB1BV,YAAAA,WArB0B;AAyBtBa,YAAAA,qBAzBsB,GAyBE,IAAI7C,qBAAJ,EAzBF;AAAA;AAAA,mBA0BF6C,qBAAqB,CAACP,GAAtB,CAA0B;AAChDC,cAAAA,MAAM,EAAE;AAACC,gBAAAA,GAAG,EAAE,QAAN;AAAgBC,gBAAAA,OAAO,EAAE,GAAzB;AAA8BC,gBAAAA,KAAK,EAAE;AAArC;AADwC,aAA1B,CA1BE;;AAAA;AA0B1BT,YAAAA,eA1B0B;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8B1Ba,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AA9B0B;AAAA,6CAiCrB;AACLC,cAAAA,MAAM,EAAElB,GAAG,CAACkB,MADP;AAELrB,cAAAA,KAAK,EAAEG,GAAG,CAACH,KAFN;AAGLL,cAAAA,IAAI,EAAJA,IAHK;AAILS,cAAAA,KAAK,EAALA,KAJK;AAKLH,cAAAA,MAAM,EAANA,MALK;AAMLI,cAAAA,WAAW,EAAXA,WANK;AAOLC,cAAAA,eAAe,EAAfA;AAPK,aAjCqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AA4CA,eAAed,WAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport Link from \"next/link\";\nimport NextHead from 'next/head'\n\nimport { HotelSchema, makeHotelSchema } from \"~/components/JsonLdSchema\";\n\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\n\n\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\";\n// import HotelArchive from \"~/components/Partials/HotelArchive\";\nimport HotelArchive2 from \"~/components/Partials/HotelArchive2\";\nimport HomeRecap from \"~/components/Partials/HomeRecap\";\nimport Newsletter from \"~/components/Partials/Newsletter\";\n\n\nconst SitemapHotels = models => {\n  return (\n    <ul>\n      {Object.entries(models).map((model, index) => {\n        <li key={index}>\n          <Link href={`${process.env.app_url}/${model.slug.it}`}>\n            <a>{model.title.it}</a>\n          </Link>\n        </li>\n      })}\n    </ul>\n  )\n}\n\nconst SitemapHtml = props => {\n  return (\n    <Layout \n      settings={{template:\"front-page\", menu: props.menu}}\n      meta={{\n        title: \"Mappa del sito\",\n        description: \"Mappa del sito\",\n        url: `${process.env.meta.url}/sitemap-html`,\n        image: null\n      }}\n      >\n\n      <BookingSearchBox query={props.query} />\n\n      <SitemapHotels models={props.hotels} />\n    </Layout>\n  );\n};\n\nSitemapHtml.getInitialProps = async ctx => {\n  let menu = null;\n  let pages = [];\n  let hotels = [];\n  let pagefilters = [];\n  let rateplanperiods = [];\n  try {\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n\n    let postService = new PostService();\n    pages = await postService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    });\n\n    let hotelService = new HotelService();\n    hotels = await hotelService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    });\n\n    let pagefilterService = new PageFilterService();\n    pagefilters = await pagefilterService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    });\n\n    let rateplanperiodService = new RatePlanPeriodService();\n    rateplanperiods = await rateplanperiodService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    });\n  } catch (e) {\n    console.log('error', e)\n  }\n\n  return {\n    params: ctx.params,\n    query: ctx.query,\n    menu,\n    pages,\n    hotels,\n    pagefilters,\n    rateplanperiods\n  };\n};\n\nexport default SitemapHtml;\n\n\n// const mapStateToProps = (state) => {\n// \treturn {\n//     hotelLoading: state.hotel.loading,\n//     hotelSeatchParams: state.hotel.params,\n// \t\thotels: state.hotel.items,\n//     hotelMeta: state.hotel.meta,\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   let hotelAction = new HotelAction()\n//   return {\n//     loading: (state) => {\n//       dispatch(hotelAction.loading(state))\n//     },\n//     query: (data) => {\n//       dispatch(hotelAction.query(data))\n//     },\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(SitemapHtml);\n\n\n"]},"metadata":{},"sourceType":"module"}