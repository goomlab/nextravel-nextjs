{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport moment from \"moment\";\nimport Link from \"next/link\";\nimport SwiperCore, { Swiper, Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\nimport BaseService from \"~/packages/BaseService\";\nimport MenuService from \"~/packages/Post/services/MenuService\";\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport RateplanPeriodService from \"~/packages/TravelgoOne/services/RateplanPeriodService\";\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\";\nimport BookingForm from \"~/components/Partials/BookingForm\";\nimport PriceTable from '~/components/Partials/PriceTable';\n\nconst BookingPage = props => {\n  console.log('props booking page', props);\n\n  if (!props.hotel || props.hotel.length <= 0) {\n    return __jsx(Layout, {\n      settings: {\n        menu: props.menu\n      }\n    }, __jsx(\"div\", null, \"Data not found\"));\n  }\n\n  const period = props.period;\n  const hotel = props.hotel;\n  const swiperHotelThumbnail = React.useRef(null);\n  let dateFrom = moment(period.date_from, \"YYYY-MM-DD\");\n  let dateTo = moment(period.date_to, \"YYYY-MM-DD\");\n  let stars = [];\n\n  for (let i = 1; i <= parseInt(hotel.stars); i++) {\n    stars.push(__jsx(\"i\", {\n      key: i,\n      className: \"ico ico-star\"\n    }));\n  }\n\n  let priceList = {};\n\n  for (const [key, treatmentObj] of Object.entries(props.period.viewPrices)) {\n    priceList[key] = {\n      n1: treatmentObj.n1 ? treatmentObj.n1 : null,\n      n2: treatmentObj.n2 ? treatmentObj.n2 : null,\n      n3: treatmentObj.n3 ? treatmentObj.n3 : null,\n      n4: treatmentObj.n4 ? treatmentObj.n4 : null,\n      n5: treatmentObj.n5 ? treatmentObj.n5 : null,\n      n6: treatmentObj.n6 ? treatmentObj.n6 : null,\n      n7: treatmentObj.n7 ? treatmentObj.n7 : null\n    };\n  }\n\n  React.useEffect(() => {\n    swiperHotelThumbnail.current = new Swiper(`#swiperHotelThumbnail`, {\n      grubCursor: false,\n      simulateTouch: false,\n      direction: 'horizontal',\n      //speed: 600,\n      slidesPerView: 1,\n      spaceBetween: 0,\n      navigation: {\n        nextEl: `#swiperHotelThumbnail-button-next`,\n        prevEl: `#swiperHotelThumbnail-button-prev`\n      }\n    });\n  }, []);\n  return __jsx(Layout, {\n    settings: {\n      template: \"booking-page\",\n      menu: props.menu\n    },\n    meta: {\n      title: `Booking ${props.hotel.meta_title.it}`,\n      description: `Booking`,\n      url: `${process.env.meta.url}/accommodations/${props.hotel.slug.it}/booking`,\n      image: props.hotel.media && props.hotel.media.gallery && props.hotel.media.gallery[0] ? props.hotel.media.gallery[0].url : null\n    }\n  }, __jsx(BookingSearchBox, null), __jsx(\"section\", {\n    className: \"single-hotel-section\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    id: `swiperHotelThumbnail`,\n    className: \"swiper-container swiperHotelThumbnail\"\n  }, __jsx(\"div\", {\n    className: \"swiper-wrapper\"\n  }, hotel.media && hotel.media.gallery.map((img, index) => __jsx(\"div\", {\n    className: \"swiper-slide\",\n    key: index\n  }, __jsx(\"figure\", {\n    class: \"img-bgas\"\n  }, __jsx(\"img\", {\n    src: img.url,\n    alt: img.name\n  })))), (!hotel.media || !hotel.media.gallery) && __jsx(\"div\", {\n    className: \"swiper-slide\"\n  }, __jsx(\"figure\", {\n    class: \"img-bgas\"\n  }, __jsx(\"img\", {\n    src: \"default\",\n    alt: \"\"\n  })))), __jsx(\"div\", {\n    id: `swiperHotelThumbnail-button-prev`,\n    className: \"swiper-button-prev\"\n  }), __jsx(\"div\", {\n    id: `swiperHotelThumbnail-button-next`,\n    className: \"swiper-button-next\"\n  })), __jsx(\"div\", {\n    className: \"topline\"\n  }, __jsx(\"div\", {\n    className: \"title mr-auto\"\n  }, __jsx(\"h1\", null, hotel.name), __jsx(\"div\", {\n    className: \"stars\"\n  }, stars)), __jsx(\"div\", {\n    className: \"single-hotel-call ml-auto\"\n  }, \"chiama!\\xA0\", __jsx(\"span\", {\n    className: \"bold\"\n  }, process.env.contacts.phone.label))))), __jsx(\"section\", {\n    className: \"single-hotel-section\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"hotel-booking-box\"\n  }, __jsx(\"div\", {\n    className: \"box1\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, priceList && Object.entries(priceList).map(([treatment, prices], index) => __jsx(\"div\", {\n    className: \"prices-box\",\n    key: index\n  }, __jsx(PriceTable, {\n    key: index,\n    index: index,\n    treatment: treatment,\n    prices: prices,\n    hotel: hotel,\n    period: period\n  }))), __jsx(\"span\", null, \"Servizi aggiuntivi\"), __jsx(\"table\", {\n    class: \"prices-table\"\n  }, hotel.extraServices && hotel.extraServices.length > 0 && hotel.extraServices.map((obj, index) => __jsx(\"tr\", {\n    key: index\n  }, __jsx(\"td\", {\n    className: \"service-name\"\n  }, obj.name), __jsx(\"td\", {\n    className: \"service-price\"\n  }, __jsx(\"span\", {\n    className: \"no-smartphone\"\n  }, obj.pivot.price_type == 'fixed' ? 'â‚¬ ' : '+ '), obj.pivot.price, \",-\", obj.pivot.price_type == 'percent' ? ' %' : ''))))), __jsx(\"div\", {\n    className: \"col-lg-4 offset-lg-2\"\n  }, __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"div\", {\n    className: \"row mb-5\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, \"Offerta n. \", period.id), __jsx(\"div\", {\n    className: \"col-lg-6\"\n  }, \"dal \", dateFrom.format(\"DD/MM/YYYY\"), __jsx(\"br\", null), \"al \", dateTo.format(\"DD/MM/YYYY\"))), \"per ulteriori informazioni contattaci a\", __jsx(\"br\", null), __jsx(\"span\", {\n    className: \"bold\"\n  }, process.env.contacts.email.label))))), __jsx(BookingForm, {\n    rateplan: props.period.rateplan || null,\n    hotel: props.period.rateplan.hotel || null,\n    query: props.query,\n    priceList: priceList\n  })))), __jsx(\"section\", {\n    className: \"section-main single-hotel-section\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-3\"\n  }, __jsx(\"div\", {\n    className: \"content-box content-box-1\"\n  }, __jsx(\"div\", {\n    className: \"titoletto\"\n  }, \"posizione\"), __jsx(\"div\", {\n    className: \"description\"\n  }, hotel.details.address, __jsx(\"br\", null), hotel.details.zip_code, \" \", hotel.details.city, \" (\", hotel.details.state, \")\"), __jsx(\"div\", {\n    className: \"titoletto\"\n  }, \"distanze\"), __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: hotel.description_near.it\n    }\n  })), __jsx(\"ul\", {\n    className: \"hotel-service-list\"\n  }, hotel.incServices && hotel.incServices.length > 0 && hotel.incServices.map((obj, index) => __jsx(\"li\", {\n    key: index\n  }, __jsx(\"span\", null, obj.name)))))), __jsx(\"div\", {\n    className: \"col-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"content-box content-box-2\"\n  }, __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: hotel.description_short.it\n    }\n  })))), __jsx(\"div\", {\n    className: \"col-lg-5\"\n  }, __jsx(\"div\", {\n    className: \"content-box content-box-3\"\n  }, __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: hotel.description_short.it\n    }\n  }))))))));\n};\n\nBookingPage.getInitialProps = async params => {\n  let locs = [];\n  let hotelCategories = [];\n  let menu = null;\n  let page = null;\n  let hotel = null;\n  let period = null;\n  let query = {\n    checkin: params.query.checkin || null,\n    checkout: params.query.checkout || null,\n    treatment: params.query.treatment || null,\n    nights: params.query.nights || null\n  };\n\n  try {\n    let baseService = new BaseService();\n    let init = await baseService.initApp();\n    locs = init.locs || [];\n    hotelCategories = init.hotelCategories || [];\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n    let rateplanPeriodService = new RateplanPeriodService();\n    period = await rateplanPeriodService.get(params.query.id);\n\n    if (period && period.rateplan && period.rateplan.hotel) {\n      hotel = period.rateplan.hotel;\n    }\n  } catch (e) {}\n\n  return {\n    query,\n    locs,\n    hotelCategories,\n    menu,\n    page,\n    hotel,\n    period\n  };\n};\n\nexport default BookingPage;","map":null,"metadata":{},"sourceType":"module"}