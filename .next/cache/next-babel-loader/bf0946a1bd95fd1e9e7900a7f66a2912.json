{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/UI/AlertMessage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction';\n\nconst AlertMessage = props => {\n  let initialState = props.message && props.message != \"\" ? true : false;\n  const [open, setOpen] = React.useState(initialState);\n  if (initialState != open) setOpen(initialState);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.resetAlertMessage();\n  };\n\n  let type = \"info\";\n  let title = \"Info\";\n\n  if (props.type) {\n    switch (props.type) {\n      case 'alert-success':\n        type = 'success';\n        title = \"Successo\";\n        break;\n\n      case 'alert-danger':\n        type = 'error';\n        title = \"Errore\";\n        break;\n\n      case 'alert-warning':\n        type = 'warning';\n        title = \"Attenzione\";\n        break;\n\n      default:\n        type = \"info\";\n        title = \"Info\";\n        break;\n    }\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      display: open ? \"block\" : \"none\",\n      background: 'rgba(56,64,68,.9)',\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      zIndex: '100000000',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: \"AlertMessage\",\n    className: \"AlertMessage modal\" + (open ? \" fade show\" : \"\"),\n    tabIndex: \"-1\",\n    role: \"dialog\",\n    style: {\n      display: open ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, title), __jsx(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    onClick: e => handleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"\\xD7\"))), __jsx(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, props.message))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    type: state.alertMessage.type,\n    message: state.alertMessage.message\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetAlertMessage: () => {\n      dispatch(AlertMessageAction.reset());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertMessage);","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/UI/AlertMessage.js"],"names":["React","connect","AlertMessageAction","AlertMessage","props","initialState","message","open","setOpen","useState","handleOpen","handleClose","resetAlertMessage","type","title","display","background","position","top","bottom","left","right","zIndex","textAlign","e","mapStateToProps","state","alertMessage","mapDispatchToProps","dispatch","reset"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction';\n\nconst AlertMessage = props => {\n\n  let initialState = (props.message && props.message != \"\") ? true : false;\n\tconst [open, setOpen] = React.useState(initialState);\n\tif( initialState != open )\n\t\tsetOpen(initialState);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n\t\tsetOpen(false);\n\t\tprops.resetAlertMessage();\n  };\n\n  let type = \"info\";\n\tlet title = \"Info\";\n\tif( props.type ) {\n\t\tswitch(props.type) {\n\t\t\tcase 'alert-success': type = 'success'; title = \"Successo\"; break;\n\t\t\tcase 'alert-danger': type = 'error'; title = \"Errore\"; break;\n\t\t\tcase 'alert-warning': type = 'warning'; title = \"Attenzione\"; break;\n\t\t\tdefault: type = \"info\"; title = \"Info\"; break;\n\t\t}\n\t}\n  \n  return(\n    <div style={{\n      display: (open ? \"block\" : \"none\"),\n      background: 'rgba(56,64,68,.9)',\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      zIndex: '100000000',\n      textAlign: 'center'\n      }}>\n      <div \n        id=\"AlertMessage\" \n        className={\"AlertMessage modal\" + (open ? \" fade show\" : \"\")}\n        tabIndex=\"-1\" \n        role=\"dialog\"\n        style={{\n          display: (open ? \"block\" : \"none\")\n        }}\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">{title}</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={(e)=>handleClose()}>\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <p>{props.message}</p>\n            </div>\n            {/* <div className=\"modal-footer\">\n              <button \n                type=\"button\" \n                className=\"btn btn-secondary\" \n                data-dismiss=\"modal\"\n                onClick={(e)=>handleClose()}\n                >\n                  Chiudi\n                </button>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\ttype: state.alertMessage.type,\n\t\tmessage: state.alertMessage.message\n\t}\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetAlertMessage: () => {\n      dispatch(AlertMessageAction.reset());\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertMessage);"]},"metadata":{},"sourceType":"module"}