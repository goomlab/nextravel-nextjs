{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { MakeStore, createWrapper, Context, HYDRATE } from 'next-redux-wrapper'; // import auth from './packages/CloudShopOne/Reducers/AuthReducer'\n// export default createStore(\n//   combineReducers({\n//     alertMessage: alertMessage,\n//     auth: auth,\n//     globalSearch: globalSearch,\n//     shopAppBar: shopAppBar,\n//     categoryAppBar: categoryAppBar\n//   }),\n//   {},\n//   applyMiddleware(reduxThunk)\n// );\n// create a makeStore function\n\nexport const makeStore = context => createStore(combineReducers({\n  alertMessage: alertMessage,\n  auth: auth,\n  globalSearch: globalSearch,\n  shopAppBar: shopAppBar,\n  categoryAppBar: categoryAppBar,\n  cart: cart\n}), {}, composeWithDevTools(applyMiddleware(reduxThunk))); // export an assembled wrapper\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/store.js"],"names":["createStore","combineReducers","applyMiddleware","reduxThunk","composeWithDevTools","MakeStore","createWrapper","Context","HYDRATE","makeStore","context","alertMessage","auth","globalSearch","shopAppBar","categoryAppBar","cart","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,SAAR,EAAmBC,aAAnB,EAAkCC,OAAlC,EAA2CC,OAA3C,QAAyD,oBAAzD,C,CAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,OAAO,MAAMC,SAAS,GAAGC,OAAO,IAAIV,WAAW,CAC3CC,eAAe,CAAC;AAChBU,EAAAA,YAAY,EAAEA,YADE;AAEhBC,EAAAA,IAAI,EAAEA,IAFU;AAGhBC,EAAAA,YAAY,EAAEA,YAHE;AAIhBC,EAAAA,UAAU,EAAEA,UAJI;AAKhBC,EAAAA,cAAc,EAAEA,cALA;AAMhBC,EAAAA,IAAI,EAAEA;AANU,CAAD,CAD4B,EAS7C,EAT6C,EAU7CZ,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAV0B,CAAxC,C,CAaP;;AACA,OAAO,MAAMc,OAAO,GAAGX,aAAa,CAACG,SAAD,EAAY;AAACS,EAAAA,KAAK,EAAE;AAAR,CAAZ,CAA7B","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {MakeStore, createWrapper, Context, HYDRATE} from 'next-redux-wrapper';\n\n// import auth from './packages/CloudShopOne/Reducers/AuthReducer'\n\n\n// export default createStore(\n//   combineReducers({\n//     alertMessage: alertMessage,\n//     auth: auth,\n//     globalSearch: globalSearch,\n//     shopAppBar: shopAppBar,\n//     categoryAppBar: categoryAppBar\n//   }),\n//   {},\n//   applyMiddleware(reduxThunk)\n// );\n\n\n// create a makeStore function\nexport const makeStore = context => createStore(\n    combineReducers({\n    alertMessage: alertMessage,\n    auth: auth,\n    globalSearch: globalSearch,\n    shopAppBar: shopAppBar,\n    categoryAppBar: categoryAppBar,\n    cart: cart\n  }),\n  {},\n  composeWithDevTools(applyMiddleware(reduxThunk))\n);\n\n// export an assembled wrapper\nexport const wrapper = createWrapper(makeStore, {debug: true});"]},"metadata":{},"sourceType":"module"}