{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseAction from '~/packages/BaseAction';\nimport PageLoaderAction from '~/packages/Base/actions/PageLoaderAction';\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction';\nimport HotelService from '../services/HotelService';\nexport var hotelConsts = {\n  ITEMS: 'HOTEL_LIST_ITEMS',\n  RESET_ITEMS: 'HOTEL_LIST_RESET_ITEMS' // RESET_ITEM: 'PRACTICE_BY_GUEST_RESET_ITEM',\n  // GET_CLIENT_IP: 'PRACTICE_BY_GUEST_GET_CLIENT_IP',\n  // CREATE: 'PRACTICE_BY_GUEST_CREATE',\n\n};\n\nvar HotelAction = /*#__PURE__*/function (_BaseAction) {\n  _inherits(HotelAction, _BaseAction);\n\n  var _super = _createSuper(HotelAction);\n\n  function HotelAction() {\n    var _this;\n\n    _classCallCheck(this, HotelAction);\n\n    _this = _super.call(this);\n    _this.service = new HotelService();\n    _this.consts = hotelConsts;\n    return _this;\n  }\n\n  _createClass(HotelAction, [{\n    key: \"query\",\n    value: function query(params) {\n      var _this2 = this;\n\n      return function (dispatch) {\n        dispatch(PageLoaderAction.show());\n\n        _this2.service.query(params).then(function (response) {\n          console.log('response data', response.data);\n          dispatch({\n            type: _this2.consts.ITEMS,\n            items: response.data\n          });\n          dispatch(PageLoaderAction.hide());\n        })[\"catch\"](function (error) {\n          dispatch({\n            type: _this2.consts.RESET_ITEMS,\n            items: []\n          });\n          dispatch(PageLoaderAction.hide());\n        });\n      };\n    }\n  }]);\n\n  return HotelAction;\n}(BaseAction);\n\nexport { HotelAction as default };","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/packages/TravelgoOne/actions/HotelAction.js"],"names":["BaseAction","PageLoaderAction","AlertMessageAction","HotelService","hotelConsts","ITEMS","RESET_ITEMS","HotelAction","service","consts","params","dispatch","show","query","then","response","console","log","data","type","items","hide","error"],"mappings":";;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,KAAK,EAAE,kBADkB;AAEzBC,EAAAA,WAAW,EAAE,wBAFY,CAGzB;AACA;AACA;;AALyB,CAApB;;IAQcC,W;;;;;AACnB,yBAAc;AAAA;;AAAA;;AACd;AACA,UAAKC,OAAL,GAAe,IAAIL,YAAJ,EAAf;AACA,UAAKM,MAAL,GAAcL,WAAd;AAHc;AAIb;;;;0BAIKM,M,EAAQ;AAAA;;AACZ,aAAO,UAACC,QAAD,EAAc;AACnBA,QAAAA,QAAQ,CAACV,gBAAgB,CAACW,IAAjB,EAAD,CAAR;;AACA,QAAA,MAAI,CAACJ,OAAL,CAAaK,KAAb,CAAmBH,MAAnB,EACCI,IADD,CACM,UAAAC,QAAQ,EAAI;AAACC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAAQ,CAACG,IAAtC;AACjBP,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,IAAI,EAAE,MAAI,CAACV,MAAL,CAAYJ,KADX;AAEPe,YAAAA,KAAK,EAAEL,QAAQ,CAACG;AAFT,WAAD,CAAR;AAIAP,UAAAA,QAAQ,CAACV,gBAAgB,CAACoB,IAAjB,EAAD,CAAR;AACD,SAPD,WAQO,UAAAC,KAAK,EAAI;AACdX,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,IAAI,EAAE,MAAI,CAACV,MAAL,CAAYH,WADX;AAEPc,YAAAA,KAAK,EAAE;AAFA,WAAD,CAAR;AAIAT,UAAAA,QAAQ,CAACV,gBAAgB,CAACoB,IAAjB,EAAD,CAAR;AACD,SAdD;AAeD,OAjBD;AAkBD;;;;EA5BsCrB,U;;SAApBO,W","sourcesContent":["import BaseAction from '~/packages/BaseAction'\nimport PageLoaderAction from '~/packages/Base/actions/PageLoaderAction'\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction'\nimport HotelService from '../services/HotelService'\n\nexport const hotelConsts = {\n  ITEMS: 'HOTEL_LIST_ITEMS',\n  RESET_ITEMS: 'HOTEL_LIST_RESET_ITEMS',\n  // RESET_ITEM: 'PRACTICE_BY_GUEST_RESET_ITEM',\n  // GET_CLIENT_IP: 'PRACTICE_BY_GUEST_GET_CLIENT_IP',\n  // CREATE: 'PRACTICE_BY_GUEST_CREATE',\n}\n\nexport default class HotelAction extends BaseAction {\n  constructor() {\n\t\tsuper();\n\t\tthis.service = new HotelService();\n\t\tthis.consts = hotelConsts;\n  }\n\n\n\n  query(params) {\n    return (dispatch) => {\n      dispatch(PageLoaderAction.show())\n      this.service.query(params)\n      .then(response => {console.log('response data', response.data)\n        dispatch({\n          type: this.consts.ITEMS,\n          items: response.data\n        })\n        dispatch(PageLoaderAction.hide())\n      })\n      .catch(error => {\n        dispatch({\n          type: this.consts.RESET_ITEMS,\n          items: []\n        })\n        dispatch(PageLoaderAction.hide())\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}