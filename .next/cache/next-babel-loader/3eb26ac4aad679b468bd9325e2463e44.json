{"ast":null,"code":"import React from 'react';\nimport moment from 'moment';\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\n\nconst createSitemap = models => `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n        ${models.map((model, index) => {\n  let updatedAt = moment(model.updated_at, \"DD/MM/YYYY hh:mm:ss\").toISOString(); // 12/03/2021 17:05:06  -->  2021-02-17T11:39:04+00:00\n\n  return `\n                    <url>\n                        <loc>${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}</loc>\n                        <lastmod>${updatedAt}</lastmod>\n                    </url>\n                `;\n}).join('')}\n    </urlset>\n    `; // class Sitemap extends React.Component {\n//   static async getInitialProps({ res }) {\n//     let hotelService = new HotelService();\n//     let models = await hotelService.all() || [];\n//     // const request = await fetch(EXTERNAL_DATA_URL);\n//     // const posts = await request.json();\n//     res.setHeader('Content-Type', 'text/xml');\n//     res.write(createSitemap(models));\n//     res.end();\n//   }\n// }\n\n\nconst Sitemap = props => {};\n\nSitemap.getInitialProps = async ({\n  res\n}) => {\n  let hotels = [];\n\n  try {\n    let hotelService = new HotelService();\n    hotels = await hotelService.all();\n  } catch (e) {\n    console.log('error', e);\n  }\n\n  res.setHeader('Content-Type', 'text/xml');\n  res.write(createSitemap(models));\n  res.end();\n};\n\nexport default Sitemap;","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap/accommodations.js"],"names":["React","moment","HotelService","createSitemap","models","map","model","index","updatedAt","updated_at","toISOString","process","env","app_url","slug","it","join","Sitemap","props","getInitialProps","res","hotels","hotelService","all","e","console","log","setHeader","write","end"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,YAAP,MAAyB,8CAAzB;;AAEA,MAAMC,aAAa,GAAIC,MAAD,IAAa;AACnC;AACA,UAAUA,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,MAAIC,SAAS,GAAGP,MAAM,CAACK,KAAK,CAACG,UAAP,EAAmB,qBAAnB,CAAN,CAAgDC,WAAhD,EAAhB,CAD2B,CACoD;;AAC/E,SAAQ;AACpB;AACA,+BAAgC,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,wBAAuBP,KAAK,CAACQ,IAAN,CAAWC,EAAG,EAAE;AAC7F,mCAAmCP,SAAU;AAC7C;AACA,iBALY;AAMD,CARD,EASCQ,IATD,CASM,EATN,CASU;AACpB;AACA,KAbA,C,CAeA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW,CAE1B,CAFD;;AAIAD,OAAO,CAACE,eAAR,GAA0B,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAiB;AACzC,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAI;AACF,QAAIC,YAAY,GAAG,IAAIpB,YAAJ,EAAnB;AACAmB,IAAAA,MAAM,GAAG,MAAMC,YAAY,CAACC,GAAb,EAAf;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,CAArB;AACD;;AAEDJ,EAAAA,GAAG,CAACO,SAAJ,CAAc,cAAd,EAA8B,UAA9B;AACAP,EAAAA,GAAG,CAACQ,KAAJ,CAAUzB,aAAa,CAACC,MAAD,CAAvB;AACAgB,EAAAA,GAAG,CAACS,GAAJ;AACD,CAZD;;AAcA,eAAeZ,OAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\n\nconst createSitemap = (models) => `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n        ${models.map((model, index) => {\n            let updatedAt = moment(model.updated_at, \"DD/MM/YYYY hh:mm:ss\").toISOString(); // 12/03/2021 17:05:06  -->  2021-02-17T11:39:04+00:00\n            return `\n                    <url>\n                        <loc>${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}</loc>\n                        <lastmod>${updatedAt}</lastmod>\n                    </url>\n                `;\n          })\n          .join('')}\n    </urlset>\n    `;\n\n// class Sitemap extends React.Component {\n//   static async getInitialProps({ res }) {\n//     let hotelService = new HotelService();\n//     let models = await hotelService.all() || [];\n\n//     // const request = await fetch(EXTERNAL_DATA_URL);\n//     // const posts = await request.json();\n\n//     res.setHeader('Content-Type', 'text/xml');\n//     res.write(createSitemap(models));\n//     res.end();\n//   }\n// }\n\nconst Sitemap = (props) => {\n\n}\n\nSitemap.getInitialProps = async ({res}) => {\n  let hotels = [];\n  try {\n    let hotelService = new HotelService();\n    hotels = await hotelService.all();\n  } catch (e) {\n    console.log('error', e)\n  }\n\n  res.setHeader('Content-Type', 'text/xml');\n  res.write(createSitemap(models));\n  res.end();\n};\n\nexport default Sitemap;"]},"metadata":{},"sourceType":"module"}