{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { MakeStore, createWrapper, Context, HYDRATE } from 'next-redux-wrapper';\nimport alertMessage from './packages/Base/reducers/AlertMessageReducer';\nimport pageLoader from './packages/Base/reducers/PageLoaderReducer';\nimport practiceByGuest from './packages/TravelgoOne/reducers/PracticeByGuestReducer';\nimport newsletter from './packages/TravelgoOne/reducers/NewsletterReducer'; // create a makeStore function\n\nexport var makeStore = function makeStore(context) {\n  return createStore(combineReducers({\n    alertMessage: alertMessage,\n    pageLoader: pageLoader,\n    practiceByGuest: practiceByGuest,\n    newsletter: newsletter\n  }), {}, composeWithDevTools(applyMiddleware(reduxThunk)));\n}; // export an assembled wrapper\n\nexport var wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":null,"metadata":{},"sourceType":"module"}