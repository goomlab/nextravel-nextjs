{"ast":null,"code":"import BaseAction from '~/packages/BaseAction';\nimport PageLoaderAction from '~/packages/Base/actions/PageLoaderAction';\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction';\nimport HotelService from '../services/HotelService';\nexport const hotelConsts = {\n  ITEMS: 'HOTEL_LIST_ITEMS',\n  RESET_ITEMS: 'HOTEL_LIST_RESET_ITEMS' // RESET_ITEM: 'PRACTICE_BY_GUEST_RESET_ITEM',\n  // GET_CLIENT_IP: 'PRACTICE_BY_GUEST_GET_CLIENT_IP',\n  // CREATE: 'PRACTICE_BY_GUEST_CREATE',\n\n};\nexport default class HotelAction extends BaseAction {\n  constructor() {\n    super();\n    this.service = new HotelService();\n    this.consts = hotelConsts;\n  }\n\n  query(params) {\n    return dispatch => {\n      this.service.query(params).then(response => {\n        dispatch({\n          type: this.consts.ITEMS,\n          items: response.data\n        });\n      }).catch(error => {\n        dispatch({\n          type: this.consts.RESET_ITEMS,\n          items: []\n        });\n      });\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/packages/TravelgoOne/actions/HotelAction.js"],"names":["BaseAction","PageLoaderAction","AlertMessageAction","HotelService","hotelConsts","ITEMS","RESET_ITEMS","HotelAction","constructor","service","consts","query","params","dispatch","then","response","type","items","data","catch","error"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,KAAK,EAAE,kBADkB;AAEzBC,EAAAA,WAAW,EAAE,wBAFY,CAGzB;AACA;AACA;;AALyB,CAApB;AAQP,eAAe,MAAMC,WAAN,SAA0BP,UAA1B,CAAqC;AAClDQ,EAAAA,WAAW,GAAG;AACd;AACA,SAAKC,OAAL,GAAe,IAAIN,YAAJ,EAAf;AACA,SAAKO,MAAL,GAAcN,WAAd;AACC;;AAIDO,EAAAA,KAAK,CAACC,MAAD,EAAS;AACZ,WAAQC,QAAD,IAAc;AACnB,WAAKJ,OAAL,CAAaE,KAAb,CAAmBC,MAAnB,EACCE,IADD,CACMC,QAAQ,IAAI;AAChBF,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAE,KAAKN,MAAL,CAAYL,KADX;AAEPY,UAAAA,KAAK,EAAEF,QAAQ,CAACG;AAFT,SAAD,CAAR;AAID,OAND,EAOCC,KAPD,CAOOC,KAAK,IAAI;AACdP,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAE,KAAKN,MAAL,CAAYJ,WADX;AAEPW,UAAAA,KAAK,EAAE;AAFA,SAAD,CAAR;AAID,OAZD;AAaD,KAdD;AAeD;;AAzBiD","sourcesContent":["import BaseAction from '~/packages/BaseAction'\nimport PageLoaderAction from '~/packages/Base/actions/PageLoaderAction'\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction'\nimport HotelService from '../services/HotelService'\n\nexport const hotelConsts = {\n  ITEMS: 'HOTEL_LIST_ITEMS',\n  RESET_ITEMS: 'HOTEL_LIST_RESET_ITEMS',\n  // RESET_ITEM: 'PRACTICE_BY_GUEST_RESET_ITEM',\n  // GET_CLIENT_IP: 'PRACTICE_BY_GUEST_GET_CLIENT_IP',\n  // CREATE: 'PRACTICE_BY_GUEST_CREATE',\n}\n\nexport default class HotelAction extends BaseAction {\n  constructor() {\n\t\tsuper();\n\t\tthis.service = new HotelService();\n\t\tthis.consts = hotelConsts;\n  }\n\n\n\n  query(params) {\n    return (dispatch) => {\n      this.service.query(params)\n      .then(response => {\n        dispatch({\n          type: this.consts.ITEMS,\n          items: response.data\n        })\n      })\n      .catch(error => {\n        dispatch({\n          type: this.consts.RESET_ITEMS,\n          items: []\n        })\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}