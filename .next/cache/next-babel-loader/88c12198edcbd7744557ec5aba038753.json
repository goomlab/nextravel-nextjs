{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport BaseService from '../../BaseService';\n\nvar NewsletterService = /*#__PURE__*/function (_BaseService) {\n  _inherits(NewsletterService, _BaseService);\n\n  var _super = _createSuper(NewsletterService);\n\n  function NewsletterService() {\n    _classCallCheck(this, NewsletterService);\n\n    return _super.call(this, '/newsletter');\n  }\n\n  _createClass(NewsletterService, [{\n    key: \"getClientIp\",\n    value: function getClientIp() {\n      // return axios.get(\"https://ifconfig.co/ip\", this.config)\n      return axios.get(\"/get-client-ip\", this.config).then(function (response) {\n        return Promise.resolve(response);\n      })[\"catch\"](function (error) {\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"sendinblue_createContact\",\n    value: function sendinblue_createContact(params) {\n      return axios.post(\"\".concat(this.url, \"/sendinblue/contacts\"), params, this.config).then(function (response) {\n        return Promise.resolve(response);\n      })[\"catch\"](function (error) {\n        return Promise.reject(error);\n      });\n    }\n  }]);\n\n  return NewsletterService;\n}(BaseService);\n\nexport { NewsletterService as default };","map":null,"metadata":{},"sourceType":"module"}