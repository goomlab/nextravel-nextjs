{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/Partials/BookingForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport HotelServiceService from '~/packages/TravelgoOne/services/HotelServiceService';\nimport PracticeByGuestAction from '~/packages/TravelgoOne/actions/PracticeByGuestAction';\nimport MyDateRangePicker from '../MyDateRangePicker';\n\nvar BookingForm = function BookingForm(props) {\n  _s();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      treatments = _React$useState2[0],\n      setTreatments = _React$useState2[1]; // let priceList = {}\n  // for (const [roomTypeName, roomTypeContent] of Object.entries(period.viewPeriodPrices)){\n  //   priceList[roomTypeName] = {};\n  //   if( roomTypeContent.prices ){\n  //     for (const [key, treatmentObj] of Object.entries(roomTypeContent.prices)) {\n  //       priceList[roomTypeName][key] = {\n  //         n1: (treatmentObj.n1) ? treatmentObj.n1 : null,\n  //         n2: (treatmentObj.n2) ? treatmentObj.n2 : null,\n  //         n3: (treatmentObj.n3) ? treatmentObj.n3 : null,\n  //         n4: (treatmentObj.n4) ? treatmentObj.n4 : null,\n  //         n5: (treatmentObj.n5) ? treatmentObj.n5 : null,\n  //         n6: (treatmentObj.n6) ? treatmentObj.n6 : null,\n  //         n7: (treatmentObj.n7) ? treatmentObj.n7 : null,\n  //       };\n  //     }\n  //   }\n  // }\n\n  /**\n   * ComponentDidUpdate\n   */\n\n\n  React.useEffect(function () {\n    //console.log('componentDidUpdate', props.practice, props.query)\n    var newState = Object.assign({}, props.practice);\n    props.setPractice(_objectSpread(_objectSpread({}, newState), {}, {\n      hotel_id: props.hotel.id,\n      rate_plan_id: props.rateplan.id,\n      checkin: props.query.checkin || null,\n      checkout: props.query.checkout || null,\n      treatment: props.query.treatment || null,\n      room_type_id: props.query.room_type_id || null\n    })); // calcolo i trattamenti della camera scelta\n\n    if (props.query.room_type_id != null && props.query.room_type_id > 0) {\n      var _treatments = [];\n\n      for (var _i = 0, _Object$entries = Object.entries(props.period.viewPeriodPrices); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            roomTypeName = _Object$entries$_i[0],\n            roomTypeContent = _Object$entries$_i[1];\n\n        if (roomTypeContent.room_type.id == props.query.room_type_id) {\n          for (var _i2 = 0, _Object$entries2 = Object.entries(roomTypeContent.prices); _i2 < _Object$entries2.length; _i2++) {\n            var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n                treatmentKey = _Object$entries2$_i[0],\n                treatmentPrices = _Object$entries2$_i[1];\n\n            _treatments.push(treatmentKey);\n          }\n        }\n      }\n\n      setTreatments(_treatments);\n    }\n  }, [props.query]);\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      transfers = _React$useState4[0],\n      setTransfers = _React$useState4[1];\n\n  React.useEffect(function () {\n    // props.getClientIp();\n    var service = new HotelServiceService();\n    service.all({\n      type: {\n        key: 'type',\n        compare: '=',\n        value: 'transfer'\n      }\n    }).then(function (response) {\n      setTransfers(response);\n    });\n  }, []);\n\n  var _onChange = function onChange(e) {\n    e.persist();\n    var newState = Object.assign({}, props.practice);\n\n    switch (e.target.name) {\n      case 'room_type_id':\n        var _flag = false;\n\n        for (var _i3 = 0, _Object$entries3 = Object.entries(props.period.viewPeriodPrices); _i3 < _Object$entries3.length; _i3++) {\n          var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n              roomTypeName = _Object$entries3$_i[0],\n              roomTypeContent = _Object$entries3$_i[1];\n\n          if (roomTypeContent.room_type.id == e.target.value) {\n            var _treatments2 = [];\n\n            for (var _i4 = 0, _Object$entries4 = Object.entries(roomTypeContent.prices); _i4 < _Object$entries4.length; _i4++) {\n              var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i4], 2),\n                  treatmentKey = _Object$entries4$_i[0],\n                  treatmentPrices = _Object$entries4$_i[1];\n\n              _treatments2.push(treatmentKey);\n            }\n\n            setTreatments(_treatments2);\n            newState.customer[e.target.name] = e.target.value;\n            _flag = true;\n            break;\n          }\n        }\n\n        if (!_flag) setTreatments([]);\n        break;\n\n      case 'privacy':\n        newState[e.target.name] = e.target.checked ? 1 : 0;\n        break;\n\n      case 'first_name':\n      case 'last_name':\n      case 'email':\n      case 'mobile':\n        newState.customer[e.target.name] = e.target.value;\n        break;\n\n      default:\n        newState[e.target.name] = e.target.value;\n        break;\n    }\n\n    props.setPractice(newState);\n  };\n\n  var onChangeDatePicker = function onChangeDatePicker(startDate, endDate) {\n    var newState = Object.assign({}, props.practice);\n    newState.checkin = startDate.format('YYYY-MM-DD');\n    newState.checkout = endDate.format('YYYY-MM-DD');\n    props.setPractice(newState);\n  };\n  /**\n   * Room\n   */\n\n\n  var onAddRoom = function onAddRoom() {\n    var newState = Object.assign({}, props.practice);\n    newState.rooms.push({\n      adults: 2,\n      childrens: 0,\n      childrenAges: []\n    });\n    props.setPractice(newState);\n  };\n\n  var onDeleteRoom = function onDeleteRoom(index) {\n    var newState = Object.assign({}, props.practice);\n    newState.rooms.splice(index, 1);\n    props.setPractice(newState);\n  };\n\n  var onAddRoomChildren = function onAddRoomChildren(e, index) {\n    var newState = Object.assign({}, props.practice);\n    newState.rooms[index].childrenAges.push(e.target.value);\n    newState.rooms[index].childrenAges.sort();\n    props.setPractice(newState);\n  };\n\n  var onChangeRoom = function onChangeRoom(e, index) {\n    e.persist();\n    var newState = Object.assign({}, props.practice);\n\n    switch (e.currentTarget.dataset.name) {\n      case \"childrens\":\n        if (parseInt(e.currentTarget.value) == 0) {\n          // reset childrenAges\n          newState.rooms[index].childrenAges = [];\n        } else if (newState.rooms[index].childrens > parseInt(e.currentTarget.value)) {\n          // rimuovo gli utlimi elementi\n          newState.rooms[index].childrenAges.splice(e.currentTarget.value);\n        } else {\n          // aggiungo age con valore 0\n          for (var j = newState.rooms[index].childrens; j < parseInt(e.currentTarget.value); j++) {\n            newState.rooms[index].childrenAges.push(-1);\n          }\n        }\n\n        newState.rooms[index].childrens = e.currentTarget.value;\n        break;\n\n      case \"ageChildrens\":\n        var indexChild = e.currentTarget.dataset.index;\n        newState.rooms[index].childrenAges[indexChild] = e.currentTarget.value;\n        newState.rooms[index].childrenAges.sort(function (a, b) {\n          return b - a;\n        }); // sort desc\n\n        break;\n\n      default:\n        newState.rooms[index][e.currentTarget.dataset.name] = e.currentTarget.value;\n        break;\n    }\n\n    props.setPractice(newState);\n  };\n  /**\n   * Submit\n   */\n\n\n  var handleSubmit = function handleSubmit() {\n    props.createPractice(props.practice);\n  };\n  /**\n   * Validate\n   */\n\n\n  var formik = useFormik({\n    initialValues: {\n      // checkin: props.checkin || \"\",\n      // checkout: props.practice.checkout || \"\",\n      treatment: props.practice.treatment || \"\",\n      room_type_id: props.practice.room_type_id || \"\",\n      first_name: props.practice.customer.first_name || \"\",\n      last_name: props.practice.customer.last_name || \"\",\n      email: props.practice.customer.email || \"\",\n      mobile: props.practice.customer.mobile || \"\",\n      privacy: props.practice.privacy || 0\n    },\n    validationSchema: yup.object().shape({\n      // checkin: yup.string().required('Campo non valido'),\n      // checkout: yup.string().required('Campo non valido'),\n      treatment: yup.string().required('Campo non valido'),\n      room_type_id: yup.string().required('Campo non valido'),\n      first_name: yup.string().required('Campo non valido'),\n      last_name: yup.string().required('Campo non valido'),\n      email: yup.string().required('Campo non valido'),\n      mobile: yup.string().required('Campo non valido'),\n      privacy: yup.number().min(1, 'Campo non valido').max(1, 'Campo non valido')\n    }),\n    enableReinitialize: true,\n    onSubmit: handleSubmit\n  });\n  /**\n   * Render\n   */\n\n  var renderRooms = function renderRooms() {\n    var _html = [];\n\n    var _loop = function _loop(i) {\n      // adults\n      _htmlAdultOptions = [];\n\n      _htmlAdultOptions.push(__jsx(\"option\", {\n        key: 0,\n        value: \"0\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 30\n        }\n      }, \"Adulti\"));\n\n      for (j = 1; j <= 4; j++) {\n        _htmlAdultOptions.push(__jsx(\"option\", {\n          key: j,\n          value: j,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }\n        }, j));\n      } // childrens\n\n\n      _htmlChildrenOptions = [];\n\n      _htmlChildrenOptions.push(__jsx(\"option\", {\n        key: 0,\n        value: \"0\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 33\n        }\n      }, \"Bambini\"));\n\n      for (j = 1; j <= 4; j++) {\n        _htmlChildrenOptions.push(__jsx(\"option\", {\n          key: j,\n          value: j,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }\n        }, j));\n      } // children ages\n\n\n      _ageOptions = [];\n\n      _ageOptions.push(__jsx(\"option\", {\n        key: -1,\n        value: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 24\n        }\n      }, \"Et\\xE0\"));\n\n      for (j = 0; j <= 12; j++) {\n        _ageOptions.push(__jsx(\"option\", {\n          key: j,\n          value: j,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 11\n          }\n        }, j));\n      }\n\n      var _htmlChildrenAges = [];\n\n      for (var _j in props.practice.rooms[i].childrenAges) {\n        _htmlChildrenAges.push(__jsx(\"div\", {\n          key: _j,\n          className: \"col-lg-3\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 11\n          }\n        }, __jsx(\"div\", {\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }\n        }, __jsx(\"label\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }\n        }, \"Et\\xE0\"), __jsx(\"select\", {\n          className: \"custom-select\",\n          name: \"childrens_age[]\",\n          \"data-name\": \"ageChildrens\",\n          \"data-index\": _j,\n          value: props.practice.rooms[i].childrenAges[_j] || 0,\n          onChange: function onChange(e) {\n            return onChangeRoom(e, i);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }\n        }, _ageOptions))));\n      }\n\n      _html.push(__jsx(\"div\", {\n        key: i,\n        className: \"row\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }\n      }, i == 0 && __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-green\",\n        onClick: function onClick() {\n          return onAddRoom();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }\n      }, \"+ Camera\"), i > 0 && __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }\n      }, __jsx(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }, \"camera \", __jsx(\"span\", {\n        className: \"room-number\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 31\n        }\n      }, parseInt(i) + 1)), \"\\xA0\\xA0\", __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger btn-sm roomBox_buttonDelete\",\n        onClick: function onClick() {\n          return onDeleteRoom(i);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }\n      }, __jsx(\"i\", {\n        className: \"fas fa-times\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }\n      }))))), __jsx(\"div\", {\n        className: \"col-lg-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }, \"Adulti\"), __jsx(\"select\", {\n        className: \"custom-select\",\n        id: \"adults_\".concat(i),\n        name: \"adults[]\",\n        \"data-name\": \"adults\",\n        value: props.practice.rooms[i].adults || 0,\n        onChange: function onChange(e) {\n          return onChangeRoom(e, i);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }\n      }, \"$\", _htmlAdultOptions))), __jsx(\"div\", {\n        className: \"col-lg-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }\n      }, \"Bambini\"), __jsx(\"select\", {\n        className: \"custom-select\",\n        id: \"childrens_\".concat(i),\n        name: \"childrens[]\",\n        \"data-name\": \"childrens\",\n        value: props.practice.rooms[i].childrens || 0,\n        onChange: function onChange(e) {\n          return onChangeRoom(e, i);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }\n      }, \"$\", _htmlChildrenOptions))), __jsx(\"div\", {\n        className: \"col-lg-4\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"row table_childrenAges\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }\n      }, _htmlChildrenAges))));\n    };\n\n    for (var i in props.practice.rooms) {\n      var _htmlAdultOptions;\n\n      var j;\n\n      var _htmlChildrenOptions;\n\n      var j;\n\n      var _ageOptions;\n\n      var j;\n\n      _loop(i);\n    }\n\n    return _html;\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"needs-validation\" + (formik.errors ? \"was-validated\" : \"\"),\n    noValidate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"box2 form-template-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }, \"Arrivo - Partenza\"), __jsx(MyDateRangePicker, {\n    startDate: props.practice.checkin,\n    endDate: props.practice.checkout,\n    onChange: function onChange(startDate, endDate) {\n      return onChangeDatePicker(startDate, endDate);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-lg-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  }, \"Camera\"), __jsx(\"select\", {\n    className: \"custom-select\" + (formik.errors.treatment ? \" is-invalid\" : \"\"),\n    name: \"room_type_id\",\n    id: \"room_type_id\" // value={props.practice.treatment || ''}\n    // onChange={(e) => onChange(e)}\n    ,\n    value: formik.values.room_type_id || '',\n    onChange: function onChange(e) {\n      _onChange(e);\n\n      formik.handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 15\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }, \"Camera\"), props.period.viewPeriodPrices && Object.entries(props.period.viewPeriodPrices).map(function (_ref, index) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        roomTypeKey = _ref2[0],\n        roomTypeContent = _ref2[1];\n\n    return __jsx(\"option\", {\n      key: index,\n      value: roomTypeContent.room_type.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 19\n      }\n    }, roomTypeContent.room_type.name);\n  })), formik.errors.treatment && __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 19\n    }\n  }, formik.errors.room_type_id))), __jsx(\"div\", {\n    className: \"col-lg-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 15\n    }\n  }, \"Trattamento\"), __jsx(\"select\", {\n    className: \"custom-select\" + (formik.errors.treatment ? \" is-invalid\" : \"\"),\n    name: \"treatment\",\n    id: \"treatment\" // value={props.practice.treatment || ''}\n    // onChange={(e) => onChange(e)}\n    ,\n    value: formik.values.treatment || '',\n    onChange: function onChange(e) {\n      _onChange(e);\n\n      formik.handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 15\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, \"Trattamento\"), treatments && treatments.map(function (key) {\n    return __jsx(\"option\", {\n      key: key,\n      value: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 19\n      }\n    }, key);\n  })), formik.errors.treatment && __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 19\n    }\n  }, formik.errors.treatment))), __jsx(\"div\", {\n    className: \"col-lg-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 15\n    }\n  }, \"Transfer\"), __jsx(\"select\", {\n    className: \"custom-select\",\n    name: \"transfer_id\",\n    id: \"tranfer_id\",\n    value: props.practice.transfer_id || '',\n    onChange: function onChange(e) {\n      return _onChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 15\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 17\n    }\n  }, \"Transfer\"), transfers.map(function (obj, index) {\n    return __jsx(\"option\", {\n      key: index,\n      value: obj.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 19\n      }\n    }, obj.name);\n  }))))), __jsx(\"div\", {\n    className: \"room-box\",\n    id: \"roomBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }\n  }, renderRooms())), __jsx(\"div\", {\n    className: \"box3 form-template-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 15\n    }\n  }, \"Richiedi il tuo preventivo gratuitamente\"))), __jsx(\"div\", {\n    className: \"col-lg-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\" + (formik.errors.first_name ? \" is-invalid\" : \"\"),\n    id: \"first_name\",\n    name: \"first_name\",\n    placeholder: \"Nome\" // value={props.practice.customer.first_name || \"\"}\n    // onChange={(e)=>onChange(e)}\n    ,\n    value: formik.values.first_name || '',\n    onChange: function onChange(e) {\n      _onChange(e);\n\n      formik.handleChange(e);\n    } // reuired=\"true\"\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 15\n    }\n  }), formik.errors.first_name && __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 19\n    }\n  }, formik.errors.first_name)), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\" + (formik.errors.last_name ? \" is-invalid\" : \"\"),\n    id: \"last_name\",\n    name: \"last_name\",\n    placeholder: \"Cognome\" // value={props.practice.customer.last_name || \"\"}\n    // onChange={(e)=>onChange(e)}\n    ,\n    value: formik.values.last_name || '',\n    onChange: function onChange(e) {\n      _onChange(e);\n\n      formik.handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 15\n    }\n  }), formik.errors.last_name && __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 19\n    }\n  }, formik.errors.last_name)), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"email\",\n    className: \"form-control\" + (formik.errors.email ? \" is-invalid\" : \"\"),\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Email\" // defaultValue={props.practice.customer.email || \"\"}\n    // onChange={(e)=>onChange(e)}\n    ,\n    value: formik.values.email || '',\n    onChange: function onChange(e) {\n      _onChange(e);\n\n      formik.handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 15\n    }\n  }), formik.errors.email && __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 19\n    }\n  }, formik.errors.email)), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\" + (formik.errors.mobile ? \" is-invalid\" : \"\"),\n    id: \"mobile\",\n    name: \"mobile\",\n    placeholder: \"Cellulare\" // defaultValue={props.practice.customer.mobile || \"\"}\n    // onChange={(e)=>onChange(e)}\n    ,\n    value: formik.values.mobile || '',\n    onChange: function onChange(e) {\n      _onChange(e);\n\n      formik.handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 15\n    }\n  }), formik.errors.mobile && __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 19\n    }\n  }, formik.errors.mobile))), __jsx(\"div\", {\n    className: \"col-lg-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }\n  }, __jsx(\"textarea\", {\n    className: \"form-control\",\n    id: \"message\",\n    name: \"message\",\n    placeholder: \"Messaggio\",\n    value: props.practice.message || \"\",\n    onChange: function onChange(e) {\n      return _onChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"custom-control-input\" + (formik.errors.privacy ? \" is-invalid\" : \"\"),\n    name: \"privacy\",\n    id: \"privacy\" // value={props.practice.privacy || 0}\n    // onChange={(e)=>onChange(e)}\n    ,\n    value: \"1\",\n    checked: formik.values.privacy == 1 ? 1 : 0,\n    onChange: function onChange(e) {\n      _onChange(e);\n\n      formik.handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"privacy\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 17\n    }\n  }, \"Acconsento al trattamento dei miei dati ai sensi dell\\u2019informativa sulla \", __jsx(\"a\", {\n    href: \"/privacy-policy\",\n    target: \"_blank\",\n    rel: \"nofollow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 147\n    }\n  }, \"Privacy\"), \".\"), formik.errors.privacy && __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 19\n    }\n  }, formik.errors.privacy))), __jsx(\"div\", {\n    className: \"form-group text-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn-submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 17\n    }\n  }, \"richiedi disponibilit\\xE0\")))))));\n};\n\n_s(BookingForm, \"WAJj+/aTsfiV5q+jNh+VdA5F5ho=\", false, function () {\n  return [useFormik];\n});\n\n_c = BookingForm;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    practice: state.practiceByGuest.item\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  var practiceByGuestAction = new PracticeByGuestAction();\n  return {\n    setPractice: function setPractice(data) {\n      dispatch(practiceByGuestAction.setItem(data));\n    },\n    resetPractice: function resetPractice() {\n      dispatch(practiceByGuestAction.resetItem());\n    },\n    getClientIp: function getClientIp() {\n      dispatch(practiceByGuestAction.getClientIp());\n    },\n    createPractice: function createPractice(data) {\n      dispatch(practiceByGuestAction.create(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/Partials/BookingForm.js"],"names":["React","connect","moment","yup","useFormik","HotelServiceService","PracticeByGuestAction","MyDateRangePicker","BookingForm","props","useState","treatments","setTreatments","useEffect","newState","Object","assign","practice","setPractice","hotel_id","hotel","id","rate_plan_id","rateplan","checkin","query","checkout","treatment","room_type_id","entries","period","viewPeriodPrices","roomTypeName","roomTypeContent","room_type","prices","treatmentKey","treatmentPrices","push","transfers","setTransfers","service","all","type","key","compare","value","then","response","onChange","e","persist","target","name","_flag","customer","checked","onChangeDatePicker","startDate","endDate","format","onAddRoom","rooms","adults","childrens","childrenAges","onDeleteRoom","index","splice","onAddRoomChildren","sort","onChangeRoom","currentTarget","dataset","parseInt","j","indexChild","a","b","handleSubmit","createPractice","formik","initialValues","first_name","last_name","email","mobile","privacy","validationSchema","object","shape","string","required","number","min","max","enableReinitialize","onSubmit","renderRooms","_html","i","_htmlAdultOptions","_htmlChildrenOptions","_ageOptions","_htmlChildrenAges","errors","values","handleChange","map","roomTypeKey","transfer_id","obj","message","mapStateToProps","state","practiceByGuest","item","mapDispatchToProps","dispatch","practiceByGuestAction","data","setItem","resetPractice","resetItem","getClientIp","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport * as yup from 'yup'\nimport { useFormik } from 'formik'\n\nimport HotelServiceService from '~/packages/TravelgoOne/services/HotelServiceService'\nimport PracticeByGuestAction from '~/packages/TravelgoOne/actions/PracticeByGuestAction'\n\nimport MyDateRangePicker from '../MyDateRangePicker'\n\nconst BookingForm = props => {\n  const [treatments, setTreatments] = React.useState([]);\n\n  // let priceList = {}\n  // for (const [roomTypeName, roomTypeContent] of Object.entries(period.viewPeriodPrices)){\n  //   priceList[roomTypeName] = {};\n  //   if( roomTypeContent.prices ){\n  //     for (const [key, treatmentObj] of Object.entries(roomTypeContent.prices)) {\n  //       priceList[roomTypeName][key] = {\n  //         n1: (treatmentObj.n1) ? treatmentObj.n1 : null,\n  //         n2: (treatmentObj.n2) ? treatmentObj.n2 : null,\n  //         n3: (treatmentObj.n3) ? treatmentObj.n3 : null,\n  //         n4: (treatmentObj.n4) ? treatmentObj.n4 : null,\n  //         n5: (treatmentObj.n5) ? treatmentObj.n5 : null,\n  //         n6: (treatmentObj.n6) ? treatmentObj.n6 : null,\n  //         n7: (treatmentObj.n7) ? treatmentObj.n7 : null,\n  //       };\n  //     }\n  //   }\n  // }\n\n\n  /**\n   * ComponentDidUpdate\n   */\n  React.useEffect(() => {\n    //console.log('componentDidUpdate', props.practice, props.query)\n    let newState = Object.assign({}, props.practice);\n    props.setPractice({\n      ...newState,\n      hotel_id: props.hotel.id,\n      rate_plan_id: props.rateplan.id,\n      checkin: props.query.checkin || null,\n      checkout: props.query.checkout || null,\n      treatment: props.query.treatment || null,\n      room_type_id: props.query.room_type_id || null,\n    })\n\n    // calcolo i trattamenti della camera scelta\n    if( props.query.room_type_id != null && props.query.room_type_id > 0 ){\n      let treatments = [];\n      for (const [roomTypeName, roomTypeContent] of Object.entries(props.period.viewPeriodPrices)){\n        if( roomTypeContent.room_type.id == props.query.room_type_id ) {\n          for (const [treatmentKey, treatmentPrices] of Object.entries(roomTypeContent.prices)){\n            treatments.push(treatmentKey)\n          }\n        }\n      }\n      setTreatments(treatments)\n    }\n    \n  }, [props.query])\n\n  const [transfers, setTransfers] = React.useState([]);\n  React.useEffect(() => {\n    // props.getClientIp();\n\n    let service = new HotelServiceService()\n    service.all({\n      type: {\n        key: 'type',\n        compare: '=',\n        value: 'transfer'\n      }\n    })\n    .then(response => {\n      setTransfers(response)\n    })\n  }, [])\n\n  const onChange = (e) => {\n    e.persist();\n    let newState = Object.assign({}, props.practice);\n    switch( e.target.name ){\n      case 'room_type_id':\n        let _flag = false;\n        for (const [roomTypeName, roomTypeContent] of Object.entries(props.period.viewPeriodPrices)){\n          if( roomTypeContent.room_type.id == e.target.value ) {\n            let treatments = [];\n            for (const [treatmentKey, treatmentPrices] of Object.entries(roomTypeContent.prices)){\n              treatments.push(treatmentKey)\n            }\n            setTreatments(treatments)\n            newState.customer[e.target.name] = e.target.value;\n            _flag = true;\n            break;\n          }\n        }\n        if( !_flag )\n          setTreatments([])\n      break;\n      case 'privacy': \n        newState[e.target.name] = (e.target.checked) ? 1 : 0;\n      break;\n      case 'first_name':\n      case 'last_name':\n      case 'email':\n      case 'mobile':\n        newState.customer[e.target.name] = e.target.value;\n      break;\n      default: newState[e.target.name] = e.target.value; break;\n    }\n    props.setPractice(newState)\n  }\n\n  const onChangeDatePicker = (startDate, endDate) => {\n    let newState = Object.assign({}, props.practice);\n    newState.checkin = startDate.format('YYYY-MM-DD');\n    newState.checkout = endDate.format('YYYY-MM-DD');\n    props.setPractice(newState)\n  }\n\n  /**\n   * Room\n   */\n  const onAddRoom = () => {\n    let newState = Object.assign({}, props.practice);\n    newState.rooms.push({\n      adults: 2,\n      childrens: 0,\n      childrenAges: []\n    });\n    props.setPractice(newState)\n  }\n\n  const onDeleteRoom = (index) => {\n    let newState = Object.assign({}, props.practice);\n    newState.rooms.splice(index, 1);\n    props.setPractice(newState)\n  }\n\n  const onAddRoomChildren = (e, index) => {\n    let newState = Object.assign({}, props.practice);\n    newState.rooms[index].childrenAges.push(e.target.value);\n    newState.rooms[index].childrenAges.sort();\n    props.setPractice(newState)\n  }\n  \n  const onChangeRoom = (e, index) => {\n    e.persist();\n    let newState = Object.assign({}, props.practice);\n    switch( e.currentTarget.dataset.name ) {\n      case \"childrens\":\n        if( parseInt(e.currentTarget.value) == 0 ){\n          // reset childrenAges\n          newState.rooms[index].childrenAges = [];\n        }\n        else if(newState.rooms[index].childrens > parseInt(e.currentTarget.value) ){\n          // rimuovo gli utlimi elementi\n          newState.rooms[index].childrenAges.splice(e.currentTarget.value);\n        }\n        else {\n          // aggiungo age con valore 0\n          for(let j = newState.rooms[index].childrens; j < parseInt(e.currentTarget.value); j++)\n            newState.rooms[index].childrenAges.push(-1);\n        }\n        newState.rooms[index].childrens = e.currentTarget.value;\n      break;\n      case \"ageChildrens\":\n        let indexChild = e.currentTarget.dataset.index;\n        newState.rooms[index].childrenAges[indexChild] = e.currentTarget.value;\n        newState.rooms[index].childrenAges.sort(function(a, b){return b-a}); // sort desc\n      break;\n      default: \n        newState.rooms[index][e.currentTarget.dataset.name] = e.currentTarget.value;  \n      break;\n    }\n    props.setPractice(newState)\n  }\n\n\n  /**\n   * Submit\n   */\n  const handleSubmit = () => {\n    props.createPractice(props.practice)\n  }\n\n\n\n  /**\n   * Validate\n   */\n  const formik =  useFormik({\n    initialValues: {\n      // checkin: props.checkin || \"\",\n      // checkout: props.practice.checkout || \"\",\n      treatment: props.practice.treatment || \"\",\n      room_type_id: props.practice.room_type_id || \"\",\n      first_name: props.practice.customer.first_name || \"\",\n      last_name: props.practice.customer.last_name || \"\",\n      email: props.practice.customer.email || \"\",\n      mobile: props.practice.customer.mobile || \"\",\n      privacy: props.practice.privacy || 0\n    },\n    validationSchema: yup.object().shape({\n      // checkin: yup.string().required('Campo non valido'),\n      // checkout: yup.string().required('Campo non valido'),\n      treatment: yup.string().required('Campo non valido'),\n      room_type_id: yup.string().required('Campo non valido'),\n      first_name: yup.string().required('Campo non valido'),\n      last_name: yup.string().required('Campo non valido'),\n      email: yup.string().required('Campo non valido'),\n      mobile: yup.string().required('Campo non valido'),\n      privacy: yup.number().min(1, 'Campo non valido').max(1, 'Campo non valido'),\n    }),\n    enableReinitialize: true,\n    onSubmit: handleSubmit\n  })\n\n\n  /**\n   * Render\n   */\n\n  const renderRooms = () => {\n    let _html = [];\n\n    for( let i in props.practice.rooms ){\n      // adults\n      var _htmlAdultOptions = [];\n      _htmlAdultOptions.push(<option key={0} value=\"0\">Adulti</option>);\n      for( var j = 1; j <= 4; j++ ) {\n        _htmlAdultOptions.push(\n          <option key={j} value={j}>{j}</option>\n        );\n      }\n\n      // childrens\n      var _htmlChildrenOptions = [];\n      _htmlChildrenOptions.push(<option key={0} value=\"0\">Bambini</option>);\n      for( var j = 1; j <= 4; j++ ) {\n        _htmlChildrenOptions.push(\n          <option key={j} value={j}>{j}</option>\n        );\n      }\n\n      // children ages\n      var _ageOptions = [];\n      _ageOptions.push(<option key={-1} value=\"\">Età</option>);\n      for( var j = 0; j <= 12; j++) {\n        _ageOptions.push(\n          <option key={j} value={j}>{j}</option>\n        );\n      }\n\n      let _htmlChildrenAges = [];\n      for( let j in props.practice.rooms[i].childrenAges ) {\n        _htmlChildrenAges.push(\n          <div key={j} className=\"col-lg-3\">\n            <div className=\"form-group\">\n              <label>Età</label>\n              <select \n                className=\"custom-select\"\n                name=\"childrens_age[]\"\n                data-name=\"ageChildrens\"\n                data-index={j}\n                value={props.practice.rooms[i].childrenAges[j] || 0}\n                onChange={(e)=>onChangeRoom(e,i)}\n              >\n                {_ageOptions}\n              </select>\n            </div>\n          </div>\n        );\n      }\n\n      _html.push(\n      <div key={i} className=\"row\">\n        <div className=\"col-lg-3\">\n          <div className=\"form-group\">\n            {i == 0 &&\n              <button \n                type=\"button\"\n                className=\"btn btn-green\"\n                onClick={()=>onAddRoom()}\n                >\n                  + Camera\n                </button>\n            }\n            {i > 0 &&\n              <React.Fragment>\n                <label>camera <span className=\"room-number\">{parseInt(i)+1}</span></label>\n                &nbsp;&nbsp;\n                <button \n                  type=\"button\"\n                  className=\"btn btn-danger btn-sm roomBox_buttonDelete\"\n                  onClick={()=>onDeleteRoom(i)}\n                >\n                <i className=\"fas fa-times\"></i>\n                </button>\n              </React.Fragment>\n            }\n          </div>\n        </div>\n        <div className=\"col-lg-2\">\n          <div className=\"form-group\">\n            <label>Adulti</label>\n            <select \n            className=\"custom-select\" \n            id={`adults_${i}`} \n            name=\"adults[]\"\n            data-name=\"adults\"\n            value={props.practice.rooms[i].adults || 0}\n            onChange={(e)=>onChangeRoom(e, i)}\n            >\n              ${_htmlAdultOptions}\n            </select>\n          </div>\n        </div>\n        <div className=\"col-lg-2\">\n          <div className=\"form-group\">\n            <label>Bambini</label>\n            <select \n              className=\"custom-select\" \n              id={`childrens_${i}`} \n              name=\"childrens[]\"\n              data-name=\"childrens\"\n              value={props.practice.rooms[i].childrens || 0}\n              onChange={(e)=>onChangeRoom(e, i)} \n            >\n              ${_htmlChildrenOptions}\n            </select>\n          </div>\n        </div>\n        <div className=\"col-lg-4\">\n          <div className=\"row table_childrenAges\">\n            {_htmlChildrenAges}\n          </div>\n        </div>\n      </div>\n      );\n    }\n\n    return _html;\n  }\n\n  return(\n    <React.Fragment>\n    <form onSubmit={formik.handleSubmit} className={\"needs-validation\" + (formik.errors ? \"was-validated\" : \"\")} noValidate>\n      <div className=\"box2 form-template-1\">\n        <div className=\"row\">\n          <div className=\"col-lg-3\">\n            <div className=\"form-group\">\n              <label>Arrivo - Partenza</label>\n              <MyDateRangePicker \n                startDate={props.practice.checkin}\n                endDate={props.practice.checkout}\n                onChange={(startDate, endDate)=>onChangeDatePicker(startDate, endDate)}\n                />\n            </div>\n          </div>\n          {/* <div className=\"col-lg-3\">\n            <div className=\"form-group\">\n              <select\n                className={\"custom-select\" + (formik.errors.treatment ? \" is-invalid\" : \"\")}\n                name=\"treatment\"\n                id=\"treatment\"\n                // value={props.practice.treatment || ''}\n                // onChange={(e) => onChange(e)}\n                value={formik.values.treatment || ''}\n                onChange={(e)=>{\n                  onChange(e)\n                  formik.handleChange(e)\n                }}\n                >\n                <option value=\"\">Trattamento</option>\n                {props.priceList && Object.entries(props.priceList).map( ([treatment, prices], index) =>\n                  <option key={index} value={treatment}>{treatment}</option>\n                )}\n              </select>\n              {formik.errors.treatment && \n                  <div className=\"invalid-feedback\">\n                    {formik.errors.treatment}\n                  </div>\n                }\n            </div>\n          </div> */}\n          <div className=\"col-lg-3\">\n            <div className=\"form-group\">\n              <label>Camera</label>\n              <select\n                className={\"custom-select\" + (formik.errors.treatment ? \" is-invalid\" : \"\")}\n                name=\"room_type_id\"\n                id=\"room_type_id\"\n                // value={props.practice.treatment || ''}\n                // onChange={(e) => onChange(e)}\n                value={formik.values.room_type_id || ''}\n                onChange={(e)=>{\n                  onChange(e)\n                  formik.handleChange(e)\n                }}\n                >\n                <option value=\"\">Camera</option>\n                {props.period.viewPeriodPrices && Object.entries(props.period.viewPeriodPrices).map( ([roomTypeKey, roomTypeContent], index) =>\n                  <option key={index} value={roomTypeContent.room_type.id}>{roomTypeContent.room_type.name}</option>\n                )}\n              </select>\n              {formik.errors.treatment && \n                  <div className=\"invalid-feedback\">\n                    {formik.errors.room_type_id}\n                  </div>\n                }\n            </div>\n          </div>\n          <div className=\"col-lg-3\">\n            <div className=\"form-group\">\n              <label>Trattamento</label>\n              <select\n                className={\"custom-select\" + (formik.errors.treatment ? \" is-invalid\" : \"\")}\n                name=\"treatment\"\n                id=\"treatment\"\n                // value={props.practice.treatment || ''}\n                // onChange={(e) => onChange(e)}\n                value={formik.values.treatment || ''}\n                onChange={(e)=>{\n                  onChange(e)\n                  formik.handleChange(e)\n                }}\n                >\n                <option value=\"\">Trattamento</option>\n                {treatments && treatments.map((key) => \n                  <option key={key} value={key}>{key}</option>\n                )}\n                {/* {props.priceList && Object.entries(props.priceList).map( ([roomTypeKey, roomTypeContent], index) =>\n                  <React.Fragment key={index}>\n                  {roomTypeContent && Object.entries(roomTypeContent).map( ([key, prices], index1) =>\n                    <option key={index1} value={key}>{key}</option>\n                  )}\n                  </React.Fragment>\n                )} */}\n              </select>\n              {formik.errors.treatment && \n                  <div className=\"invalid-feedback\">\n                    {formik.errors.treatment}\n                  </div>\n                }\n            </div>\n          </div>\n          <div className=\"col-lg-3\">\n            <div className=\"form-group\">\n              <label>Transfer</label>\n              <select\n                className=\"custom-select\"\n                name=\"transfer_id\"\n                id=\"tranfer_id\"\n                value={props.practice.transfer_id || ''}\n                onChange={(e) => onChange(e)}\n                >\n                <option value=\"\">Transfer</option>\n                {/* <option value=\"Bus\">Bus dalla tua città</option>\n                <option value=\"Aliscafo\">Aliscafo</option>\n                <option value=\"Traghetto\">Traghetto</option> */}\n                {transfers.map((obj, index) => \n                  <option key={index} value={obj.id}>{obj.name}</option>\n                )}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"room-box\" id=\"roomBox\">\n          {renderRooms()}\n        </div>\n      </div>\n      <div className=\"box3 form-template-2\">\n        <div className=\"row\">\n          <div className=\"col-lg-3\">\n            <div className=\"form-group\">\n              <div className=\"title\">Richiedi il tuo preventivo gratuitamente</div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\">\n            <div className=\"form-group\">\n              <input \n                type=\"text\"\n                className={\"form-control\" + (formik.errors.first_name ? \" is-invalid\" : \"\")}\n                id=\"first_name\"\n                name=\"first_name\"\n                placeholder=\"Nome\"\n                // value={props.practice.customer.first_name || \"\"}\n                // onChange={(e)=>onChange(e)}\n                value={formik.values.first_name || ''}\n                onChange={(e)=>{\n                  onChange(e)\n                  formik.handleChange(e)\n                }}\n                // reuired=\"true\"\n                />\n                {formik.errors.first_name && \n                  <div className=\"invalid-feedback\">\n                    {formik.errors.first_name}\n                  </div>\n                }\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className={\"form-control\" + (formik.errors.last_name ? \" is-invalid\" : \"\")}\n                id=\"last_name\"\n                name=\"last_name\"\n                placeholder=\"Cognome\"\n                // value={props.practice.customer.last_name || \"\"}\n                // onChange={(e)=>onChange(e)}\n                value={formik.values.last_name || ''}\n                onChange={(e)=>{\n                  onChange(e)\n                  formik.handleChange(e)\n                }}\n                /> \n                {formik.errors.last_name && \n                  <div className=\"invalid-feedback\">\n                    {formik.errors.last_name}\n                  </div>\n                }\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className={\"form-control\" + (formik.errors.email ? \" is-invalid\" : \"\")}\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                // defaultValue={props.practice.customer.email || \"\"}\n                // onChange={(e)=>onChange(e)}\n                value={formik.values.email || ''}\n                onChange={(e)=>{\n                  onChange(e)\n                  formik.handleChange(e)\n                }}\n                />\n                {formik.errors.email && \n                  <div className=\"invalid-feedback\">\n                    {formik.errors.email}\n                  </div>\n                }\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className={\"form-control\" + (formik.errors.mobile ? \" is-invalid\" : \"\")}\n                id=\"mobile\"\n                name=\"mobile\"\n                placeholder=\"Cellulare\"\n                // defaultValue={props.practice.customer.mobile || \"\"}\n                // onChange={(e)=>onChange(e)}\n                value={formik.values.mobile || ''}\n                onChange={(e)=>{\n                  onChange(e)\n                  formik.handleChange(e)\n                }}\n                /> \n                {formik.errors.mobile && \n                  <div className=\"invalid-feedback\">\n                    {formik.errors.mobile}\n                  </div>\n                }\n            </div>\n          </div>\n          <div className=\"col-lg-5\">\n            <div className=\"form-group\">\n              <textarea\n                className=\"form-control\"\n                id=\"message\"\n                name=\"message\"\n                placeholder=\"Messaggio\"\n                value={props.practice.message || \"\"}\n                onChange={(e)=>onChange(e)}\n                >\n              </textarea> \n            </div>\n            <div className=\"form-group\">\n              <div className=\"custom-control custom-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  className={\"custom-control-input\" + (formik.errors.privacy ? \" is-invalid\" : \"\")}\n                  name=\"privacy\"\n                  id=\"privacy\" \n                  // value={props.practice.privacy || 0}\n                  // onChange={(e)=>onChange(e)}\n                  value=\"1\"\n                  checked={formik.values.privacy == 1 ? 1 : 0}\n                  onChange={(e)=>{\n                    onChange(e)\n                    formik.handleChange(e)\n                  }}\n                  />\n                <label className=\"custom-control-label\" htmlFor=\"privacy\">Acconsento al trattamento dei miei dati ai sensi dell’informativa sulla <a href=\"/privacy-policy\" target=\"_blank\" rel=\"nofollow\">Privacy</a>.</label>\n                {formik.errors.privacy && \n                  <div className=\"invalid-feedback\">\n                    {formik.errors.privacy}\n                  </div>\n                }\n              </div>\n            </div>\n            <div className=\"form-group text-right\">\n                <button type=\"submit\" className=\"btn-submit\">richiedi disponibilità</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tpractice: state.practiceByGuest.item,\n\t}\n}\nconst mapDispatchToProps = (dispatch) => {\n  let practiceByGuestAction = new PracticeByGuestAction()\n  return {\n    setPractice: (data) => {\n      dispatch(practiceByGuestAction.setItem(data))\n    },\n    resetPractice: () => {\n      dispatch(practiceByGuestAction.resetItem())\n    },\n    getClientIp: () => {\n      dispatch(practiceByGuestAction.getClientIp())\n    },\n    createPractice: (data) => {\n      dispatch(practiceByGuestAction.create(data))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingForm);"]},"metadata":{},"sourceType":"module"}