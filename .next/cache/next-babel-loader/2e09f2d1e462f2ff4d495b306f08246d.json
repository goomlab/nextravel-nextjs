{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/Partials/Newsletter.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport NewsletterAction from '~/packages/TravelgoOne/actions/NewsletterAction';\n\nconst Newsletter = props => {\n  /**\n   * onChange\n   */\n  const onChange = e => {\n    e.persist();\n    console.log('onChage', e);\n    let newState = Object.assign({}, props.newsletter);\n\n    switch (e.target.name) {\n      case 'privacy':\n        newState[e.target.name] = e.target.checked ? 1 : 0;\n        break;\n\n      default:\n        newState[e.target.name] = e.target.value;\n        break;\n    }\n\n    props.setContact(newState);\n  };\n  /**\n   * onSubmit\n   */\n\n\n  const handleSubmit = () => {\n    props.createContact(props.newsletter);\n  };\n  /**\n   * Validate\n   */\n\n\n  const formik = useFormik({\n    initialValues: {\n      email: props.newsletter.email || \"\",\n      privacy: props.newsletter.privacy || 0\n    },\n    validationSchema: yup.object().shape({\n      email: yup.string().required('Campo non valido'),\n      privacy: yup.number().min(1, 'Campo non valido').max(1, 'Campo non valido')\n    }),\n    enableReinitialize: true,\n    onSubmit: handleSubmit\n  });\n  /**\n   * Render\n   */\n\n  return __jsx(\"section\", {\n    className: \"section-main section-newsletter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Inserisci la tua email.\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), \"Sarai aggiornato su tutte le offerte.\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), \"Alcune sono riservate ai soli iscritti.\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }), \"Per una vacanza su misura contatta\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }), \"il nostro booking \", process.env.contacts.phone.label)), __jsx(\"div\", {\n    className: \"col-lg-6 offset-lg-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"needs-validation\" + (formik.errors ? \"was-validated\" : \"\"),\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-template-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    type: \"email\",\n    className: \"form-control\" + (formik.errors.email ? \" is-invalid\" : \"\"),\n    id: \"newsletter_email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: formik.values.email || '',\n    onChange: e => {\n      onChange(e);\n      formik.handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), formik.errors.email && __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, formik.errors.email)), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, console.log('newslettrer', props.newsletter), __jsx(\"div\", {\n    className: \"custom-control custom-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"custom-control-input\" + (formik.errors.privacy ? \" is-invalid\" : \"\"),\n    name: \"privacy\",\n    id: \"newsletter_privacy\",\n    value: \"1\",\n    checked: formik.values.privacy == 1 ? 1 : 0,\n    onChange: e => {\n      onChange(e);\n      formik.handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }), __jsx(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"newsletter_privacy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, \"Acconsento al trattamento dei miei dati ai sensi dell\\u2019informativa sulla \", __jsx(\"a\", {\n    href: \"/privacy\",\n    target: \"_blank\",\n    rel: \"nofollow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 164\n    }\n  }, \"Privacy\"), \".\"), formik.errors.privacy && __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, formik.errors.privacy)))), __jsx(\"div\", {\n    className: \"col-lg-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"iscriviti\"))))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    newsletter: state.newsletter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  let newsletterAction = new NewsletterAction();\n  return {\n    setContact: data => {\n      dispatch(newsletterAction.setItem(data));\n    },\n    resetContact: () => {\n      dispatch(newsletterAction.resetItem());\n    },\n    createContact: data => {\n      dispatch(newsletterAction.sendinblue_createContact(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Newsletter);","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/Partials/Newsletter.js"],"names":["React","connect","yup","useFormik","NewsletterAction","Newsletter","props","onChange","e","persist","console","log","newState","Object","assign","newsletter","target","name","checked","value","setContact","handleSubmit","createContact","formik","initialValues","email","privacy","validationSchema","object","shape","string","required","number","min","max","enableReinitialize","onSubmit","process","env","contacts","phone","label","errors","values","handleChange","mapStateToProps","state","mapDispatchToProps","dispatch","newsletterAction","data","setItem","resetContact","resetItem","sendinblue_createContact"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux'\nimport * as yup from 'yup'\nimport { useFormik } from 'formik'\n\nimport NewsletterAction from '~/packages/TravelgoOne/actions/NewsletterAction'\n\nconst Newsletter = (props) => {\n\n  /**\n   * onChange\n   */\n  const onChange = (e) => {\n    e.persist(); console.log('onChage', e);\n    let newState = Object.assign({}, props.newsletter);\n    switch( e.target.name ){\n      case 'privacy': \n        newState[e.target.name] = (e.target.checked) ? 1 : 0;\n      break;\n      default: newState[e.target.name] = e.target.value; break;\n    }\n    props.setContact(newState)\n  }\n\n  /**\n   * onSubmit\n   */\n  const handleSubmit = () => {\n    props.createContact(props.newsletter)\n  }\n\n  /**\n   * Validate\n   */\n  const formik =  useFormik({\n    initialValues: {\n      email: props.newsletter.email || \"\",\n      privacy: props.newsletter.privacy || 0\n    },\n    validationSchema: yup.object().shape({\n      email: yup.string().required('Campo non valido'),\n      privacy: yup.number().min(1, 'Campo non valido').max(1, 'Campo non valido'),\n    }),\n    enableReinitialize: true,\n    onSubmit: handleSubmit\n  })\n\n  /**\n   * Render\n   */\n  return (\n    <section className=\"section-main section-newsletter\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-5\">\n            <div className=\"description\">\n              <strong>\n                Inserisci la tua email.\n                <br />\n                Sarai aggiornato su tutte le offerte.\n              </strong>\n              <br />\n              Alcune sono riservate ai soli iscritti.\n              <br />\n              Per una vacanza su misura contatta\n              <br />\n              il nostro booking {process.env.contacts.phone.label}\n            </div>\n          </div>\n          <div className=\"col-lg-6 offset-lg-1\">\n            <form onSubmit={formik.handleSubmit} className={\"needs-validation\" + (formik.errors ? \"was-validated\" : \"\")} noValidate>\n              <div className=\"form-template-1\">\n              <div className=\"row\">\n                <div className=\"col-lg-9\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"email\"\n                      className={\"form-control\" + (formik.errors.email ? \" is-invalid\" : \"\")}\n                      id=\"newsletter_email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={formik.values.email || ''}\n                      onChange={(e)=>{\n                        onChange(e)\n                        formik.handleChange(e)\n                      }}\n                      />\n                      {formik.errors.email && \n                        <div className=\"invalid-feedback\">\n                          {formik.errors.email}\n                        </div>\n                      }\n                  </div>\n                  <div className=\"form-group\">{console.log('newslettrer', props.newsletter)}\n                    <div className=\"custom-control custom-checkbox\">\n                      <input\n                        type=\"checkbox\"\n                        className={\"custom-control-input\" + (formik.errors.privacy ? \" is-invalid\" : \"\")}\n                        name=\"privacy\"\n                        id=\"newsletter_privacy\" \n                        value=\"1\"\n                        checked={formik.values.privacy == 1 ? 1 : 0}\n                        onChange={(e)=>{\n                          onChange(e)\n                          formik.handleChange(e)\n                        }}\n                        />\n                      <label className=\"custom-control-label\" htmlFor=\"newsletter_privacy\">Acconsento al trattamento dei miei dati ai sensi dell’informativa sulla <a href=\"/privacy\" target=\"_blank\" rel=\"nofollow\">Privacy</a>.</label>\n                      {formik.errors.privacy && \n                        <div className=\"invalid-feedback\">\n                          {formik.errors.privacy}\n                        </div>\n                      }\n                    </div>\n                  </div>\n\n                  {/* <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"custom-control-input\"\n                        id=\"newsletter_privacy\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"newsletter_privacy\"\n                      >\n                        Acconsento al trattamento dei miei dati ai sensi\n                        dell’informativa sulla <a href=\"#\">Privacy</a>.\n                      </label>\n                    </div>\n                  </div> */}\n                </div>\n                <div className=\"col-lg-3\">\n                  <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-green\">\n                      iscriviti\n                    </button>\n                  </div>\n                </div>\n              </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tnewsletter: state.newsletter,\n\t}\n}\nconst mapDispatchToProps = (dispatch) => {\n  let newsletterAction = new NewsletterAction()\n  return {\n    setContact: (data) => {\n      dispatch(newsletterAction.setItem(data))\n    },\n    resetContact: () => {\n      dispatch(newsletterAction.resetItem())\n    },\n    createContact: (data) => {\n      dispatch(newsletterAction.sendinblue_createContact(data))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Newsletter);\n"]},"metadata":{},"sourceType":"module"}