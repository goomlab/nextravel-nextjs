{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap-html.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport Link from \"next/link\";\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\"; // const SitemapHotels = models => {\n//   return (\n//     <ul>\n//       {Object.entries(models).map((model, index) => {\n//         {console.log('model', model)}\n//         <li key={index}>\n//           <Link href={`${process.env.app_url}/${model.slug}`}>\n//             <a>{model.title}</a>\n//           </Link>\n//         </li>\n//       })}\n//     </ul>\n//   )\n// }\n// const SitemapHotels = (models) => `<ul>\n//   ${models.map((model, index) => {\n//     return `\n//       <li>\n//           <a href=\"${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}\">${model.title.it}</a>\n//       </li>\n//         `;\n//   })\n//   .join('')}\n//   </ul>\n// `;\n\nvar SitemapHtml = function SitemapHtml(props) {\n  console.log('props', props);\n  return __jsx(Layout, {\n    settings: {\n      template: \"sitemap-page\",\n      menu: props.menu\n    },\n    meta: {\n      title: \"Mappa del sito\",\n      description: \"Mappa del sito\",\n      url: \"\".concat(process.env.meta.url, \"/sitemap-html\"),\n      image: null\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"single-hotel-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n};\n\n_c = SitemapHtml;\n\nSitemapHtml.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var menu, pages, hotels, pagefilters, rateplanperiods, menuService, postService, hotelService;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            menu = null;\n            pages = [];\n            hotels = [];\n            pagefilters = [];\n            rateplanperiods = [];\n            _context.prev = 5;\n            menuService = new MenuService();\n            _context.next = 9;\n            return menuService.get(1);\n\n          case 9:\n            menu = _context.sent;\n            postService = new PostService();\n            _context.next = 13;\n            return postService.all({\n              stauts: {\n                key: 'status',\n                compare: '=',\n                value: 1\n              }\n            });\n\n          case 13:\n            _context.t0 = _context.sent;\n\n            if (_context.t0) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.t0 = [];\n\n          case 16:\n            pages = _context.t0;\n            hotelService = new HotelService();\n            _context.next = 20;\n            return hotelService.all({\n              status: {\n                key: 'status',\n                compare: '=',\n                value: 1\n              }\n            });\n\n          case 20:\n            _context.t1 = _context.sent;\n\n            if (_context.t1) {\n              _context.next = 23;\n              break;\n            }\n\n            _context.t1 = [];\n\n          case 23:\n            hotels = _context.t1;\n            _context.next = 29;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t2 = _context[\"catch\"](5);\n            console.log('error', _context.t2);\n\n          case 29:\n            return _context.abrupt(\"return\", {\n              params: ctx.params,\n              query: ctx.query,\n              menu: menu,\n              pages: pages,\n              hotels: hotels,\n              pagefilters: pagefilters,\n              rateplanperiods: rateplanperiods\n            });\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 26]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default SitemapHtml; // const mapStateToProps = (state) => {\n// \treturn {\n//     hotelLoading: state.hotel.loading,\n//     hotelSeatchParams: state.hotel.params,\n// \t\thotels: state.hotel.items,\n//     hotelMeta: state.hotel.meta,\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   let hotelAction = new HotelAction()\n//   return {\n//     loading: (state) => {\n//       dispatch(hotelAction.loading(state))\n//     },\n//     query: (data) => {\n//       dispatch(hotelAction.query(data))\n//     },\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(SitemapHtml);\n\nvar _c;\n\n$RefreshReg$(_c, \"SitemapHtml\");","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap-html.js"],"names":["React","connect","Link","PostService","HotelService","PageFilterService","RatePlanPeriodService","Layout","BookingSearchBox","SitemapHtml","props","console","log","template","menu","title","description","url","process","env","meta","image","getInitialProps","ctx","pages","hotels","pagefilters","rateplanperiods","menuService","MenuService","get","postService","all","stauts","key","compare","value","hotelService","status","params","query"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport Link from \"next/link\";\n\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\n\n\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\";\n\n\n// const SitemapHotels = models => {\n//   return (\n//     <ul>\n//       {Object.entries(models).map((model, index) => {\n//         {console.log('model', model)}\n//         <li key={index}>\n//           <Link href={`${process.env.app_url}/${model.slug}`}>\n//             <a>{model.title}</a>\n//           </Link>\n//         </li>\n//       })}\n//     </ul>\n//   )\n// }\n\n// const SitemapHotels = (models) => `<ul>\n//   ${models.map((model, index) => {\n//     return `\n//       <li>\n//           <a href=\"${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}\">${model.title.it}</a>\n//       </li>\n//         `;\n//   })\n//   .join('')}\n//   </ul>\n// `;\n\nconst SitemapHtml = props => {console.log('props', props)\n  return (\n    <Layout \n      settings={{template:\"sitemap-page\", menu: props.menu}}\n      meta={{\n        title: \"Mappa del sito\",\n        description: \"Mappa del sito\",\n        url: `${process.env.meta.url}/sitemap-html`,\n        image: null\n      }}\n      >\n\n      {/* <BookingSearchBox query={props.query} /> */}\n\n      <section className=\"single-hotel-section\">\n        <div className=\"container\">\n          {/* <SitemapHotels models={props.hotels} /> */}\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nSitemapHtml.getInitialProps = async ctx => {\n  let menu = null;\n  let pages = [];\n  let hotels = [];\n  let pagefilters = [];\n  let rateplanperiods = [];\n  try {\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n\n    let postService = new PostService();\n    pages = await postService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    }) || [];\n\n    let hotelService = new HotelService();\n    hotels = await hotelService.all({\n      status: {key: 'status', compare: '=', value: 1}\n    }) || [];\n\n    // let pagefilterService = new PageFilterService();\n    // pagefilters = await pagefilterService.all({\n    //   stauts: {key: 'status', compare: '=', value: 1}\n    // }) || [];\n\n    // let rateplanperiodService = new RatePlanPeriodService();\n    // rateplanperiods = await rateplanperiodService.all({\n    //   stauts: {key: 'status', compare: '=', value: 1}\n    // }) || [];\n  } catch (e) {\n    console.log('error', e)\n  }\n\n  return {\n    params: ctx.params,\n    query: ctx.query,\n    menu,\n    pages,\n    hotels,\n    pagefilters,\n    rateplanperiods\n  };\n};\n\nexport default SitemapHtml;\n\n\n// const mapStateToProps = (state) => {\n// \treturn {\n//     hotelLoading: state.hotel.loading,\n//     hotelSeatchParams: state.hotel.params,\n// \t\thotels: state.hotel.items,\n//     hotelMeta: state.hotel.meta,\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   let hotelAction = new HotelAction()\n//   return {\n//     loading: (state) => {\n//       dispatch(hotelAction.loading(state))\n//     },\n//     query: (data) => {\n//       dispatch(hotelAction.query(data))\n//     },\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(SitemapHtml);\n\n\n"]},"metadata":{},"sourceType":"module"}