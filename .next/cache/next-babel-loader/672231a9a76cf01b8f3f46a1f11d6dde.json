{"ast":null,"code":"import React from 'react';\nimport moment from 'moment';\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\n\nconst createSitemap = models => `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n        ${models.map((model, index) => {\n  let updatedAt = moment(model.updated_at, \"DD/MM/YYYY hh:mm:ss\").toISOString(); // 12/03/2021 17:05:06  -->  2021-02-17T11:39:04+00:00\n\n  return `\n                    <url>\n                        <loc>${`${process.env.app_url}/strutture-ricettive/${model.rateplan.hotel.slug.it}/booking/${model.id}`}</loc>\n                        <lastmod>${updatedAt}</lastmod>\n                    </url>\n                `;\n}).join('')}\n    </urlset>\n    `;\n\nclass Sitemap extends React.Component {\n  static async getInitialProps({\n    res\n  }) {\n    let service = new RatePlanPeriodService();\n    let models = (await service.all({\n      status: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    })) || []; // const request = await fetch(EXTERNAL_DATA_URL);\n    // const posts = await request.json();\n\n    res.setHeader('Content-Type', 'text/xml');\n    res.write(createSitemap(models));\n    res.end();\n  }\n\n}\n\nexport default Sitemap;","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap/rateplanperiods.js"],"names":["React","moment","RatePlanPeriodService","createSitemap","models","map","model","index","updatedAt","updated_at","toISOString","process","env","app_url","rateplan","hotel","slug","it","id","join","Sitemap","Component","getInitialProps","res","service","all","status","key","compare","value","setHeader","write","end"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,qBAAP,MAAkC,uDAAlC;;AAEA,MAAMC,aAAa,GAAIC,MAAD,IAAa;AACnC;AACA,UAAUA,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,MAAIC,SAAS,GAAGP,MAAM,CAACK,KAAK,CAACG,UAAP,EAAmB,qBAAnB,CAAN,CAAgDC,WAAhD,EAAhB,CAD2B,CACoD;;AAC/E,SAAQ;AACpB;AACA,+BAAgC,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,wBAAuBP,KAAK,CAACQ,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BC,EAAG,YAAWX,KAAK,CAACY,EAAG,EAAE;AAChI,mCAAmCV,SAAU;AAC7C;AACA,iBALY;AAMD,CARD,EASCW,IATD,CASM,EATN,CASU;AACpB;AACA,KAbA;;AAeA,MAAMC,OAAN,SAAsBpB,KAAK,CAACqB,SAA5B,CAAsC;AACpC,eAAaC,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAsC;AACpC,QAAIC,OAAO,GAAG,IAAItB,qBAAJ,EAAd;AACA,QAAIE,MAAM,GAAG,OAAMoB,OAAO,CAACC,GAAR,CAAY;AAC7BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE,QAAN;AAAgBC,QAAAA,OAAO,EAAE,GAAzB;AAA8BC,QAAAA,KAAK,EAAE;AAArC;AADqB,KAAZ,CAAN,KAEP,EAFN,CAFoC,CAMpC;AACA;;AAEAN,IAAAA,GAAG,CAACO,SAAJ,CAAc,cAAd,EAA8B,UAA9B;AACAP,IAAAA,GAAG,CAACQ,KAAJ,CAAU5B,aAAa,CAACC,MAAD,CAAvB;AACAmB,IAAAA,GAAG,CAACS,GAAJ;AACD;;AAbmC;;AAgBtC,eAAeZ,OAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\n\nconst createSitemap = (models) => `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n        ${models.map((model, index) => {\n            let updatedAt = moment(model.updated_at, \"DD/MM/YYYY hh:mm:ss\").toISOString(); // 12/03/2021 17:05:06  -->  2021-02-17T11:39:04+00:00\n            return `\n                    <url>\n                        <loc>${`${process.env.app_url}/strutture-ricettive/${model.rateplan.hotel.slug.it}/booking/${model.id}`}</loc>\n                        <lastmod>${updatedAt}</lastmod>\n                    </url>\n                `;\n          })\n          .join('')}\n    </urlset>\n    `;\n\nclass Sitemap extends React.Component {\n  static async getInitialProps({ res }) {\n    let service = new RatePlanPeriodService();\n    let models = await service.all({\n      status: {key: 'status', compare: '=', value: 1}\n    }) || [];\n\n    // const request = await fetch(EXTERNAL_DATA_URL);\n    // const posts = await request.json();\n\n    res.setHeader('Content-Type', 'text/xml');\n    res.write(createSitemap(models));\n    res.end();\n  }\n}\n\nexport default Sitemap;"]},"metadata":{},"sourceType":"module"}