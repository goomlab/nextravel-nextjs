{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport moment from \"moment\";\nimport Link from \"next/link\";\nimport BaseService from \"~/packages/BaseService\";\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport SwiperCore, { Swiper, Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\n\nconst BookingSearchBox = props => {\n  const swiperBookingMonths = React.useRef(null);\n  const swiperBookingHolidays = React.useRef(null);\n  const defaultCheckin = moment().add(1, 'days').format('YYYY-MM-DD');\n  const defaultCheckout = moment().add(7, 'days').format('YYYY-MM-DD');\n  const defaultCheckinFormatted = moment().add(1, 'days').format('DD/MM/YYYY');\n  const defaultCheckoutFormatted = moment().add(7, 'days').format('DD/MM/YYYY');\n\n  const initCheckin = () => {\n    if (props.query && props.query.checkin != undefined && props.query.checkin != \"\") {\n      return props.query.checkin;\n    }\n\n    if (props.searchParams && props.searchParams.checkin != undefined && props.searchParams.checkin != \"\") {\n      return props.searchParams.checkin;\n    }\n\n    return defaultCheckin;\n  };\n\n  const initCheckout = () => {\n    if (props.query && props.query.checkout != undefined && props.query.checkout != \"\") {\n      return props.query.checkout;\n    }\n\n    if (props.searchParams && props.searchParams.checkout != undefined && props.searchParams.checkout != \"\") {\n      return props.searchParams.checkout;\n    }\n\n    return defaultCheckout;\n  };\n\n  const [state, setState] = React.useState({\n    loc_id: props.query && props.query.loc_id || '',\n    category_id: props.query && props.query.category_id || '',\n    checkin: initCheckin(),\n    checkout: initCheckout(),\n    nights: props.query && props.query.nights || ''\n  });\n  const [params, setParams] = React.useState({\n    locs: [],\n    hotelCategories: [],\n    months: [],\n    specials: []\n  });\n  React.useEffect(() => {\n    // swipers\n    if (props.full) {\n      swiperBookingMonths.current = new Swiper('#swiperBookingMonths', {\n        grubCursor: false,\n        simulateTouch: false,\n        direction: 'horizontal',\n        speed: 600,\n        slidesPerView: 10,\n        spaceBetween: 30,\n        breakpoints: {\n          1: {\n            slidesPerView: 2,\n            spaceBetween: 30\n          },\n          320: {\n            slidesPerView: 3,\n            spaceBetween: 30\n          },\n          480: {\n            slidesPerView: 4,\n            spaceBetween: 30\n          },\n          768: {\n            slidesPerView: 6,\n            spaceBetween: 30\n          },\n          992: {\n            slidesPerView: 10,\n            spaceBetween: 30\n          },\n          1200: {\n            slidesPerView: 10,\n            spaceBetween: 30\n          }\n        },\n        navigation: {\n          nextEl: '#swiperBookingMonths-button-next',\n          prevEl: '#swiperBookingMonths-button-prev'\n        }\n      }); // swiperBookingHolidays.current = new Swiper('#swiperBookingHolidays', {\n      //   grubCursor: false,\n      //   simulateTouch : false,\n      //   direction: 'horizontal',\n      //   speed: 600,\n      //   slidesPerView: 10,\n      //   spaceBetween: 30,\n      //   navigation: {\n      //     nextEl: '#swiperBookingHolidays-button-next',\n      //     prevEl: '#swiperBookingHolidays-button-prev',\n      //   }\n      // })\n    } // init booking\n\n\n    let baseService = new BaseService();\n    baseService.initApp().then(response => {\n      setParams({\n        locs: response.locs || [],\n        hotelCategories: response.hotelCategories || [],\n        months: response.filterPages.months || [],\n        specials: response.filterPages.specials || []\n      });\n      if (props.full && swiperBookingMonths && swiperBookingMonths.current) swiperBookingMonths.current.update(); // if( props.full && swiperBookingHolidays && swiperBookingHolidays.current )\n      //   swiperBookingHolidays.current.update()\n    }).catch(error => {\n      console.log('error', error);\n    }); // setState({\n    //   loc_id: (props.query && props.query.loc_id) || null,\n    //   category_id: (props.query && props.query.category_id) || null,\n    //   checkin: (props.query && props.query.checkin) || null,\n    //   checkout: (props.query && props.query.checkout) || null,\n    //   nights: (props.query && props.query.nights) || null\n    // })\n  }, []);\n  React.useEffect(() => {\n    if (props.full) {\n      swiperBookingHolidays.current = new Swiper('#swiperBookingHolidays', {\n        grubCursor: false,\n        simulateTouch: false,\n        direction: 'horizontal',\n        speed: 600,\n        slidesPerView: 10,\n        spaceBetween: 30,\n        breakpoints: {\n          1: {\n            slidesPerView: 2,\n            spaceBetween: 30\n          },\n          320: {\n            slidesPerView: 3,\n            spaceBetween: 30\n          },\n          480: {\n            slidesPerView: 4,\n            spaceBetween: 30\n          },\n          768: {\n            slidesPerView: 6,\n            spaceBetween: 30\n          },\n          992: {\n            slidesPerView: 10,\n            spaceBetween: 30\n          },\n          1200: {\n            slidesPerView: 10,\n            spaceBetween: 30\n          }\n        },\n        navigation: {\n          nextEl: '#swiperBookingHolidays-button-next',\n          prevEl: '#swiperBookingHolidays-button-prev'\n        }\n      });\n    }\n  }, [params]); // const checkinFormatted = (props.query && props.query.checkin && props.query.checkin != \"\") ? moment(props.query.checkin, 'YYYY-MM-DD').format('DD/MM/YYYY') : defaultCheckinFormatted;\n  // const checkoutFormatted = (props.query && props.query.checkout && props.query.checkout != \"\") ? moment(props.query.checkout, 'YYYY-MM-DD').format('DD/MM/YYYY') : defaultCheckoutFormatted;\n\n  const checkinFormatted = state.checkin != \"\" && state.checkin != undefined ? moment(state.checkin, 'YYYY-MM-DD').format('DD/MM/YYYY') : defaultCheckinFormatted;\n  const checkoutFormatted = state.checkout != \"\" && state.checkout != undefined ? moment(state.checkout, 'YYYY-MM-DD').format('DD/MM/YYYY') : defaultCheckoutFormatted;\n\n  const getMonths = () => {\n    // mesi\n    let months = [];\n    moment.locale('it');\n    var now = moment();\n    let i = 0;\n\n    do {\n      months.push(__jsx(Link, {\n        href: `${process.env.filterpages_path}/[slug]`,\n        as: `${process.env.filterpages_path}/${now.format('MMMM').toLowerCase()}`\n      }, __jsx(\"a\", null, __jsx(\"strong\", null, now.format('MMM')), \" \", now.format('YY'))));\n      i++;\n      now.add(1, 'months');\n    } while (i < 12);\n\n    return months;\n  };\n\n  const onChange = e => {\n    let newState = Object.assign({}, state);\n    newState[e.target.name] = e.target.value;\n    setState(_objectSpread({}, newState));\n  };\n\n  const onDatePickerApply = (event, picker) => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      checkin: picker.startDate.format('YYYY-MM-DD'),\n      checkout: picker.endDate.format('YYYY-MM-DD')\n    }));\n  };\n\n  const onSumbit = e => {\n    e.preventDefault();\n    var url = `${process.env.accommodations_path}?`;\n\n    for (let [key, value] of Object.entries(state)) url += key + '=' + value + '&';\n\n    window.location.href = url;\n  };\n\n  const months = getMonths();\n  return __jsx(\"section\", {\n    className: \"booking-box\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"form\", {\n    className: \"booking-form\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-3\"\n  }, __jsx(\"select\", {\n    className: \"custom-select\",\n    name: \"loc_id\",\n    id: \"loc_id\",\n    onChange: e => onChange(e),\n    value: state.loc_id || ''\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Localit\\xE0\"), params.locs && params.locs.map((obj, index) => __jsx(\"option\", {\n    key: index,\n    value: obj.id\n  }, obj.name)))), __jsx(\"div\", {\n    className: \"col-lg-3\"\n  }, __jsx(\"select\", {\n    className: \"custom-select\",\n    name: \"category_id\",\n    id: \"category_id\",\n    onChange: e => onChange(e),\n    value: state.category_id || ''\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Struttura\"), params.hotelCategories && params.hotelCategories.map((obj, index) => __jsx(\"option\", {\n    key: index,\n    value: obj.id\n  }, obj.name)))), __jsx(\"div\", {\n    className: \"col-lg-3\"\n  }, __jsx(DateRangePicker, {\n    initialSettings: {\n      // startDate: state.checkinFormatted,\n      // endDate: state.checkoutFormatted,\n      startDate: moment(state.checkin, 'YYYY-MM-DD'),\n      endDate: moment(state.checkout, 'YYYY-MM-DD'),\n      autoApply: true,\n      startDate: moment(),\n      locale: {\n        'cancelLabel': 'Cancella',\n        'applyLabel': 'Applica'\n      }\n    },\n    onApply: onDatePickerApply,\n    style: {\n      display: 'block',\n      width: '100%'\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    id: \"booking_dateRangePicker\",\n    type: \"text\",\n    placeholder: \"Checkin\",\n    value: checkinFormatted != \"\" && checkoutFormatted != \"\" ? `${checkinFormatted} - ${checkoutFormatted}` : '',\n    onChange: e => {}\n  })), __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"checkin\",\n    id: \"checkin\",\n    onChange: e => onChange(e),\n    value: state.checkin || ''\n  }), __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"checkout\",\n    id: \"checkout\",\n    onChange: e => onChange(e),\n    value: state.checkout || ''\n  })), __jsx(\"div\", {\n    className: \"col-lg-2\"\n  }, __jsx(\"select\", {\n    className: \"custom-select\",\n    name: \"nights\",\n    id: \"nights\",\n    onChange: e => onChange(e),\n    value: state.nights || ''\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Notti\"), __jsx(\"option\", {\n    value: \"1\"\n  }, \"1\"), __jsx(\"option\", {\n    value: \"2\"\n  }, \"2\"), __jsx(\"option\", {\n    value: \"3\"\n  }, \"3\"), __jsx(\"option\", {\n    value: \"4\"\n  }, \"4\"), __jsx(\"option\", {\n    value: \"5\"\n  }, \"5\"), __jsx(\"option\", {\n    value: \"6\"\n  }, \"6\"), __jsx(\"option\", {\n    value: \"7\"\n  }, \"7\"))), __jsx(\"div\", {\n    className: \"col-lg-1\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-yellow\",\n    onClick: e => onSumbit(e)\n  }, \"Cerca\")))), props.full && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"booking-months\"\n  }, __jsx(\"div\", {\n    id: \"swiperBookingMonths\",\n    className: \"swiper-container swiperBookingMonths\"\n  }, __jsx(\"div\", {\n    className: \"swiper-wrapper\"\n  }, months.map((obj, index) => __jsx(\"div\", {\n    className: \"swiper-slide\",\n    key: index\n  }, obj)))), __jsx(\"div\", {\n    id: \"swiperBookingMonths-button-prev\",\n    className: \"swiper-button-prev\"\n  }), __jsx(\"div\", {\n    id: \"swiperBookingMonths-button-next\",\n    className: \"swiper-button-next\"\n  })), params.specials && params.specials.length > 0 && __jsx(\"div\", {\n    className: \"booking-holidays\"\n  }, __jsx(\"div\", {\n    id: \"swiperBookingHolidays\",\n    className: \"swiper-container swiperBookingMonths\"\n  }, __jsx(\"div\", {\n    className: \"swiper-wrapper\"\n  }, params.specials && params.specials.map((obj, index) => __jsx(\"div\", {\n    className: \"swiper-slide\",\n    key: index\n  }, __jsx(Link, {\n    href: `${process.env.filterpages_path}/[slug]`,\n    as: `${process.env.filterpages_path}/${obj.slug.it}`\n  }, __jsx(\"a\", null, obj.title.it)))))), __jsx(\"div\", {\n    id: \"swiperBookingHolidays-button-prev\",\n    className: \"swiper-button-prev\"\n  }), __jsx(\"div\", {\n    id: \"swiperBookingHolidays-button-next\",\n    className: \"swiper-button-next\"\n  })))));\n};\n\nexport default BookingSearchBox;","map":null,"metadata":{},"sourceType":"module"}