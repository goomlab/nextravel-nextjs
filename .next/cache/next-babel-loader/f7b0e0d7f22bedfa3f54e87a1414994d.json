{"ast":null,"code":"// import AlertMessageActions from 'actions/AlertMessageActions';\n// import PageLoaderActions from 'actions/PageLoaderActions';\nexport default class BaseAction {\n  constructor() {\n    this.service = null;\n    this.consts = null;\n    this.redirect = null;\n  }\n\n  all(filter, count) {\n    return dispatch => {\n      // dispatch(PageLoaderActions.show());\n      this.service.search(filter, count).then(response => {\n        dispatch({\n          type: this.consts.SEARCHED,\n          items: response.data.data,\n          totItems: response.data.meta.total\n        }); // dispatch(PageLoaderActions.hide());\n      }).catch(error => {// dispatch(PageLoaderActions.hide());\n        // if( error.response && error.response.data && error.response.data.meta )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.meta.message));\n        // else if( error.response && error.response.data && error.response.data.message )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.message));\n        // else\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.status));\n      });\n    };\n  }\n\n  get(id) {\n    return dispatch => {\n      // dispatch(PageLoaderActions.show());\n      this.service.load(id).then(response => {\n        dispatch({\n          type: this.consts.LOADED,\n          item: response.data.data\n        }); // dispatch(PageLoaderActions.hide());\n      }).catch(error => {// dispatch(PageLoaderActions.hide());\n        // if( error.response && error.response.data && error.response.data.meta )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.meta.message));\n        // else if( error.response && error.response.data && error.response.data.message )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.message));\n        // else\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.status));\n      });\n    };\n  }\n\n  createPost(postData, ownProps) {\n    return dispatch => {\n      // dispatch(PageLoaderActions.show());\n      this.service.createPost(postData).then(response => {\n        dispatch({\n          type: this.consts.CREATED,\n          item: response.data.data\n        }); // dispatch(PageLoaderActions.hide());\n        // dispatch(AlertMessageActions.alertMessageSuccess(response.data.meta.message));\n        // let postype = this.getQueryString(ownProps.location, 'post_type');\n        // let redirect = this.redirect + '/' + response.data.data.id + ((postype) ? '?post_type='+postype : '');\n        // ownProps.history.push(redirect);\n      }).catch(error => {// dispatch(PageLoaderActions.hide());\n        // if( error.response && error.response.data && error.response.data.meta )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.meta.message));\n        // else if( error.response && error.response.data && error.response.data.message )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.message));\n        // else\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.status));\n      });\n    };\n  }\n\n  create(postData, ownProps) {\n    return dispatch => {\n      // dispatch(PageLoaderActions.show());\n      this.service.create(postData).then(response => {\n        dispatch({\n          type: this.consts.CREATED,\n          item: response.data.data\n        }); // dispatch(PageLoaderActions.hide());\n        // dispatch(AlertMessageActions.alertMessageSuccess(response.data.meta.message));\n        // let postype = this.getQueryString(ownProps.location, 'post_type');\n        // let redirect = this.redirect + '/' + response.data.data.id + ((postype) ? '?post_type='+postype : '');\n        // ownProps.history.push(redirect);\n      }).catch(error => {// dispatch(PageLoaderActions.hide());\n        // if( error.response && error.response.data && error.response.data.meta )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.meta.message));\n        // else if( error.response && error.response.data && error.response.data.message )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.message));\n        // else\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.status));\n      });\n    };\n  }\n\n  updatePost(id, postData, ownProps) {\n    return dispatch => {\n      // dispatch(PageLoaderActions.show());\n      this.service.updatePost(id, postData).then(response => {\n        dispatch({\n          type: this.consts.UPDATED,\n          item: response.data.data\n        }); // dispatch(PageLoaderActions.hide());\n        // dispatch(AlertMessageActions.alertMessageSuccess(response.data.meta.message));\n        // let postype = this.getQueryString(ownProps.location, 'post_type');\n        // let redirect = this.redirect + '/' + response.data.item.id + ((postype) ? '?post_type='+postype : '');\n        // ownProps.history.push(redirect);\n\n        dispatch(this.load(id));\n      }).catch(error => {// dispatch(PageLoaderActions.hide());\n        // if( error.response && error.response.data && error.response.data.meta )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.meta.message));\n        // else if( error.response && error.response.data && error.response.data.message )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.message));\n        // else\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.status));\n      });\n    };\n  }\n\n  update(id, postData, ownProps) {\n    return dispatch => {\n      // dispatch(PageLoaderActions.show());\n      this.service.update(id, postData).then(response => {\n        dispatch({\n          type: this.consts.UPDATED,\n          item: response.data.data\n        }); // dispatch(PageLoaderActions.hide());\n        // dispatch(AlertMessageActions.alertMessageSuccess(response.data.meta.message));\n        // dispatch(this.load(id));\n      }).catch(error => {// dispatch(PageLoaderActions.hide());\n        // if( error.response && error.response.data && error.response.data.meta )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.meta.message));\n        // else if( error.response && error.response.data && error.response.data.message )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.message));\n        // else\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.status));\n      });\n    };\n  }\n\n  remove(id) {\n    return dispatch => {\n      // dispatch(PageLoaderActions.show());\n      this.service.remove(id).then(response => {\n        dispatch({\n          type: this.consts.REMOVED // item: response.data.item\n\n        }); // dispatch(AlertMessageActions.alertMessageSuccess(response.data.message));\n        // dispatch(PageLoaderActions.hide());\n      }).catch(error => {// dispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.message));\n        // dispatch(PageLoaderActions.hide());\n      });\n    };\n  }\n\n  removeOnList(id, searchParams, searchCount) {\n    return dispatch => {\n      // dispatch(PageLoaderActions.show());\n      this.service.remove(id).then(response => {\n        dispatch({\n          type: this.consts.REMOVED // item: response.data.item\n\n        }); // dispatch(this.search(searchParams, searchCount));\n        // dispatch(AlertMessageActions.alertMessageSuccess(response.data.message));\n        // dispatch(PageLoaderActions.hide());\n      }).catch(error => {// dispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.message));\n        // dispatch(PageLoaderActions.hide());\n      });\n    };\n  }\n\n  updateFields(id, postData, searchParams, searchCount) {\n    return dispatch => {\n      // dispatch(PageLoaderActions.show());\n      this.service.updateFields(id, postData).then(response => {\n        dispatch({\n          type: this.consts.UPDATED,\n          item: response.data.data\n        }); // dispatch(this.search(searchParams, searchCount));\n        // dispatch(AlertMessageActions.alertMessageSuccess(response.data.meta.message));\n        // dispatch(PageLoaderActions.hide());\n      }).catch(error => {// if( error.response && error.response.data && error.response.data.meta )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.meta.message));\n        // else if( error.response && error.response.data && error.response.data.message )\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.response.data.message));\n        // else\n        // \tdispatch(AlertMessageActions.alertMessageError('Errore: ' + error.status));\n        // dispatch(PageLoaderActions.hide());\n      });\n    };\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}