{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\n\nvar BaseService = /*#__PURE__*/function () {\n  function BaseService(url) {\n    _classCallCheck(this, BaseService);\n\n    this.url = \"\".concat(process.env.api_url) + (url ? url : '');\n    this.config = {\n      headers: {// API_KEY: '$2y$10$zgrnhniFfgWCIkTqUNmBJeJkre2AY3s7FXf8EIqdSzFodKK3uM7Jy',\n      }\n    };\n  }\n\n  _createClass(BaseService, [{\n    key: \"initApp\",\n    value: function initApp() {\n      return axios.get(this.url + '/travelgo-one/frontend/initialize', this.config).then(function (response) {\n        return Promise.resolve(response.data);\n      })[\"catch\"](function (error) {\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"all\",\n    value: function all(params) {\n      return axios.get(this.url, {\n        params: params\n      }, this.config).then(function (response) {\n        return Promise.resolve(response.data.data);\n      })[\"catch\"](function (error) {\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return axios.get(\"\".concat(this.url, \"/\").concat(id), this.config).then(function (response) {\n        return Promise.resolve(response.data.data);\n      })[\"catch\"](function (error) {\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"getBySlug\",\n    value: function getBySlug(slug) {\n      return axios.get(\"\".concat(this.url, \"/by-slug/\").concat(slug), this.config).then(function (response) {\n        return Promise.resolve(response.data.data);\n      })[\"catch\"](function (error) {\n        return Promise.reject(error);\n      });\n    }\n  }]);\n\n  return BaseService;\n}();\n\nexport { BaseService as default };","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/packages/BaseService.js"],"names":["axios","BaseService","url","process","env","api_url","config","headers","get","then","response","Promise","resolve","data","error","reject","params","id","slug"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,W;AAEnB,uBAAYC,GAAZ,EAAgB;AAAA;;AACd,SAAKA,GAAL,GAAW,UAAGC,OAAO,CAACC,GAAR,CAAYC,OAAf,KAA6BH,GAAD,GAAQA,GAAR,GAAc,EAA1C,CAAX;AACA,SAAKI,MAAL,GAAc;AACZC,MAAAA,OAAO,EAAE,CACP;AADO;AADG,KAAd;AAKD;;;;8BAEQ;AACP,aAAOP,KAAK,CAACQ,GAAN,CAAU,KAAKN,GAAL,GAAW,mCAArB,EAA0D,KAAKI,MAA/D,EACNG,IADM,CACD,UAAAC,QAAQ,EAAI;AAChB,eAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACG,IAAzB,CAAP;AACD,OAHM,WAIA,UAAAC,KAAK,EAAI;AACd,eAAOH,OAAO,CAACI,MAAR,CAAeD,KAAf,CAAP;AACD,OANM,CAAP;AAOD;;;wBAEGE,M,EAAO;AACT,aAAOhB,KAAK,CAACQ,GAAN,CAAU,KAAKN,GAAf,EAAoB;AAAEc,QAAAA,MAAM,EAANA;AAAF,OAApB,EAAgC,KAAKV,MAArC,EACNG,IADM,CACD,UAAAC,QAAQ,EAAI;AAChB,eAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACG,IAAT,CAAcA,IAA9B,CAAP;AACD,OAHM,WAIA,UAAAC,KAAK,EAAI;AACd,eAAOH,OAAO,CAACI,MAAR,CAAeD,KAAf,CAAP;AACD,OANM,CAAP;AAOD;;;wBAEGG,E,EAAG;AACL,aAAOjB,KAAK,CAACQ,GAAN,WAAa,KAAKN,GAAlB,cAAyBe,EAAzB,GAA+B,KAAKX,MAApC,EACNG,IADM,CACD,UAAAC,QAAQ,EAAI;AAChB,eAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACG,IAAT,CAAcA,IAA9B,CAAP;AACD,OAHM,WAIA,UAAAC,KAAK,EAAI;AACd,eAAOH,OAAO,CAACI,MAAR,CAAeD,KAAf,CAAP;AACD,OANM,CAAP;AAOD;;;8BAESI,I,EAAK;AACb,aAAOlB,KAAK,CAACQ,GAAN,WAAa,KAAKN,GAAlB,sBAAiCgB,IAAjC,GAAyC,KAAKZ,MAA9C,EACNG,IADM,CACD,UAAAC,QAAQ,EAAI;AAChB,eAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACG,IAAT,CAAcA,IAA9B,CAAP;AACD,OAHM,WAIA,UAAAC,KAAK,EAAI;AACd,eAAOH,OAAO,CAACI,MAAR,CAAeD,KAAf,CAAP;AACD,OANM,CAAP;AAOD;;;;;;SAjDkBb,W","sourcesContent":["import axios from 'axios';\n\nexport default class BaseService {\n\n  constructor(url){\n    this.url = `${process.env.api_url}` + ((url) ? url : '');\n    this.config = {\n      headers: {\n        // API_KEY: '$2y$10$zgrnhniFfgWCIkTqUNmBJeJkre2AY3s7FXf8EIqdSzFodKK3uM7Jy',\n      }\n    }\n  }\n\n  initApp(){\n    return axios.get(this.url + '/travelgo-one/frontend/initialize', this.config)\n    .then(response => {\n      return Promise.resolve(response.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  all(params){\n    return axios.get(this.url, { params }, this.config)\n    .then(response => {\n      return Promise.resolve(response.data.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  get(id){\n    return axios.get(`${this.url}/${id}`, this.config)\n    .then(response => {\n      return Promise.resolve(response.data.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  getBySlug(slug){\n    return axios.get(`${this.url}/by-slug/${slug}`, this.config)\n    .then(response => {\n      return Promise.resolve(response.data.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}