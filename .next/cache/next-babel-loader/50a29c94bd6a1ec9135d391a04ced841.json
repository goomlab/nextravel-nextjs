{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport moment from \"moment\";\nimport Link from \"next/link\";\nimport SwiperCore, { Swiper, Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\nimport PracticeService from \"~/packages/TravelgoOne/services/PracticeService\";\nimport BaseService from \"~/packages/BaseService\";\nimport MenuService from \"~/packages/Post/services/MenuService\"; // import HotelService from \"~/packages/TravelgoOne/services/HotelService\";\n// import RateplanPeriodService from \"~/packages/TravelgoOne/services/RateplanPeriodService\";\n\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\"; // import BookingSearchBox from \"~/components/Partials/BookingSearchBox\";\n// import BookingForm from \"~/components/Partials/BookingForm\";\n// import PriceTable from '~/components/Partials/PriceTable';\n// import { query } from \"express\";\n\nconst PracticePage = props => {\n  console.log('props', props);\n\n  if (!props.practice || props.practice.length <= 0) {\n    return __jsx(Layout, {\n      settings: {\n        menu: props.menu\n      }\n    }, __jsx(\"div\", null, \"Data not found\"));\n  }\n\n  console.log(props.practice);\n  return 'ciao'; // const period = props.period;\n\n  const hotel = props.practice.hotel;\n  const swiperHotelThumbnail = React.useRef(null); // let dateFrom = moment(period.date_from, \"YYYY-MM-DD\");\n  // let dateTo = moment(period.date_to, \"YYYY-MM-DD\");\n\n  let stars = [];\n\n  for (let i = 1; i <= parseInt(hotel.stars); i++) {\n    stars.push(__jsx(\"i\", {\n      key: i,\n      className: \"ico ico-star\"\n    }));\n  } // let priceList = {};\n  // for (const [key, treatmentObj] of Object.entries(props.period.viewPrices)) {\n  //   priceList[key] = {\n  //     n1: (treatmentObj.n1) ? treatmentObj.n1 : null,\n  //     n2: (treatmentObj.n2) ? treatmentObj.n2 : null,\n  //     n3: (treatmentObj.n3) ? treatmentObj.n3 : null,\n  //     n4: (treatmentObj.n4) ? treatmentObj.n4 : null,\n  //     n5: (treatmentObj.n5) ? treatmentObj.n5 : null,\n  //     n6: (treatmentObj.n6) ? treatmentObj.n6 : null,\n  //     n7: (treatmentObj.n7) ? treatmentObj.n7 : null,\n  //   };\n  // }\n\n\n  React.useEffect(() => {\n    swiperHotelThumbnail.current = new Swiper(`#swiperHotelThumbnail`, {\n      grubCursor: false,\n      simulateTouch: false,\n      direction: 'horizontal',\n      //speed: 600,\n      slidesPerView: 1,\n      spaceBetween: 0,\n      navigation: {\n        nextEl: `#swiperHotelThumbnail-button-next`,\n        prevEl: `#swiperHotelThumbnail-button-prev`\n      }\n    });\n  }, []);\n  return __jsx(Layout, {\n    settings: {\n      template: \"booking-page\",\n      menu: props.menu\n    },\n    meta: {\n      title: `Preventivo ${props.practice.id}`,\n      description: `Preventivo ${props.practice.id}`,\n      url: `${process.env.meta.url}/preventivi/${props.practice.id}`,\n      image: props.hotel.media && props.practice.hotel.media.gallery && props.practice.hotel.media.gallery[0] ? props.practice.hotel.media.gallery[0].url : null\n    }\n  }, __jsx(\"section\", {\n    className: \"single-hotel-section\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    id: `swiperHotelThumbnail`,\n    className: \"swiper-container swiperHotelThumbnail\"\n  }, __jsx(\"div\", {\n    className: \"swiper-wrapper\"\n  }, hotel.media && hotel.media.gallery.map((img, index) => __jsx(\"div\", {\n    className: \"swiper-slide\",\n    key: index\n  }, __jsx(\"figure\", {\n    class: \"img-bgas\"\n  }, __jsx(\"img\", {\n    src: img.url,\n    alt: img.name\n  })))), (!hotel.media || !hotel.media.gallery) && __jsx(\"div\", {\n    className: \"swiper-slide\"\n  }, __jsx(\"figure\", {\n    class: \"img-bgas\"\n  }, __jsx(\"img\", {\n    src: \"default\",\n    alt: \"\"\n  })))), __jsx(\"div\", {\n    id: `swiperHotelThumbnail-button-prev`,\n    className: \"swiper-button-prev\"\n  }), __jsx(\"div\", {\n    id: `swiperHotelThumbnail-button-next`,\n    className: \"swiper-button-next\"\n  })), __jsx(\"div\", {\n    className: \"topline\"\n  }, __jsx(\"div\", {\n    className: \"title mr-auto\"\n  }, __jsx(\"h1\", null, hotel.name), __jsx(\"div\", {\n    className: \"stars\"\n  }, stars)), __jsx(\"div\", {\n    className: \"single-hotel-call ml-auto\"\n  }, \"chiama!\\xA0\", __jsx(\"span\", {\n    className: \"bold\"\n  }, process.env.contacts.phone.label))))), __jsx(\"section\", {\n    className: \"section-main single-hotel-section\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-3\"\n  }, __jsx(\"div\", {\n    className: \"content-box content-box-1\"\n  }, __jsx(\"div\", {\n    className: \"titoletto\"\n  }, \"posizione\"), __jsx(\"div\", {\n    className: \"description\"\n  }, hotel.details.address, __jsx(\"br\", null), hotel.details.zip_code, \" \", hotel.details.city, \" (\", hotel.details.state, \")\"), __jsx(\"div\", {\n    className: \"titoletto\"\n  }, \"distanze\"), __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: hotel.description_near.it\n    }\n  })), __jsx(\"ul\", {\n    className: \"hotel-service-list\"\n  }, hotel.incServices && hotel.incServices.length > 0 && hotel.incServices.map((obj, index) => __jsx(\"li\", {\n    key: index\n  }, __jsx(\"span\", null, obj.name)))))), __jsx(\"div\", {\n    className: \"col-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"content-box content-box-2\"\n  }, __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: hotel.description_short.it\n    }\n  })))), __jsx(\"div\", {\n    className: \"col-lg-5\"\n  }, __jsx(\"div\", {\n    className: \"content-box content-box-3\"\n  }, __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: hotel.description_short.it\n    }\n  }))))))));\n};\n\nPracticePage.getInitialProps = async params => {\n  let menu = null;\n  let practice = null;\n  let error = null;\n\n  try {\n    let practiceService = new PracticeService();\n    practice = practiceService.get(params.query.id);\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n  } catch (e) {\n    error = e;\n  }\n\n  return {\n    error,\n    menu,\n    practice\n  };\n};\n\nexport default PracticePage;","map":null,"metadata":{},"sourceType":"module"}