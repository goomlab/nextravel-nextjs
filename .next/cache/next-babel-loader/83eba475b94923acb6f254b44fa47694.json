{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/MyDateRangePicker.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\n\nconst MyDateRangePicker = props => {\n  const [state, setState] = React.useState({\n    startDate: props.startDate ? moment(props.startDate, \"YYYY-MM-DD\") : moment(),\n    endDate: props.endDate ? moment(props.endDate, \"YYYY-MM-DD\") : moment().add('2 days')\n  });\n\n  const onApply = (event, picker) => {\n    props.onChange(picker.startDate, picker.endDate);\n    setState({\n      startDate: picker.startDate,\n      endDate: picker.endDate\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(DateRangePicker, {\n    minDate: state.startDate,\n    startDate: state.startDate,\n    endDate: state.endDate,\n    autoApply: true,\n    onApply: (event, picker) => onApply(event, picker),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"\",\n    name: \"\",\n    placeholder: \"Checkin\",\n    defaultValue: state.startDate.format('DD/MM/YYYY') + ' - ' + state.endDate.format('DD/MM/YYYY') || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MyDateRangePicker;","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/MyDateRangePicker.js"],"names":["React","moment","DateRangePicker","MyDateRangePicker","props","state","setState","useState","startDate","endDate","add","onApply","event","picker","onChange","format"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAEnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe;AACvCC,IAAAA,SAAS,EAAGJ,KAAK,CAACI,SAAP,GAAoBP,MAAM,CAACG,KAAK,CAACI,SAAP,EAAkB,YAAlB,CAA1B,GAA4DP,MAAM,EADtC;AAEvCQ,IAAAA,OAAO,EAAGL,KAAK,CAACK,OAAP,GAAkBR,MAAM,CAACG,KAAK,CAACK,OAAP,EAAgB,YAAhB,CAAxB,GAAwDR,MAAM,GAAGS,GAAT,CAAa,QAAb;AAF1B,GAAf,CAA1B;;AAKA,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCT,IAAAA,KAAK,CAACU,QAAN,CAAeD,MAAM,CAACL,SAAtB,EAAiCK,MAAM,CAACJ,OAAxC;AACAH,IAAAA,QAAQ,CAAC;AACPE,MAAAA,SAAS,EAAEK,MAAM,CAACL,SADX;AAEPC,MAAAA,OAAO,EAAEI,MAAM,CAACJ;AAFT,KAAD,CAAR;AAID,GAND;;AAQA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AACE,IAAA,OAAO,EAAEJ,KAAK,CAACG,SADjB;AAEE,IAAA,SAAS,EAAEH,KAAK,CAACG,SAFnB;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACI,OAHjB;AAIE,IAAA,SAAS,EAAE,IAJb;AAKE,IAAA,OAAO,EAAE,CAACG,KAAD,EAAQC,MAAR,KAAiBF,OAAO,CAACC,KAAD,EAAQC,MAAR,CALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AACE,IAAA,IAAI,EAAC,MADP;AACc,IAAA,SAAS,EAAC,cADxB;AACuC,IAAA,EAAE,EAAC,EAD1C;AAC6C,IAAA,IAAI,EAAC,EADlD;AACqD,IAAA,WAAW,EAAC,SADjE;AAEE,IAAA,YAAY,EAAER,KAAK,CAACG,SAAN,CAAgBO,MAAhB,CAAuB,YAAvB,IAAuC,KAAvC,GAA+CV,KAAK,CAACI,OAAN,CAAcM,MAAd,CAAqB,YAArB,CAA/C,IAAqF,EAFrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AAgBD,CA/BD;;AAiCA,eAAeZ,iBAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\n\nconst MyDateRangePicker = (props) => {\n\n  const [state, setState] = React.useState({\n    startDate: (props.startDate) ? moment(props.startDate, \"YYYY-MM-DD\") : moment(),\n    endDate: (props.endDate) ? moment(props.endDate, \"YYYY-MM-DD\") : moment().add('2 days')\n  });\n\n  const onApply = (event, picker) => {\n    props.onChange(picker.startDate, picker.endDate);\n    setState({\n      startDate: picker.startDate,\n      endDate: picker.endDate,\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <DateRangePicker\n        minDate={state.startDate}\n        startDate={state.startDate}\n        endDate={state.endDate}\n        autoApply={true}\n        onApply={(event, picker)=>onApply(event, picker)}\n        >\n        <input \n          type=\"text\" className=\"form-control\" id=\"\" name=\"\" placeholder=\"Checkin\" \n          defaultValue={state.startDate.format('DD/MM/YYYY') + ' - ' + state.endDate.format('DD/MM/YYYY') || ''} \n        />\n      </DateRangePicker>\n    </React.Fragment>\n  );\n}\n\nexport default MyDateRangePicker;"]},"metadata":{},"sourceType":"module"}