{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport BaseService from \"~/packages/BaseService\";\nimport MenuService from \"~/packages/Post/services/MenuService\";\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\"; // import LastminuteService from \"~/packages/TravelgoOne/services/LastminuteService\";\n\nimport RateplanPeriodService from \"~/packages/TravelgoOne/services/RateplanPeriodService\";\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\";\nimport PeriodArchive from \"~/components/Partials/PeriodArchive\";\n\nconst HotelPage = props => {\n  if (!props.page || props.page.length <= 0) {\n    return __jsx(Layout, {\n      settings: {\n        menu: props.menu\n      }\n    }, __jsx(\"div\", null, \"Data not found\"));\n  }\n\n  const hotel = props.page;\n  let stars = [];\n\n  for (let i = 1; i <= parseInt(hotel.stars); i++) {\n    stars.push(__jsx(\"i\", {\n      key: i,\n      className: \"ico ico-star\"\n    }));\n  }\n\n  return __jsx(Layout, {\n    settings: {\n      template: \"accommodation-page\",\n      menu: props.menu\n    }\n  }, __jsx(BookingSearchBox, null), __jsx(\"section\", {\n    className: \"single-hotel-section\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"figure\", {\n    className: \"img-bgas\"\n  }, __jsx(\"img\", {\n    src: hotel.media && hotel.media.gallery && hotel.media.gallery[0] ? hotel.media.gallery[0].url : 'default',\n    alt: hotel.media && hotel.media.gallery && hotel.media.gallery[0] && hotel.media.gallery[0].name\n  })), __jsx(\"div\", {\n    className: \"topline\"\n  }, __jsx(\"div\", {\n    className: \"title mr-auto\"\n  }, __jsx(\"h1\", null, hotel.name), __jsx(\"div\", {\n    className: \"stars\"\n  }, stars)), __jsx(\"div\", {\n    className: \"single-hotel-call ml-auto\"\n  }, \"chiama!\\xA0\", __jsx(\"span\", {\n    className: \"bold\"\n  }, process.env.contacts.phone.label))))), __jsx(\"section\", {\n    className: \"section-main only-padding-bottom single-hotel-section\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-4\"\n  }, __jsx(\"div\", {\n    className: \"content-box content-box-1\"\n  }, __jsx(\"div\", {\n    className: \"titoletto\"\n  }, \"posizione\"), __jsx(\"div\", {\n    className: \"description\"\n  }, hotel.details.address, __jsx(\"br\", null), hotel.details.zip_code, \" \", hotel.details.city, \" (\", hotel.details.state, \")\"), __jsx(\"div\", {\n    className: \"titoletto\"\n  }, \"distanze\"), __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: hotel.description_near.it\n    }\n  })), __jsx(\"ul\", {\n    className: \"hotel-service-list\"\n  }, hotel.incServices && hotel.incServices.length > 0 && hotel.incServices.map((obj, index) => __jsx(\"li\", {\n    key: index\n  }, __jsx(\"span\", null, obj.name))))), __jsx(\"div\", {\n    className: \"content-box content-box-2\"\n  }, __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: hotel.description_short.it\n    }\n  }))), __jsx(\"div\", {\n    className: \"content-box content-box-3\"\n  }, __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: hotel.description.it\n    }\n  })))), __jsx(\"div\", {\n    className: \"col-lg-7 offset-lg-1\"\n  }, console.log('hotel', hotel), __jsx(PeriodArchive, {\n    hotel: hotel,\n    periods: props.periods\n  }))))));\n};\n\nHotelPage.getInitialProps = async params => {\n  let menu = null;\n  let locs = [];\n  let hotelCategories = [];\n  let page = null;\n  let periods = [];\n\n  try {\n    let baseService = new BaseService();\n    let init = await baseService.initApp();\n    locs = init.locs || [];\n    hotelCategories = init.hotelCategories || [];\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n    let hotelService = new HotelService();\n    page = await hotelService.getBySlug(params.query.accommodation);\n\n    if (page && page.id > 0) {\n      let rateplanPeriodService = new RateplanPeriodService();\n      periods = await rateplanPeriodService.query({\n        hotel_id: page.id\n      });\n    }\n  } catch (e) {}\n\n  return {\n    locs,\n    hotelCategories,\n    menu,\n    page,\n    periods\n  };\n};\n\nexport default HotelPage;","map":null,"metadata":{},"sourceType":"module"}