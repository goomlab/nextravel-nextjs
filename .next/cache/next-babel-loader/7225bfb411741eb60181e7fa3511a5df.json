{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\n\nvar createSitemap = function createSitemap(models) {\n  return \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n    <sitemapindex xmlns=\\\"http://www.sitemaps.org/schemas/sitemap/0.9\\\">\\n      <sitemap>\\n        <loc>\".concat(process.env.app_url, \"/sitemap/post-sitemap.xml</loc>\\n        <lastmod>2021-02-22T13:02:52+00:00</lastmod>\\n      </sitemap>\\n      <sitemap>\\n        <loc>\").concat(process.env.app_url, \"/sitemap/post-sitemap.xml</loc>\\n        <lastmod>2021-03-10T09:19:13+00:00</lastmod>\\n      </sitemap>\\n      <sitemap>\\n        <loc>\").concat(process.env.app_url, \"/sitemap/post-sitemap.xml</loc>\\n        <lastmod>2021-02-17T11:39:04+00:00</lastmod>\\n      </sitemap>\\n    </sitemapindex>\\n    \");\n};\n\nvar Sitemap = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sitemap, _React$Component);\n\n  var _super = _createSuper(Sitemap);\n\n  function Sitemap() {\n    _classCallCheck(this, Sitemap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Sitemap, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var res, hotelService, models;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                res = _ref.res;\n                hotelService = new HotelService();\n                _context.next = 4;\n                return hotelService.all();\n\n              case 4:\n                _context.t0 = _context.sent;\n\n                if (_context.t0) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.t0 = [];\n\n              case 7:\n                models = _context.t0;\n                // const request = await fetch(EXTERNAL_DATA_URL);\n                // const posts = await request.json();\n                res.setHeader('Content-Type', 'text/xml');\n                res.write(createSitemap(models));\n                res.end();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Sitemap;\n}(React.Component); // const Sitemap = (props) => {\n// }\n// Sitemap.getInitialProps = async ctx => {\n//   let hotels = [];\n//   try {\n//     let hotelService = new HotelService();\n//     hotels = await hotelService.all();\n//   } catch (e) {\n//     console.log('error', e)\n//   }\n//   return {\n//     hotels\n//   };\n// };\n\n\nexport default Sitemap;","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap/index.js"],"names":["React","HotelService","createSitemap","models","process","env","app_url","Sitemap","res","hotelService","all","setHeader","write","end","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,8CAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD;AAAA,uKAGPC,OAAO,CAACC,GAAR,CAAYC,OAHL,oJAOPF,OAAO,CAACC,GAAR,CAAYC,OAPL,oJAWPF,OAAO,CAACC,GAAR,CAAYC,OAXL;AAAA,CAAtB;;IAiBMC,O;;;;;;;;;;;;;;;;;;;;AAC2BC,gBAAAA,G,QAAAA,G;AACzBC,gBAAAA,Y,GAAe,IAAIR,YAAJ,E;;uBACAQ,YAAY,CAACC,GAAb,E;;;;;;;;;;8BAAsB,E;;;AAArCP,gBAAAA,M;AAEJ;AACA;AAEAK,gBAAAA,GAAG,CAACG,SAAJ,CAAc,cAAd,EAA8B,UAA9B;AACAH,gBAAAA,GAAG,CAACI,KAAJ,CAAUV,aAAa,CAACC,MAAD,CAAvB;AACAK,gBAAAA,GAAG,CAACK,GAAJ;;;;;;;;;;;;;;;;;;;EAVkBb,KAAK,CAACc,S,GAc5B;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeP,OAAf","sourcesContent":["import React from 'react';\n\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\n\nconst createSitemap = (models) => `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <sitemapindex xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n      <sitemap>\n        <loc>${process.env.app_url}/sitemap/post-sitemap.xml</loc>\n        <lastmod>2021-02-22T13:02:52+00:00</lastmod>\n      </sitemap>\n      <sitemap>\n        <loc>${process.env.app_url}/sitemap/post-sitemap.xml</loc>\n        <lastmod>2021-03-10T09:19:13+00:00</lastmod>\n      </sitemap>\n      <sitemap>\n        <loc>${process.env.app_url}/sitemap/post-sitemap.xml</loc>\n        <lastmod>2021-02-17T11:39:04+00:00</lastmod>\n      </sitemap>\n    </sitemapindex>\n    `;\n\nclass Sitemap extends React.Component {\n  static async getInitialProps({ res }) {\n    let hotelService = new HotelService();\n    let models = await hotelService.all() || [];\n\n    // const request = await fetch(EXTERNAL_DATA_URL);\n    // const posts = await request.json();\n\n    res.setHeader('Content-Type', 'text/xml');\n    res.write(createSitemap(models));\n    res.end();\n  }\n}\n\n// const Sitemap = (props) => {\n\n// }\n\n// Sitemap.getInitialProps = async ctx => {\n//   let hotels = [];\n//   try {\n//     let hotelService = new HotelService();\n//     hotels = await hotelService.all();\n//   } catch (e) {\n//     console.log('error', e)\n//   }\n\n//   return {\n//     hotels\n//   };\n// };\n\nexport default Sitemap;"]},"metadata":{},"sourceType":"module"}