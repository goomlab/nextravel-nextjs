{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/Partials/PriceTableWrap2.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport PriceTable from './PriceTable';\n\nvar PriceTableWrap2 = function PriceTableWrap2(props) {\n  return __jsx(React.Fragment, null, props.period.viewPeriodPrices && Object.entries(props.period.viewPeriodPrices).map(function (_ref, index) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        roomType = _ref2[0],\n        roomTypeContent = _ref2[1];\n\n    return __jsx(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, roomTypeContent.prices && Object.entries(roomTypeContent.prices).map(function (_ref3, index2) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          treatment = _ref4[0],\n          prices = _ref4[1];\n\n      return __jsx(React.Fragment, {\n        key: index2,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, __jsx(\"span\", {\n        style: {\n          color: '#4fbaad'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 18\n        }\n      }, roomTypeContent.room_type.name)), __jsx(PriceTable // key={index2}\n      , {\n        index: index,\n        room_type: roomTypeContent.room_type,\n        treatment: treatment,\n        prices: prices,\n        hotel: props.hotel,\n        period: props.period,\n        priceTableLink: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }));\n    }));\n  }));\n};\n\n_c = PriceTableWrap2;\nexport default PriceTableWrap2; // export const getPriceList = period =>{\n//   let priceList = {}\n//   for (const [roomTypeName, roomTypeContent] of Object.entries(period.viewPeriodPrices)){\n//     priceList[roomTypeName] = {};\n//     if( roomTypeContent.prices ){\n//       for (const [key, treatmentObj] of Object.entries(roomTypeContent.prices)) {\n//         priceList[roomTypeName][key] = {\n//           n1: (treatmentObj.n1) ? treatmentObj.n1 : null,\n//           n2: (treatmentObj.n2) ? treatmentObj.n2 : null,\n//           n3: (treatmentObj.n3) ? treatmentObj.n3 : null,\n//           n4: (treatmentObj.n4) ? treatmentObj.n4 : null,\n//           n5: (treatmentObj.n5) ? treatmentObj.n5 : null,\n//           n6: (treatmentObj.n6) ? treatmentObj.n6 : null,\n//           n7: (treatmentObj.n7) ? treatmentObj.n7 : null,\n//         };\n//       }\n//     }\n//   }\n//   return priceList\n// }\n// const PriceTableWrap2 = props => {\n//   const priceList = getPriceList(props.period)\n//   return(\n//     <>\n//     {priceList && Object.entries(priceList).map( ([roomType, treatments], index) => \n//       <React.Fragment key={index}>\n//         {treatments && Object.entries(treatments).map( ([treatment, prices], index2) => \n//           <React.Fragment key={index2}>\n//             <div><span style={{color: '#4fbaad'}}>{roomType}</span></div>\n//             <PriceTable \n//               // key={index2}\n//               index={index}\n//               room_type={roomType}\n//               treatment={treatment}\n//               prices={prices}\n//               hotel={props.hotel}\n//               period={props.period}\n//               priceTableLink={true}\n//             />\n//           </React.Fragment>\n//         )}\n//       </React.Fragment>\n//     )}\n//     </>\n//   )\n// }\n// export default PriceTableWrap2;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceTableWrap2\");","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/Partials/PriceTableWrap2.js"],"names":["React","moment","PriceTable","PriceTableWrap2","props","period","viewPeriodPrices","Object","entries","map","index","roomType","roomTypeContent","prices","index2","treatment","color","room_type","name","hotel"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SACE,4BACCA,KAAK,CAACC,MAAN,CAAaC,gBAAb,IAAiCC,MAAM,CAACC,OAAP,CAAeJ,KAAK,CAACC,MAAN,CAAaC,gBAA5B,EAA8CG,GAA9C,CAAmD,gBAA8BC,KAA9B;AAAA;AAAA,QAAEC,QAAF;AAAA,QAAYC,eAAZ;;AAAA,WACnF,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEF,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,eAAe,CAACC,MAAhB,IAA0BN,MAAM,CAACC,OAAP,CAAeI,eAAe,CAACC,MAA/B,EAAuCJ,GAAvC,CAA4C,iBAAsBK,MAAtB;AAAA;AAAA,UAAEC,SAAF;AAAA,UAAaF,MAAb;;AAAA,aACrE,MAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAM,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCJ,eAAe,CAACK,SAAhB,CAA0BC,IAA5D,CAAL,CADF,EAEE,MAAC,UAAD,CACE;AADF;AAEE,QAAA,KAAK,EAAER,KAFT;AAGE,QAAA,SAAS,EAAEE,eAAe,CAACK,SAH7B;AAIE,QAAA,SAAS,EAAEF,SAJb;AAKE,QAAA,MAAM,EAAEF,MALV;AAME,QAAA,KAAK,EAAET,KAAK,CAACe,KANf;AAOE,QAAA,MAAM,EAAEf,KAAK,CAACC,MAPhB;AAQE,QAAA,cAAc,EAAE,IARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADqE;AAAA,KAA5C,CAD7B,CADmF;AAAA,GAAnD,CADlC,CADF;AAuBD,CAxBD;;KAAMF,e;AA0BN,eAAeA,eAAf,C,CAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nimport PriceTable from './PriceTable';\n\nconst PriceTableWrap2 = props => {\n  return(\n    <>\n    {props.period.viewPeriodPrices && Object.entries(props.period.viewPeriodPrices).map( ([roomType, roomTypeContent], index) => \n      <React.Fragment key={index}>\n        {roomTypeContent.prices && Object.entries(roomTypeContent.prices).map( ([treatment, prices], index2) => \n          <React.Fragment key={index2}>\n            <div><span style={{color: '#4fbaad'}}>{roomTypeContent.room_type.name}</span></div>\n            <PriceTable \n              // key={index2}\n              index={index}\n              room_type={roomTypeContent.room_type}\n              treatment={treatment}\n              prices={prices}\n              hotel={props.hotel}\n              period={props.period}\n              priceTableLink={true}\n            />\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    )}\n    </>\n  )\n}\n\nexport default PriceTableWrap2;\n\n\n// export const getPriceList = period =>{\n//   let priceList = {}\n\n//   for (const [roomTypeName, roomTypeContent] of Object.entries(period.viewPeriodPrices)){\n//     priceList[roomTypeName] = {};\n\n//     if( roomTypeContent.prices ){\n//       for (const [key, treatmentObj] of Object.entries(roomTypeContent.prices)) {\n//         priceList[roomTypeName][key] = {\n//           n1: (treatmentObj.n1) ? treatmentObj.n1 : null,\n//           n2: (treatmentObj.n2) ? treatmentObj.n2 : null,\n//           n3: (treatmentObj.n3) ? treatmentObj.n3 : null,\n//           n4: (treatmentObj.n4) ? treatmentObj.n4 : null,\n//           n5: (treatmentObj.n5) ? treatmentObj.n5 : null,\n//           n6: (treatmentObj.n6) ? treatmentObj.n6 : null,\n//           n7: (treatmentObj.n7) ? treatmentObj.n7 : null,\n//         };\n//       }\n//     }\n//   }\n\n//   return priceList\n// }\n\n// const PriceTableWrap2 = props => {\n//   const priceList = getPriceList(props.period)\n  \n//   return(\n//     <>\n//     {priceList && Object.entries(priceList).map( ([roomType, treatments], index) => \n//       <React.Fragment key={index}>\n//         {treatments && Object.entries(treatments).map( ([treatment, prices], index2) => \n//           <React.Fragment key={index2}>\n//             <div><span style={{color: '#4fbaad'}}>{roomType}</span></div>\n//             <PriceTable \n//               // key={index2}\n//               index={index}\n//               room_type={roomType}\n//               treatment={treatment}\n//               prices={prices}\n//               hotel={props.hotel}\n//               period={props.period}\n//               priceTableLink={true}\n//             />\n//           </React.Fragment>\n//         )}\n//       </React.Fragment>\n//     )}\n//     </>\n//   )\n// }\n\n// export default PriceTableWrap2;"]},"metadata":{},"sourceType":"module"}