{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap-html.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport Link from \"next/link\";\nimport NextHead from 'next/head';\nimport { HotelSchema, makeHotelSchema } from \"~/components/JsonLdSchema\";\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\"; // import HotelArchive from \"~/components/Partials/HotelArchive\";\n\nimport HotelArchive2 from \"~/components/Partials/HotelArchive2\";\nimport HomeRecap from \"~/components/Partials/HomeRecap\";\nimport Newsletter from \"~/components/Partials/Newsletter\"; // const SitemapHotels = models => {\n//   return (\n//     <ul>\n//       {Object.entries(models).map((model, index) => {\n//         <li key={index}>\n//           <Link href={`${process.env.app_url}/${model.slug.it}`}>\n//             <a>{model.title.it}</a>\n//           </Link>\n//         </li>\n//       })}\n//     </ul>\n//   )\n// }\n\nconst SitemapHotels = models => `<ul>\n  ${models.map((model, index) => {\n  return `\n      <li>\n          <a href=\"${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}\">${model.title.it}</a>\n      </li>\n        `;\n}).join('')}\n  </ul>\n`;\n\nconst SitemapHtml = props => {\n  return __jsx(Layout, {\n    settings: {\n      template: \"front-page\",\n      menu: props.menu\n    },\n    meta: {\n      title: \"Mappa del sito\",\n      description: \"Mappa del sito\",\n      url: `${process.env.meta.url}/sitemap-html`,\n      image: null\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(BookingSearchBox, {\n    query: props.query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(SitemapHotels, {\n    models: props.hotels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nSitemapHtml.getInitialProps = async ctx => {\n  let menu = null;\n  let pages = [];\n  let hotels = [];\n  let pagefilters = [];\n  let rateplanperiods = [];\n\n  try {\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n    let postService = new PostService();\n    pages = await postService.all({\n      stauts: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    });\n    let hotelService = new HotelService();\n    hotels = await hotelService.all({\n      stauts: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    });\n    let pagefilterService = new PageFilterService();\n    pagefilters = await pagefilterService.all({\n      stauts: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    });\n    let rateplanperiodService = new RatePlanPeriodService();\n    rateplanperiods = await rateplanperiodService.all({\n      stauts: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    });\n  } catch (e) {\n    console.log('error', e);\n  }\n\n  return {\n    params: ctx.params,\n    query: ctx.query,\n    menu,\n    pages,\n    hotels,\n    pagefilters,\n    rateplanperiods\n  };\n};\n\nexport default SitemapHtml; // const mapStateToProps = (state) => {\n// \treturn {\n//     hotelLoading: state.hotel.loading,\n//     hotelSeatchParams: state.hotel.params,\n// \t\thotels: state.hotel.items,\n//     hotelMeta: state.hotel.meta,\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   let hotelAction = new HotelAction()\n//   return {\n//     loading: (state) => {\n//       dispatch(hotelAction.loading(state))\n//     },\n//     query: (data) => {\n//       dispatch(hotelAction.query(data))\n//     },\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(SitemapHtml);","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap-html.js"],"names":["React","connect","Link","NextHead","HotelSchema","makeHotelSchema","PostService","HotelService","PageFilterService","RatePlanPeriodService","Layout","BookingSearchBox","HotelArchive2","HomeRecap","Newsletter","SitemapHotels","models","map","model","index","process","env","app_url","slug","it","title","join","SitemapHtml","props","template","menu","description","url","meta","image","query","hotels","getInitialProps","ctx","pages","pagefilters","rateplanperiods","menuService","MenuService","get","postService","all","stauts","key","compare","value","hotelService","pagefilterService","rateplanperiodService","e","console","log","params"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,2BAA7C;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,iBAAP,MAA8B,mDAA9B;AACA,OAAOC,qBAAP,MAAkC,uDAAlC;AAGA,OAAOC,MAAP,MAAmB,4CAAnB;AACA,OAAOC,gBAAP,MAA6B,wCAA7B,C,CACA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,UAAP,MAAuB,kCAAvB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAIC,MAAD,IAAa;AACnC,IAAIA,MAAM,CAACC,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7B,SAAQ;AACZ;AACA,qBAAsB,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,wBAAuBJ,KAAK,CAACK,IAAN,CAAWC,EAAG,EAAE,KAAIN,KAAK,CAACO,KAAN,CAAYD,EAAG;AACtG;AACA,SAJI;AAKD,CANC,EAODE,IAPC,CAOI,EAPJ,CAOQ;AACZ;AACA,CAVA;;AAYA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,SACE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE;AAACC,MAAAA,QAAQ,EAAC,YAAV;AAAwBC,MAAAA,IAAI,EAAEF,KAAK,CAACE;AAApC,KADZ;AAEE,IAAA,IAAI,EAAE;AACJL,MAAAA,KAAK,EAAE,gBADH;AAEJM,MAAAA,WAAW,EAAE,gBAFT;AAGJC,MAAAA,GAAG,EAAG,GAAEZ,OAAO,CAACC,GAAR,CAAYY,IAAZ,CAAiBD,GAAI,eAHzB;AAIJE,MAAAA,KAAK,EAAE;AAJH,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEN,KAAK,CAACO,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAYE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEP,KAAK,CAACQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CAjBD;;AAmBAT,WAAW,CAACU,eAAZ,GAA8B,MAAMC,GAAN,IAAa;AACzC,MAAIR,IAAI,GAAG,IAAX;AACA,MAAIS,KAAK,GAAG,EAAZ;AACA,MAAIH,MAAM,GAAG,EAAb;AACA,MAAII,WAAW,GAAG,EAAlB;AACA,MAAIC,eAAe,GAAG,EAAtB;;AACA,MAAI;AACF,QAAIC,WAAW,GAAG,IAAIC,WAAJ,EAAlB;AACAb,IAAAA,IAAI,GAAG,MAAMY,WAAW,CAACE,GAAZ,CAAgB,CAAhB,CAAb;AAEA,QAAIC,WAAW,GAAG,IAAIvC,WAAJ,EAAlB;AACAiC,IAAAA,KAAK,GAAG,MAAMM,WAAW,CAACC,GAAZ,CAAgB;AAC5BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE,QAAN;AAAgBC,QAAAA,OAAO,EAAE,GAAzB;AAA8BC,QAAAA,KAAK,EAAE;AAArC;AADoB,KAAhB,CAAd;AAIA,QAAIC,YAAY,GAAG,IAAI5C,YAAJ,EAAnB;AACA6B,IAAAA,MAAM,GAAG,MAAMe,YAAY,CAACL,GAAb,CAAiB;AAC9BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE,QAAN;AAAgBC,QAAAA,OAAO,EAAE,GAAzB;AAA8BC,QAAAA,KAAK,EAAE;AAArC;AADsB,KAAjB,CAAf;AAIA,QAAIE,iBAAiB,GAAG,IAAI5C,iBAAJ,EAAxB;AACAgC,IAAAA,WAAW,GAAG,MAAMY,iBAAiB,CAACN,GAAlB,CAAsB;AACxCC,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE,QAAN;AAAgBC,QAAAA,OAAO,EAAE,GAAzB;AAA8BC,QAAAA,KAAK,EAAE;AAArC;AADgC,KAAtB,CAApB;AAIA,QAAIG,qBAAqB,GAAG,IAAI5C,qBAAJ,EAA5B;AACAgC,IAAAA,eAAe,GAAG,MAAMY,qBAAqB,CAACP,GAAtB,CAA0B;AAChDC,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE,QAAN;AAAgBC,QAAAA,OAAO,EAAE,GAAzB;AAA8BC,QAAAA,KAAK,EAAE;AAArC;AADwC,KAA1B,CAAxB;AAGD,GAvBD,CAuBE,OAAOI,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,CAArB;AACD;;AAED,SAAO;AACLG,IAAAA,MAAM,EAAEnB,GAAG,CAACmB,MADP;AAELtB,IAAAA,KAAK,EAAEG,GAAG,CAACH,KAFN;AAGLL,IAAAA,IAHK;AAILS,IAAAA,KAJK;AAKLH,IAAAA,MALK;AAMLI,IAAAA,WANK;AAOLC,IAAAA;AAPK,GAAP;AASD,CA1CD;;AA4CA,eAAed,WAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport Link from \"next/link\";\nimport NextHead from 'next/head'\n\nimport { HotelSchema, makeHotelSchema } from \"~/components/JsonLdSchema\";\n\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\n\n\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\";\n// import HotelArchive from \"~/components/Partials/HotelArchive\";\nimport HotelArchive2 from \"~/components/Partials/HotelArchive2\";\nimport HomeRecap from \"~/components/Partials/HomeRecap\";\nimport Newsletter from \"~/components/Partials/Newsletter\";\n\n\n// const SitemapHotels = models => {\n//   return (\n//     <ul>\n//       {Object.entries(models).map((model, index) => {\n//         <li key={index}>\n//           <Link href={`${process.env.app_url}/${model.slug.it}`}>\n//             <a>{model.title.it}</a>\n//           </Link>\n//         </li>\n//       })}\n//     </ul>\n//   )\n// }\n\nconst SitemapHotels = (models) => `<ul>\n  ${models.map((model, index) => {\n    return `\n      <li>\n          <a href=\"${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}\">${model.title.it}</a>\n      </li>\n        `;\n  })\n  .join('')}\n  </ul>\n`;\n\nconst SitemapHtml = props => {\n  return (\n    <Layout \n      settings={{template:\"front-page\", menu: props.menu}}\n      meta={{\n        title: \"Mappa del sito\",\n        description: \"Mappa del sito\",\n        url: `${process.env.meta.url}/sitemap-html`,\n        image: null\n      }}\n      >\n\n      <BookingSearchBox query={props.query} />\n\n      <SitemapHotels models={props.hotels} />\n    </Layout>\n  );\n};\n\nSitemapHtml.getInitialProps = async ctx => {\n  let menu = null;\n  let pages = [];\n  let hotels = [];\n  let pagefilters = [];\n  let rateplanperiods = [];\n  try {\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n\n    let postService = new PostService();\n    pages = await postService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    });\n\n    let hotelService = new HotelService();\n    hotels = await hotelService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    });\n\n    let pagefilterService = new PageFilterService();\n    pagefilters = await pagefilterService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    });\n\n    let rateplanperiodService = new RatePlanPeriodService();\n    rateplanperiods = await rateplanperiodService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    });\n  } catch (e) {\n    console.log('error', e)\n  }\n\n  return {\n    params: ctx.params,\n    query: ctx.query,\n    menu,\n    pages,\n    hotels,\n    pagefilters,\n    rateplanperiods\n  };\n};\n\nexport default SitemapHtml;\n\n\n// const mapStateToProps = (state) => {\n// \treturn {\n//     hotelLoading: state.hotel.loading,\n//     hotelSeatchParams: state.hotel.params,\n// \t\thotels: state.hotel.items,\n//     hotelMeta: state.hotel.meta,\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   let hotelAction = new HotelAction()\n//   return {\n//     loading: (state) => {\n//       dispatch(hotelAction.loading(state))\n//     },\n//     query: (data) => {\n//       dispatch(hotelAction.query(data))\n//     },\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(SitemapHtml);\n\n\n"]},"metadata":{},"sourceType":"module"}