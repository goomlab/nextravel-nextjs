{"ast":null,"code":"import axios from 'axios';\nexport default class BaseService {\n  constructor(url) {\n    this.url = `${process.env.api_url}` + (url ? url : '');\n    this.config = {\n      headers: {// API_KEY: '$2y$10$zgrnhniFfgWCIkTqUNmBJeJkre2AY3s7FXf8EIqdSzFodKK3uM7Jy',\n      }\n    };\n  }\n\n  initApp() {\n    return axios.get(this.url + '/travelgo-one/frontend/initialize', this.config).then(response => {\n      return Promise.resolve(response.data);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  all(params) {\n    return axios.get(this.url, {\n      params\n    }, this.config).then(response => {\n      return Promise.resolve(response.data.data);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  get(id) {\n    return axios.get(`${this.url}/${id}`, this.config).then(response => {\n      return Promise.resolve(response.data.data);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  getBySlug(slug) {\n    return axios.get(`${this.url}/by-slug/${slug}`, this.config).then(response => {\n      return Promise.resolve(response.data.data);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/packages/BaseService.js"],"names":["axios","BaseService","constructor","url","process","env","api_url","config","headers","initApp","get","then","response","Promise","resolve","data","catch","error","reject","all","params","id","getBySlug","slug"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,WAAN,CAAkB;AAE/BC,EAAAA,WAAW,CAACC,GAAD,EAAK;AACd,SAAKA,GAAL,GAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,EAAvB,IAA6BH,GAAD,GAAQA,GAAR,GAAc,EAA1C,CAAX;AACA,SAAKI,MAAL,GAAc;AACZC,MAAAA,OAAO,EAAE,CACP;AADO;AADG,KAAd;AAKD;;AAEDC,EAAAA,OAAO,GAAE;AACP,WAAOT,KAAK,CAACU,GAAN,CAAU,KAAKP,GAAL,GAAW,mCAArB,EAA0D,KAAKI,MAA/D,EACNI,IADM,CACDC,QAAQ,IAAI;AAChB,aAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACG,IAAzB,CAAP;AACD,KAHM,EAINC,KAJM,CAIAC,KAAK,IAAI;AACd,aAAOJ,OAAO,CAACK,MAAR,CAAeD,KAAf,CAAP;AACD,KANM,CAAP;AAOD;;AAEDE,EAAAA,GAAG,CAACC,MAAD,EAAQ;AACT,WAAOpB,KAAK,CAACU,GAAN,CAAU,KAAKP,GAAf,EAAoB;AAAEiB,MAAAA;AAAF,KAApB,EAAgC,KAAKb,MAArC,EACNI,IADM,CACDC,QAAQ,IAAI;AAChB,aAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACG,IAAT,CAAcA,IAA9B,CAAP;AACD,KAHM,EAINC,KAJM,CAIAC,KAAK,IAAI;AACd,aAAOJ,OAAO,CAACK,MAAR,CAAeD,KAAf,CAAP;AACD,KANM,CAAP;AAOD;;AAEDP,EAAAA,GAAG,CAACW,EAAD,EAAI;AACL,WAAOrB,KAAK,CAACU,GAAN,CAAW,GAAE,KAAKP,GAAI,IAAGkB,EAAG,EAA5B,EAA+B,KAAKd,MAApC,EACNI,IADM,CACDC,QAAQ,IAAI;AAChB,aAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACG,IAAT,CAAcA,IAA9B,CAAP;AACD,KAHM,EAINC,KAJM,CAIAC,KAAK,IAAI;AACd,aAAOJ,OAAO,CAACK,MAAR,CAAeD,KAAf,CAAP;AACD,KANM,CAAP;AAOD;;AAEDK,EAAAA,SAAS,CAACC,IAAD,EAAM;AACb,WAAOvB,KAAK,CAACU,GAAN,CAAW,GAAE,KAAKP,GAAI,YAAWoB,IAAK,EAAtC,EAAyC,KAAKhB,MAA9C,EACNI,IADM,CACDC,QAAQ,IAAI;AAChB,aAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACG,IAAT,CAAcA,IAA9B,CAAP;AACD,KAHM,EAINC,KAJM,CAIAC,KAAK,IAAI;AACd,aAAOJ,OAAO,CAACK,MAAR,CAAeD,KAAf,CAAP;AACD,KANM,CAAP;AAOD;;AAjD8B","sourcesContent":["import axios from 'axios';\n\nexport default class BaseService {\n\n  constructor(url){\n    this.url = `${process.env.api_url}` + ((url) ? url : '');\n    this.config = {\n      headers: {\n        // API_KEY: '$2y$10$zgrnhniFfgWCIkTqUNmBJeJkre2AY3s7FXf8EIqdSzFodKK3uM7Jy',\n      }\n    }\n  }\n\n  initApp(){\n    return axios.get(this.url + '/travelgo-one/frontend/initialize', this.config)\n    .then(response => {\n      return Promise.resolve(response.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  all(params){\n    return axios.get(this.url, { params }, this.config)\n    .then(response => {\n      return Promise.resolve(response.data.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  get(id){\n    return axios.get(`${this.url}/${id}`, this.config)\n    .then(response => {\n      return Promise.resolve(response.data.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  getBySlug(slug){\n    return axios.get(`${this.url}/by-slug/${slug}`, this.config)\n    .then(response => {\n      return Promise.resolve(response.data.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}