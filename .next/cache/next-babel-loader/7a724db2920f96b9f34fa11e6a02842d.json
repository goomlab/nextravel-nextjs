{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport moment from 'moment';\nimport Link from \"next/link\";\nimport ReactPaginate from 'react-paginate';\nimport SwiperCore, { Swiper, Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\nimport PriceTable from './PriceTable';\n\nconst NavTab = props => {\n  const index = props.index;\n  let dateFrom = moment(props.period.date_from, 'YYYY-MM-DD');\n  let dateTo = moment(props.period.date_to, 'YYYY-MM-DD');\n  return __jsx(\"div\", {\n    key: index,\n    className: `swiper-slide swiper-slide-${props.hotel.id}`\n  }, __jsx(\"a\", {\n    className: `nav-item nav-link ${index == props.activeTab ? 'active' : ''}`,\n    id: `nav-${props.hotel.id}-period-${index}-tab`,\n    \"data-toggle\": \"tab\",\n    href: `#nav-${props.hotel.id}-period-${index}`,\n    role: \"tab\",\n    \"aria-controls\": `nav-${props.hotel.id}-period-${index}`,\n    \"aria-selected\": \"true\",\n    onClick: () => props.onActivateTab(index)\n  }, __jsx(\"span\", null, dateFrom.format('DD/MM'), __jsx(\"br\", null), dateTo.format('DD/MM')), __jsx(\"i\", {\n    className: \"ico ico-arrow-curved\"\n  })));\n};\n\nconst NavContent = props => {\n  const index = props.index;\n  let priceList = {};\n\n  for (const [key, treatmentObj] of Object.entries(props.period.viewPrices)) {\n    priceList[key] = {\n      n1: treatmentObj.n1 ? treatmentObj.n1 : null,\n      n2: treatmentObj.n2 ? treatmentObj.n2 : null,\n      n3: treatmentObj.n3 ? treatmentObj.n3 : null,\n      n4: treatmentObj.n4 ? treatmentObj.n4 : null,\n      n5: treatmentObj.n5 ? treatmentObj.n5 : null,\n      n6: treatmentObj.n6 ? treatmentObj.n6 : null,\n      n7: treatmentObj.n7 ? treatmentObj.n7 : null\n    };\n  }\n\n  return __jsx(\"div\", {\n    className: `tab-pane fade ${index == 0 ? 'show active' : ''}`,\n    id: `nav-${props.hotel.id}-period-${index}`,\n    role: \"tabpanel\",\n    \"aria-labelledby\": `nav-${props.hotel.id}-period-${index}-tab`\n  }, priceList && Object.entries(priceList).map(([treatment, prices], index) => __jsx(PriceTable, {\n    key: index,\n    index: index,\n    treatment: treatment,\n    prices: prices,\n    hotel: props.hotel,\n    period: props.period,\n    priceTableLink: true\n  })));\n};\n\nconst HotelArchiveItem = props => {\n  const hotel = props.hotel;\n  const swiperPrices = React.useRef(null);\n  let stars = [];\n\n  for (let i = 1; i <= parseInt(hotel.stars); i++) {\n    stars.push(__jsx(\"i\", {\n      key: i,\n      className: \"ico ico-star\"\n    }));\n  }\n\n  const [activeTab, setActiveTab] = React.useState(0);\n\n  const onActivateTab = index => {\n    setActiveTab(index);\n  };\n\n  React.useEffect(() => {\n    swiperPrices.current = new Swiper(`#swiperPrices-${hotel.id}`, {\n      grubCursor: false,\n      simulateTouch: false,\n      direction: 'horizontal',\n      //speed: 600,\n      // slidesPerView: 4,\n      spaceBetween: 0,\n      breakpoints: {\n        1: {\n          slidesPerView: 1\n        },\n        320: {\n          slidesPerView: 4\n        },\n        768: {\n          slidesPerView: 2\n        },\n        992: {\n          slidesPerView: 3\n        },\n        1200: {\n          slidesPerView: 4\n        }\n      },\n      navigation: {\n        nextEl: `#swiperPrices-${hotel.id}-button-next`,\n        prevEl: `#swiperPrices-${hotel.id}-button-prev`\n      }\n    });\n  }, []); // React.useEffect(() => {\n  //   if( swiperPrices && swiperPrices.current )\n  //     swiperPrices.current.update()\n  // }, [activeTab])\n\n  return __jsx(\"div\", {\n    className: \"hotel-list-item\"\n  }, __jsx(\"a\", {\n    href: `/accommodations/${props.hotel.slug.it}`\n  }, __jsx(\"div\", {\n    className: \"topline\"\n  }, __jsx(\"div\", {\n    className: \"title mr-auto\"\n  }, hotel.name), __jsx(\"div\", {\n    className: \"stars ml-auto\"\n  }, stars))), __jsx(\"a\", {\n    href: `/accommodations/${props.hotel.slug.it}`\n  }, __jsx(\"figure\", {\n    className: \"img-bgas\"\n  }, __jsx(\"img\", {\n    src: hotel.media && hotel.media.gallery && hotel.media.gallery[0] ? hotel.media.gallery[0].url : 'default',\n    alt: hotel.media && hotel.media.gallery && hotel.media.gallery[0] && hotel.media.gallery[0].name\n  }))), __jsx(\"div\", {\n    className: \"prices-box\"\n  }, hotel.rateplanPeriods && hotel.rateplanPeriods.length > 0 && __jsx(React.Fragment, null, __jsx(\"nav\", {\n    style: {\n      width: \"100% !important\"\n    }\n  }, __jsx(\"div\", {\n    className: \"nav nav-tabs\",\n    id: \"nav-tab-1\",\n    role: \"tablist\",\n    style: {\n      width: \"100% !important\"\n    }\n  }, __jsx(\"div\", {\n    id: `swiperPrices-${hotel.id}`,\n    className: \"swiper-container swiperPrices\",\n    style: {\n      width: \"100% !important\"\n    }\n  }, __jsx(\"div\", {\n    className: \"swiper-wrapper\",\n    style: {\n      width: \"100% !important\"\n    }\n  }, hotel.rateplanPeriods.map((period, index) => __jsx(NavTab, {\n    key: index,\n    index: index,\n    period: period,\n    hotel: hotel,\n    activeTab: activeTab,\n    onActivateTab: () => onActivateTab(index)\n  })))), __jsx(\"div\", {\n    id: `swiperPrices-${hotel.id}-button-prev`,\n    className: \"swiper-button-prev\"\n  }), __jsx(\"div\", {\n    id: `swiperPrices-${hotel.id}-button-next`,\n    className: \"swiper-button-next\"\n  }))), __jsx(\"div\", {\n    className: \"tab-content\",\n    id: \"nav-tabContent-1\"\n  }, hotel.rateplanPeriods.map((period, index) => __jsx(NavContent, {\n    key: index,\n    index: index,\n    hotel: hotel,\n    period: period\n  })))), !hotel.rateplanPeriods || hotel.rateplanPeriods.length <= 0 && __jsx(\"div\", {\n    style: {\n      height: 70\n    }\n  }), __jsx(\"div\", {\n    className: \"details\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-4\"\n  }, __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"span\", {\n    className: \"bold\"\n  }, \"POSIZIONE\"), __jsx(\"br\", null), hotel.details.address, __jsx(\"br\", null), hotel.details.zip_code, \" - \", hotel.details.city, __jsx(\"br\", null), \"\\u2014\", __jsx(\"br\", null), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: hotel.description_near.it\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-8\"\n  }, __jsx(\"ul\", {\n    className: \"hotel-service-list\"\n  }, hotel.incServices && hotel.incServices.length > 0 && hotel.incServices.map((obj, index) => __jsx(\"li\", {\n    key: index\n  }, __jsx(\"span\", null, obj.name))))))), __jsx(\"div\", {\n    className: \"bottomline\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-8\"\n  }, __jsx(\"div\", {\n    className: \"line\"\n  })), __jsx(\"div\", {\n    className: \"col-4\"\n  }, __jsx(Link, {\n    as: `/accommodations/${props.hotel.slug.it}`,\n    href: {\n      pathname: `/accommodations/[accommodition]`\n    }\n  }, __jsx(\"a\", {\n    className: \"goto\"\n  }, \"Visualizza la struttura\")))))));\n};\n\nconst HotelPagination = props => {\n  const [currPage, setCurrPage] = React.useState(0);\n  React.useEffect(() => {\n    if (props.meta) {\n      setCurrPage(parseInt(props.meta.current_page) - 1);\n    }\n  }, []);\n\n  const handlePageClick = e => {\n    props.filter.page = e.selected + 1;\n    let stringa = '?';\n\n    for (let i in props.filter) stringa += `${i}=${props.filter[i]}&`;\n\n    window.location.href = window.location.pathname + stringa;\n  };\n\n  if (props.meta) {\n    return __jsx(ReactPaginate, {\n      forcePage: currPage,\n      previousLabel: \"<\",\n      nextLabel: \">\",\n      breakLabel: \"...\",\n      breakClassName: \"break-me\",\n      pageCount: props.meta.last_page,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: e => handlePageClick(e),\n      containerClassName: \"pagination\",\n      subContainerClassName: \"pages pagination\",\n      activeClassName: \"active\"\n    });\n  }\n\n  return '';\n};\n\nconst HotelArchive = props => {\n  return __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"container\"\n  }, props.hotels && props.hotels.length > 0 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"row\"\n  }, props.hotels.map((hotel, index) => __jsx(\"div\", {\n    key: index,\n    className: \"col-md-6\"\n  }, __jsx(HotelArchiveItem, {\n    hotel: hotel\n  })))), __jsx(HotelPagination, props)), !props.hotels || props.hotels.length <= 0 && __jsx(\"div\", null, \"Nessun risultato\")));\n};\n\nexport default HotelArchive;","map":null,"metadata":{},"sourceType":"module"}