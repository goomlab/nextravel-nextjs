{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport BaseService from \"~/packages/BaseService\";\nimport MenuService from \"~/packages/Post/services/MenuService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport TemplateArchiveHotel from \"~/components/Templates/TemplateArchiveHotel\";\n\nconst Index = props => {\n  return __jsx(TemplateArchiveHotel, props);\n};\n\nIndex.getInitialProps = async params => {\n  // let initialProps = {};\n  let menu = null;\n  let locs = [];\n  let hotelCategories = [];\n  let page = null;\n  let hotels = [];\n  let searchParams = {};\n\n  try {\n    // initialProps = mainInitialProps();\n    let baseService = new BaseService();\n    let init = await baseService.initApp();\n    locs = init.locs || [];\n    hotelCategories = init.hotelCategories || [];\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n    let pageFilterService = new PageFilterService();\n    page = await pageFilterService.getBySlug(params.query.slug);\n\n    if (page) {\n      if (page.date_from) searchParams = _objectSpread(_objectSpread({}, searchParams), {}, {\n        checkin: page.date_from\n      });\n      if (page.date_to) searchParams = _objectSpread(_objectSpread({}, searchParams), {}, {\n        checkout: page.date_to\n      });\n      if (page.loc_id) searchParams = _objectSpread(_objectSpread({}, searchParams), {}, {\n        checkout: page.loc_id\n      });\n      if (page.category_id) searchParams = _objectSpread(_objectSpread({}, searchParams), {}, {\n        checkout: page.category_id\n      });\n      let hotelService = new HotelService();\n      hotels = await hotelService.query(searchParams);\n    }\n  } catch (e) {\n    console.log('error', e);\n  }\n\n  return {\n    menu,\n    locs,\n    hotelCategories,\n    page,\n    hotels,\n    searchParams\n  };\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}