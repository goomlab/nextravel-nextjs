{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport NewsletterAction from '~/packages/TravelgoOne/actions/NewsletterAction';\n\nconst Newsletter = props => {\n  React.useEffect(() => {\n    props.getClientIp();\n  }, []);\n  /**\n   * onChange\n   */\n\n  const onChange = e => {\n    e.persist();\n    console.log('onChage', e);\n    let newState = Object.assign({}, props.newsletter);\n\n    switch (e.target.name) {\n      case 'privacy':\n        newState[e.target.name] = e.target.checked ? 1 : 0;\n        break;\n\n      default:\n        newState[e.target.name] = e.target.value;\n        break;\n    }\n\n    props.setContact(newState);\n  };\n  /**\n   * onSubmit\n   */\n\n\n  const handleSubmit = () => {\n    props.createContact(props.newsletter);\n  };\n  /**\n   * Validate\n   */\n\n\n  const formik = useFormik({\n    initialValues: {\n      email: props.newsletter.email || \"\",\n      privacy: props.newsletter.privacy || 0\n    },\n    validationSchema: yup.object().shape({\n      email: yup.string().required('Campo non valido'),\n      privacy: yup.number().min(1, 'Campo non valido').max(1, 'Campo non valido')\n    }),\n    enableReinitialize: true,\n    onSubmit: handleSubmit\n  });\n  /**\n   * Render\n   */\n\n  return __jsx(\"section\", {\n    className: \"section-main section-newsletter\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-5\"\n  }, __jsx(\"div\", {\n    className: \"description\"\n  }, __jsx(\"strong\", null, \"Inserisci la tua email.\", __jsx(\"br\", null), \"Sarai aggiornato su tutte le offerte.\"), __jsx(\"br\", null), \"Alcune sono riservate ai soli iscritti.\", __jsx(\"br\", null), \"Per una vacanza su misura contatta\", __jsx(\"br\", null), \"il nostro booking \", process.env.contacts.phone.label)), __jsx(\"div\", {\n    className: \"col-lg-6 offset-lg-1\"\n  }, __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"needs-validation\" + (formik.errors ? \"was-validated\" : \"\"),\n    noValidate: true\n  }, __jsx(\"div\", {\n    className: \"form-template-1\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-9\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"email\",\n    className: \"form-control\" + (formik.errors.email ? \" is-invalid\" : \"\"),\n    id: \"newsletter_email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: formik.values.email || '',\n    onChange: e => {\n      onChange(e);\n      formik.handleChange(e);\n    }\n  }), formik.errors.email && __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, formik.errors.email)), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"div\", {\n    className: \"custom-control custom-checkbox\"\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"custom-control-input\" + (formik.errors.privacy ? \" is-invalid\" : \"\"),\n    name: \"privacy\",\n    id: \"newsletter_privacy\",\n    value: \"1\",\n    checked: formik.values.privacy == 1 ? 1 : 0,\n    onChange: e => {\n      onChange(e);\n      formik.handleChange(e);\n    }\n  }), __jsx(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"newsletter_privacy\"\n  }, \"Acconsento al trattamento dei miei dati ai sensi dell\\u2019informativa sulla \", __jsx(\"a\", {\n    href: \"/privacy-policy\",\n    target: \"_blank\",\n    rel: \"nofollow\"\n  }, \"Privacy\"), \".\"), formik.errors.privacy && __jsx(\"div\", {\n    className: \"invalid-feedback\"\n  }, formik.errors.privacy)))), __jsx(\"div\", {\n    className: \"col-lg-3\"\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-green\"\n  }, \"iscriviti\"))))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    newsletter: state.newsletter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  let newsletterAction = new NewsletterAction();\n  return {\n    setContact: data => {\n      dispatch(newsletterAction.setItem(data));\n    },\n    resetContact: () => {\n      dispatch(newsletterAction.resetItem());\n    },\n    getClientIp: () => {\n      dispatch(newsletterAction.getClientIp());\n    },\n    createContact: data => {\n      dispatch(newsletterAction.sendinblue_createContact(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Newsletter);","map":null,"metadata":{},"sourceType":"module"}