{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/UI/AlertMessage.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction';\n\nvar AlertMessage = function AlertMessage(props) {\n  _s();\n\n  var initialState = props.message && props.message != \"\" ? true : false;\n\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  if (initialState != open) setOpen(initialState);\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n    props.resetAlertMessage();\n  };\n\n  var type = \"info\";\n  var title = \"Info\";\n\n  if (props.type) {\n    switch (props.type) {\n      case 'alert-success':\n        type = 'success';\n        title = \"Successo\";\n        break;\n\n      case 'alert-danger':\n        type = 'error';\n        title = \"Errore\";\n        break;\n\n      case 'alert-warning':\n        type = 'warning';\n        title = \"Attenzione\";\n        break;\n\n      default:\n        type = \"info\";\n        title = \"Info\";\n        break;\n    }\n  }\n\n  return __jsx(\"div\", {\n    id: \"AlertMessage\",\n    className: \"AlertMessage modal\" + (open ? \" fade show\" : \"\"),\n    tabindex: \"-1\",\n    role: \"dialog\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"modal-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"h5\", {\n    className: \"modal-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    onClick: function onClick(e) {\n      return handleClose();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"\\xD7\"))), __jsx(\"div\", {\n    className: \"modal-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, props.message)))));\n};\n\n_s(AlertMessage, \"OG7jfSpfWo62N9GNRIxDgRTUJGI=\");\n\n_c = AlertMessage;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    type: state.alertMessage.type,\n    message: state.alertMessage.message\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    resetAlertMessage: function resetAlertMessage() {\n      dispatch(AlertMessageAction.reset());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertMessage);\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertMessage\");","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/UI/AlertMessage.js"],"names":["React","connect","AlertMessageAction","AlertMessage","props","initialState","message","useState","open","setOpen","handleOpen","handleClose","resetAlertMessage","type","title","e","mapStateToProps","state","alertMessage","mapDispatchToProps","dispatch","reset"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction';\n\nconst AlertMessage = props => {\n\n  let initialState = (props.message && props.message != \"\") ? true : false;\n\tconst [open, setOpen] = React.useState(initialState);\n\tif( initialState != open )\n\t\tsetOpen(initialState);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n\t\tsetOpen(false);\n\t\tprops.resetAlertMessage();\n  };\n\n  let type = \"info\";\n\tlet title = \"Info\";\n\tif( props.type ) {\n\t\tswitch(props.type) {\n\t\t\tcase 'alert-success': type = 'success'; title = \"Successo\"; break;\n\t\t\tcase 'alert-danger': type = 'error'; title = \"Errore\"; break;\n\t\t\tcase 'alert-warning': type = 'warning'; title = \"Attenzione\"; break;\n\t\t\tdefault: type = \"info\"; title = \"Info\"; break;\n\t\t}\n\t}\n  \n  return(\n    <div \n      id=\"AlertMessage\" \n      className={\"AlertMessage modal\" + (open ? \" fade show\" : \"\")}\n      tabindex=\"-1\" \n      role=\"dialog\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{title}</h5>\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={(e)=>handleClose()}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <p>{props.message}</p>\n          </div>\n          {/* <div className=\"modal-footer\">\n            <button \n              type=\"button\" \n              className=\"btn btn-secondary\" \n              data-dismiss=\"modal\"\n              onClick={(e)=>handleClose()}\n              >\n                Chiudi\n              </button>\n          </div> */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\ttype: state.alertMessage.type,\n\t\tmessage: state.alertMessage.message\n\t}\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetAlertMessage: () => {\n      dispatch(AlertMessageAction.reset());\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertMessage);"]},"metadata":{},"sourceType":"module"}