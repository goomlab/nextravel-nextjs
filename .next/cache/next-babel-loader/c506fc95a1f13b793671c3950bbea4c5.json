{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { MakeStore, createWrapper, Context, HYDRATE } from 'next-redux-wrapper';\nimport alertMessage from './packages/Base/reducers/AlertMessageReducer';\nimport pageLoader from './packages/Base/reducers/PageLoaderReducer';\nimport hotel from './packages/TravelgoOne/reducers/HotelReducer';\nimport practiceByGuest from './packages/TravelgoOne/reducers/PracticeByGuestReducer';\nimport newsletter from './packages/TravelgoOne/reducers/NewsletterReducer'; // create a makeStore function\n\nexport const makeStore = context => createStore(combineReducers({\n  alertMessage: alertMessage,\n  pageLoader: pageLoader,\n  hotel: hotel,\n  practiceByGuest: practiceByGuest,\n  newsletter: newsletter\n}), {}, composeWithDevTools(applyMiddleware(reduxThunk))); // export an assembled wrapper\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/store.js"],"names":["createStore","combineReducers","applyMiddleware","reduxThunk","composeWithDevTools","MakeStore","createWrapper","Context","HYDRATE","alertMessage","pageLoader","hotel","practiceByGuest","newsletter","makeStore","context","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,SAAR,EAAmBC,aAAnB,EAAkCC,OAAlC,EAA2CC,OAA3C,QAAyD,oBAAzD;AAEA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAOC,KAAP,MAAkB,8CAAlB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,UAAP,MAAuB,mDAAvB,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAGC,OAAO,IAAIf,WAAW,CAC3CC,eAAe,CAAC;AAChBQ,EAAAA,YAAY,EAAEA,YADE;AAEhBC,EAAAA,UAAU,EAAEA,UAFI;AAGhBC,EAAAA,KAAK,EAAEA,KAHS;AAIhBC,EAAAA,eAAe,EAAEA,eAJD;AAKhBC,EAAAA,UAAU,EAAEA;AALI,CAAD,CAD4B,EAQ7C,EAR6C,EAS7CT,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAT0B,CAAxC,C,CAYP;;AACA,OAAO,MAAMa,OAAO,GAAGV,aAAa,CAACQ,SAAD,EAAY;AAACG,EAAAA,KAAK,EAAE;AAAR,CAAZ,CAA7B","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {MakeStore, createWrapper, Context, HYDRATE} from 'next-redux-wrapper';\n\nimport alertMessage from './packages/Base/reducers/AlertMessageReducer'\nimport pageLoader from './packages/Base/reducers/PageLoaderReducer'\nimport hotel from './packages/TravelgoOne/reducers/HotelReducer'\nimport practiceByGuest from './packages/TravelgoOne/reducers/PracticeByGuestReducer'\nimport newsletter from './packages/TravelgoOne/reducers/NewsletterReducer'\n\n// create a makeStore function\nexport const makeStore = context => createStore(\n    combineReducers({\n    alertMessage: alertMessage,\n    pageLoader: pageLoader,\n    hotel: hotel,\n    practiceByGuest: practiceByGuest,\n    newsletter: newsletter,\n  }),\n  {},\n  composeWithDevTools(applyMiddleware(reduxThunk))\n);\n\n// export an assembled wrapper\nexport const wrapper = createWrapper(makeStore, {debug: true});"]},"metadata":{},"sourceType":"module"}