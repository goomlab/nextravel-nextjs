{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport moment from 'moment';\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\n\nvar createSitemap = function createSitemap(models) {\n  return \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n    <urlset xmlns=\\\"http://www.sitemaps.org/schemas/sitemap/0.9\\\">\\n        \".concat(models.map(function (model, index) {\n    var updatedAt = moment(model.updated_at, \"DD/MM/YYYY hh:mm:ss\").toISOString(); // 12/03/2021 17:05:06  -->  2021-02-17T11:39:04+00:00\n\n    return \"\\n                    <url>\\n                        <loc>\".concat(\"\".concat(process.env.app_url, \"/strutture-ricettive/\").concat(model.slug.it), \"</loc>\\n                        <lastmod>\", updatedAt, \"</lastmod>\\n                    </url>\\n                \");\n  }).join(''), \"\\n    </urlset>\\n    \");\n}; // class Sitemap extends React.Component {\n//   static async getInitialProps({ res }) {\n//     let hotelService = new HotelService();\n//     let models = await hotelService.all() || [];\n//     // const request = await fetch(EXTERNAL_DATA_URL);\n//     // const posts = await request.json();\n//     res.setHeader('Content-Type', 'text/xml');\n//     res.write(createSitemap(models));\n//     res.end();\n//   }\n// }\n\n\nvar Sitemap = function Sitemap(props) {};\n\n_c = Sitemap;\n\nSitemap.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var res, hotels, hotelService;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref.res;\n            hotels = [];\n            _context.prev = 2;\n            hotelService = new HotelService();\n            _context.next = 6;\n            return hotelService.all();\n\n          case 6:\n            hotels = _context.sent;\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            console.log('error', _context.t0);\n\n          case 12:\n            res.setHeader('Content-Type', 'text/xml');\n            res.write(createSitemap(models));\n            res.end();\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 9]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Sitemap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sitemap\");","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap/accommodations.js"],"names":["React","moment","HotelService","createSitemap","models","map","model","index","updatedAt","updated_at","toISOString","process","env","app_url","slug","it","join","Sitemap","props","getInitialProps","res","hotels","hotelService","all","console","log","setHeader","write","end"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,YAAP,MAAyB,8CAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD;AAAA,2IAEZA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC3B,QAAIC,SAAS,GAAGP,MAAM,CAACK,KAAK,CAACG,UAAP,EAAmB,qBAAnB,CAAN,CAAgDC,WAAhD,EAAhB,CAD2B,CACoD;;AAC/E,yFAEsBC,OAAO,CAACC,GAAR,CAAYC,OAFlC,kCAEiEP,KAAK,CAACQ,IAAN,CAAWC,EAF5E,gDAGuBP,SAHvB;AAMD,GARD,EASCQ,IATD,CASM,EATN,CAFY;AAAA,CAAtB,C,CAeA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW,CAE1B,CAFD;;KAAMD,O;;AAINA,OAAO,CAACE,eAAR;AAAA,uEAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,YAAAA,GAAR,QAAQA,GAAR;AACpBC,YAAAA,MADoB,GACX,EADW;AAAA;AAGlBC,YAAAA,YAHkB,GAGH,IAAIpB,YAAJ,EAHG;AAAA;AAAA,mBAIPoB,YAAY,CAACC,GAAb,EAJO;;AAAA;AAItBF,YAAAA,MAJsB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMtBG,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AANsB;AASxBL,YAAAA,GAAG,CAACM,SAAJ,CAAc,cAAd,EAA8B,UAA9B;AACAN,YAAAA,GAAG,CAACO,KAAJ,CAAUxB,aAAa,CAACC,MAAD,CAAvB;AACAgB,YAAAA,GAAG,CAACQ,GAAJ;;AAXwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAeX,OAAf","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\n\nconst createSitemap = (models) => `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n        ${models.map((model, index) => {\n            let updatedAt = moment(model.updated_at, \"DD/MM/YYYY hh:mm:ss\").toISOString(); // 12/03/2021 17:05:06  -->  2021-02-17T11:39:04+00:00\n            return `\n                    <url>\n                        <loc>${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}</loc>\n                        <lastmod>${updatedAt}</lastmod>\n                    </url>\n                `;\n          })\n          .join('')}\n    </urlset>\n    `;\n\n// class Sitemap extends React.Component {\n//   static async getInitialProps({ res }) {\n//     let hotelService = new HotelService();\n//     let models = await hotelService.all() || [];\n\n//     // const request = await fetch(EXTERNAL_DATA_URL);\n//     // const posts = await request.json();\n\n//     res.setHeader('Content-Type', 'text/xml');\n//     res.write(createSitemap(models));\n//     res.end();\n//   }\n// }\n\nconst Sitemap = (props) => {\n\n}\n\nSitemap.getInitialProps = async ({res}) => {\n  let hotels = [];\n  try {\n    let hotelService = new HotelService();\n    hotels = await hotelService.all();\n  } catch (e) {\n    console.log('error', e)\n  }\n\n  res.setHeader('Content-Type', 'text/xml');\n  res.write(createSitemap(models));\n  res.end();\n};\n\nexport default Sitemap;"]},"metadata":{},"sourceType":"module"}