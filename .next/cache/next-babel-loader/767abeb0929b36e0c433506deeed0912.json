{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemaphtml.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport Link from \"next/link\";\nimport MenuService from \"~/packages/Post/services/MenuService\";\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\";\n\nconst SitemapHotels = props => {\n  console.log('hotels', props.models);\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, props.models.map((model, index) => __jsx(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    as: `${process.env.app_url}/${process.env.accommodations_path}/${model.slug.it}`,\n    href: {\n      pathname: `${process.env.app_url}/${process.env.accommodations_path}/${model.slug.it}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"goto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, model.title.it)))));\n};\n\nconst SitemapFilterPages = props => {\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, props.models.map((model, index) => __jsx(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    as: `${process.env.app_url}/offerte/${model.slug.it}`,\n    href: {\n      pathname: `${process.env.app_url}/offerte/${model.slug.it}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    className: \"goto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, model.title.it)))));\n}; // const SitemapHotels = (models) => `<ul>\n//   ${models.map((model, index) => {\n//     return `\n//       <li>\n//           <a href=\"${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}\">${model.title.it}</a>\n//       </li>\n//         `;\n//   })\n//   .join('')}\n//   </ul>\n// `;\n\n\nconst SitemapHtml = props => {\n  console.log('props', props);\n  return __jsx(Layout, {\n    settings: {\n      template: \"sitemap-page\",\n      menu: props.menu\n    },\n    meta: {\n      title: \"Mappa del sito\",\n      description: \"Mappa del sito\",\n      url: `${process.env.meta.url}/sitemap-html`,\n      image: null\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"single-hotel-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(SitemapHotels, {\n    models: props.hotels || [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), __jsx(SitemapFilterPages, {\n    models: props.filterpages || [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }))));\n};\n\nSitemapHtml.getInitialProps = async ctx => {\n  let menu = null;\n  let pages = [];\n  let hotels = [];\n  let pagefilters = [];\n  let rateplanperiods = [];\n\n  try {\n    let menuService = new MenuService();\n    menu = await menuService.get(1); // let postService = new PostService();\n    // pages = await postService.all({\n    //   stauts: {key: 'status', compare: '=', value: 1}\n    // }) || [];\n\n    let hotelService = new HotelService();\n    hotels = (await hotelService.all({\n      status: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    })) || [];\n    let pagefilterService = new PageFilterService();\n    pagefilters = (await pagefilterService.all({\n      stauts: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    })) || []; // let rateplanperiodService = new RatePlanPeriodService();\n    // rateplanperiods = await rateplanperiodService.all({\n    //   stauts: {key: 'status', compare: '=', value: 1}\n    // }) || [];\n  } catch (e) {\n    console.log('error', e);\n  }\n\n  return {\n    params: ctx.params,\n    query: ctx.query,\n    menu,\n    pages,\n    hotels,\n    pagefilters,\n    rateplanperiods\n  };\n};\n\nexport default SitemapHtml; // const mapStateToProps = (state) => {\n// \treturn {\n//     hotelLoading: state.hotel.loading,\n//     hotelSeatchParams: state.hotel.params,\n// \t\thotels: state.hotel.items,\n//     hotelMeta: state.hotel.meta,\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   let hotelAction = new HotelAction()\n//   return {\n//     loading: (state) => {\n//       dispatch(hotelAction.loading(state))\n//     },\n//     query: (data) => {\n//       dispatch(hotelAction.query(data))\n//     },\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(SitemapHtml);","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemaphtml.js"],"names":["React","connect","Link","MenuService","PostService","HotelService","PageFilterService","RatePlanPeriodService","Layout","BookingSearchBox","SitemapHotels","props","console","log","models","map","model","index","process","env","app_url","accommodations_path","slug","it","pathname","title","SitemapFilterPages","SitemapHtml","template","menu","description","url","meta","image","hotels","filterpages","getInitialProps","ctx","pages","pagefilters","rateplanperiods","menuService","get","hotelService","all","status","key","compare","value","pagefilterService","stauts","e","params","query"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport Link from \"next/link\";\n\nimport MenuService from \"~/packages/Post/services/MenuService\";\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\n\n\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\";\n\n\nconst SitemapHotels = props => {console.log('hotels', props.models)\n  return (\n    <ul>\n      {props.models.map((model, index) =>\n        <li key={index}>\n          <Link as={`${process.env.app_url}/${process.env.accommodations_path}/${model.slug.it}`}\n            href={{\n              pathname: `${process.env.app_url}/${process.env.accommodations_path}/${model.slug.it}`,\n            }}\n          >\n            <a className=\"goto\">{model.title.it}</a>\n          </Link>\n        </li>\n      )}\n    </ul>\n  )\n}\n\nconst SitemapFilterPages = props => {\n  return (\n    <ul>\n      {props.models.map((model, index) =>\n        <li key={index}>\n          <Link as={`${process.env.app_url}/offerte/${model.slug.it}`}\n            href={{\n              pathname: `${process.env.app_url}/offerte/${model.slug.it}`,\n            }}\n          >\n            <a className=\"goto\">{model.title.it}</a>\n          </Link>\n        </li>\n      )}\n    </ul>\n  )\n}\n\n// const SitemapHotels = (models) => `<ul>\n//   ${models.map((model, index) => {\n//     return `\n//       <li>\n//           <a href=\"${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}\">${model.title.it}</a>\n//       </li>\n//         `;\n//   })\n//   .join('')}\n//   </ul>\n// `;\n\nconst SitemapHtml = props => {console.log('props', props)\n  return (\n    <Layout \n      settings={{template:\"sitemap-page\", menu: props.menu}}\n      meta={{\n        title: \"Mappa del sito\",\n        description: \"Mappa del sito\",\n        url: `${process.env.meta.url}/sitemap-html`,\n        image: null\n      }}\n      >\n\n      {/* <BookingSearchBox query={props.query} /> */}\n\n      <section className=\"single-hotel-section\">\n        <div className=\"container\">\n          <SitemapHotels models={props.hotels || []} />\n          <SitemapFilterPages models={props.filterpages || []} />\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nSitemapHtml.getInitialProps = async ctx => {\n  let menu = null;\n  let pages = [];\n  let hotels = [];\n  let pagefilters = [];\n  let rateplanperiods = [];\n  try {\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n\n    // let postService = new PostService();\n    // pages = await postService.all({\n    //   stauts: {key: 'status', compare: '=', value: 1}\n    // }) || [];\n\n    let hotelService = new HotelService();\n    hotels = await hotelService.all({\n      status: {key: 'status', compare: '=', value: 1}\n    }) || [];\n\n    let pagefilterService = new PageFilterService();\n    pagefilters = await pagefilterService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    }) || [];\n\n    // let rateplanperiodService = new RatePlanPeriodService();\n    // rateplanperiods = await rateplanperiodService.all({\n    //   stauts: {key: 'status', compare: '=', value: 1}\n    // }) || [];\n  } catch (e) {\n    console.log('error', e)\n  }\n\n  return {\n    params: ctx.params,\n    query: ctx.query,\n    menu,\n    pages,\n    hotels,\n    pagefilters,\n    rateplanperiods\n  };\n};\n\nexport default SitemapHtml;\n\n\n// const mapStateToProps = (state) => {\n// \treturn {\n//     hotelLoading: state.hotel.loading,\n//     hotelSeatchParams: state.hotel.params,\n// \t\thotels: state.hotel.items,\n//     hotelMeta: state.hotel.meta,\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   let hotelAction = new HotelAction()\n//   return {\n//     loading: (state) => {\n//       dispatch(hotelAction.loading(state))\n//     },\n//     query: (data) => {\n//       dispatch(hotelAction.query(data))\n//     },\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(SitemapHtml);\n\n\n"]},"metadata":{},"sourceType":"module"}