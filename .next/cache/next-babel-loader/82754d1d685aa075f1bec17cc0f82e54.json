{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport qs from 'qs';\nexport default class BaseService {\n  constructor(url) {\n    this.url = `${process.env.api_url}` + (url ? url : '');\n    this.config = {\n      headers: {// API_KEY: '$2y$10$zgrnhniFfgWCIkTqUNmBJeJkre2AY3s7FXf8EIqdSzFodKK3uM7Jy',\n      }\n    };\n  }\n\n  checkAuthApi(json) {\n    let token = Cookies.get('access_token') || null;\n\n    if (token) {\n      if (json) return {\n        headers: {\n          // ...API.headers,\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      };else return {\n        headers: {\n          // ...API.headers,\n          'Content-Type': 'application/x-www-form-urlencoded',\n          // 'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        }\n      };\n    } else {\n      if (json) {\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n      } else {\n        return {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        };\n      }\n    }\n  }\n\n  initApp() {\n    return axios.get(this.url + '/travelgo-one/frontend/initialize', this.config).then(response => {\n      return Promise.resolve(response.data);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  } // all(params){\n  //   return axios.get(this.url, { params }, this.config)\n  //   .then(response => {\n  //     return Promise.resolve(response.data.data);\n  //   })\n  //   .catch(error => {\n  //     return Promise.reject(error);\n  //   });\n  // }\n\n\n  all(params) {\n    // let config = this.checkAuthApi();\n    return axios.get(this.url, {\n      params,\n      paramsSerializer: function (params) {\n        return qs.stringify(params, {\n          encode: false\n        });\n      } // ...config\n\n    }).then(response => {\n      return Promise.resolve(response.data.data);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  get(id) {\n    return axios.get(`${this.url}/${id}`, this.config).then(response => {\n      return Promise.resolve(response.data.data);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  getBySlug(slug) {\n    return axios.get(`${this.url}/by-slug/${slug}`, this.config).then(response => {\n      return Promise.resolve(response.data.data);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  search(params) {\n    let config = this.checkAuthApi();\n    return axios.get(this.url, _objectSpread({\n      params,\n      paramsSerializer: function (params) {\n        return qs.stringify(params, {\n          encode: false\n        });\n      }\n    }, config)).then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  load(id) {\n    let config = this.checkAuthApi();\n    return axios.get(`${this.url}/${id}`, config).then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  createPost(postData) {\n    let config = this.checkAuthApi();\n    return axios.post(this.url, postData, config).then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  create(postData) {\n    let config = this.checkAuthApi('json');\n    return axios.post(this.url, postData, config).then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  update(id, postData) {\n    let config = this.checkAuthApi('json');\n    config = _objectSpread(_objectSpread({}, config), {}, {\n      onUploadProgress: progressEvent => console.log(progressEvent.loaded)\n    });\n    return axios.put(this.url + '/' + id, postData, config).then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  updatePost(id, postData) {\n    let config = this.checkAuthApi();\n    postData.append('_method', 'PUT');\n    return axios.post(this.url + '/' + id, postData, config).then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  remove(id) {\n    let config = this.checkAuthApi();\n    return axios.delete(this.url + '/' + id, _objectSpread({}, config)).then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  updateFields(id, postData) {\n    let config = this.checkAuthApi('json'); // config.headers = {\n    //   ...config.headers,\n    //   'Content-type' : 'application/form-url-encode'\n    // }\n    // postData['_method'] = 'PUT';\n\n    return axios.put(this.url + '/update-fields/' + id, postData, config).then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/packages/BaseService.js"],"names":["axios","qs","BaseService","constructor","url","process","env","api_url","config","headers","checkAuthApi","json","token","Cookies","get","initApp","then","response","Promise","resolve","data","catch","error","reject","all","params","paramsSerializer","stringify","encode","id","getBySlug","slug","search","load","createPost","postData","post","create","update","onUploadProgress","progressEvent","console","log","loaded","put","updatePost","append","remove","delete","updateFields"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport qs from 'qs'\n\nexport default class BaseService {\n\n  constructor(url){\n    this.url = `${process.env.api_url}` + ((url) ? url : '');\n    this.config = {\n      headers: {\n        // API_KEY: '$2y$10$zgrnhniFfgWCIkTqUNmBJeJkre2AY3s7FXf8EIqdSzFodKK3uM7Jy',\n      }\n    }\n  }\n\n  checkAuthApi(json) {\n    let token = Cookies.get('access_token') || null;\n\n    if (token) {\n      if (json)\n        return {\n          headers: {\n            // ...API.headers,\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      else\n        return {\n          headers: {\n            // ...API.headers,\n            'Content-Type': 'application/x-www-form-urlencoded',\n            // 'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${token}`\n          }\n        }\n    } \n    else {\n      if (json) {\n        return {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      }\n      else {\n        return {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        }\n      }\n    }\n  }\n\n  initApp(){\n    return axios.get(this.url + '/travelgo-one/frontend/initialize', this.config)\n    .then(response => {\n      return Promise.resolve(response.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  // all(params){\n  //   return axios.get(this.url, { params }, this.config)\n  //   .then(response => {\n  //     return Promise.resolve(response.data.data);\n  //   })\n  //   .catch(error => {\n  //     return Promise.reject(error);\n  //   });\n  // }\n  all(params){\n    // let config = this.checkAuthApi();\n    return axios.get(this.url, {\n      params,\n      paramsSerializer: function(params) {\n        return qs.stringify(params, {\n          encode: false\n        });\n      },\n      // ...config\n    })\n    .then(response => {\n      return Promise.resolve(response.data.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  get(id){\n    return axios.get(`${this.url}/${id}`, this.config)\n    .then(response => {\n      return Promise.resolve(response.data.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  getBySlug(slug){\n    return axios.get(`${this.url}/by-slug/${slug}`, this.config)\n    .then(response => {\n      return Promise.resolve(response.data.data);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n\n\n\n  search(params){\n    let config = this.checkAuthApi();\n    return axios.get(this.url, {\n      params,\n      paramsSerializer: function(params) {\n        return qs.stringify(params, {\n          encode: false\n        });\n      },\n      ...config\n    })\n    .then(response => {\n      return Promise.resolve(response);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  load(id){\n    let config = this.checkAuthApi();\n\n    return axios.get(`${this.url}/${id}`, config)\n    .then(response => {\n      return Promise.resolve(response);\n    })\n    .catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  createPost(postData) {\n    let config = this.checkAuthApi();\n\n    return axios.post(this.url, postData, config)\n      .then(response => {\n        return Promise.resolve(response);\n      }).catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  create(postData) {\n    let config = this.checkAuthApi('json');\n\n    return axios.post(this.url, postData, config)\n      .then(response => {\n        return Promise.resolve(response);\n      }).catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  update(id, postData) {\n    let config = this.checkAuthApi('json');\n    config = {\n      ...config,\n      onUploadProgress: progressEvent => console.log(progressEvent.loaded)\n    };\n    return axios.put(this.url + '/' + id, postData, config)\n      .then(response => {\n        return Promise.resolve(response);\n      }).catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  updatePost(id, postData) {\n    let config = this.checkAuthApi();\n    postData.append('_method', 'PUT');\n\n    return axios.post(this.url + '/' + id, postData, config)\n      .then(response => {\n        return Promise.resolve(response);\n      }).catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  remove(id) {\n    let config = this.checkAuthApi();\n\n    return axios.delete(this.url + '/' + id, {\n      ...config\n    }).then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n\n  updateFields(id, postData) {\n    let config = this.checkAuthApi('json');\n    // config.headers = {\n    //   ...config.headers,\n    //   'Content-type' : 'application/form-url-encode'\n    // }\n    // postData['_method'] = 'PUT';\n\n    return axios.put(this.url + '/update-fields/' + id, postData, config)\n    .then(response => {\n      return Promise.resolve(response);\n    }).catch(error => {\n      return Promise.reject(error);\n    });\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}