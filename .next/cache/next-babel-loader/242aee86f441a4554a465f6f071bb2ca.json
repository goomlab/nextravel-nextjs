{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap-html.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport Link from \"next/link\";\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\";\n\nconst SitemapHotels = models => {\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, Object.entries(models).map((model, index) => {\n    {\n      console.log('model', model);\n    }\n\n    __jsx(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: `${process.env.app_url}/${model.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, model.title)));\n  }));\n}; // const SitemapHotels = (models) => `<ul>\n//   ${models.map((model, index) => {\n//     return `\n//       <li>\n//           <a href=\"${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}\">${model.title.it}</a>\n//       </li>\n//         `;\n//   })\n//   .join('')}\n//   </ul>\n// `;\n\n\nconst SitemapHtml = props => {\n  console.log('props', props);\n  return __jsx(Layout, {\n    settings: {\n      template: \"front-page\",\n      menu: props.menu\n    },\n    meta: {\n      title: \"Mappa del sito\",\n      description: \"Mappa del sito\",\n      url: `${process.env.meta.url}/sitemap-html`,\n      image: null\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(BookingSearchBox, {\n    query: props.query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(\"section\", {\n    className: \"section-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(SitemapHotels, {\n    models: props.hotels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }))));\n};\n\nSitemapHtml.getInitialProps = async ctx => {\n  let menu = null;\n  let pages = [];\n  let hotels = [];\n  let pagefilters = [];\n  let rateplanperiods = [];\n\n  try {\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n    let postService = new PostService();\n    pages = (await postService.all({\n      stauts: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    })) || [];\n    let hotelService = new HotelService();\n    hotels = (await hotelService.all({\n      status: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    })) || [];\n    let pagefilterService = new PageFilterService();\n    pagefilters = (await pagefilterService.all({\n      stauts: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    })) || [];\n    let rateplanperiodService = new RatePlanPeriodService();\n    rateplanperiods = (await rateplanperiodService.all({\n      stauts: {\n        key: 'status',\n        compare: '=',\n        value: 1\n      }\n    })) || [];\n  } catch (e) {\n    console.log('error', e);\n  }\n\n  return {\n    params: ctx.params,\n    query: ctx.query,\n    menu,\n    pages,\n    hotels,\n    pagefilters,\n    rateplanperiods\n  };\n};\n\nexport default SitemapHtml; // const mapStateToProps = (state) => {\n// \treturn {\n//     hotelLoading: state.hotel.loading,\n//     hotelSeatchParams: state.hotel.params,\n// \t\thotels: state.hotel.items,\n//     hotelMeta: state.hotel.meta,\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   let hotelAction = new HotelAction()\n//   return {\n//     loading: (state) => {\n//       dispatch(hotelAction.loading(state))\n//     },\n//     query: (data) => {\n//       dispatch(hotelAction.query(data))\n//     },\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(SitemapHtml);","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/pages/sitemap-html.js"],"names":["React","connect","Link","PostService","HotelService","PageFilterService","RatePlanPeriodService","Layout","BookingSearchBox","SitemapHotels","models","Object","entries","map","model","index","console","log","process","env","app_url","slug","title","SitemapHtml","props","template","menu","description","url","meta","image","query","hotels","getInitialProps","ctx","pages","pagefilters","rateplanperiods","menuService","MenuService","get","postService","all","stauts","key","compare","value","hotelService","status","pagefilterService","rateplanperiodService","e","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport Link from \"next/link\";\n\nimport PostService from \"~/packages/Post/services/PostService\";\nimport HotelService from \"~/packages/TravelgoOne/services/HotelService\";\nimport PageFilterService from \"~/packages/TravelgoOne/services/PageFilterService\";\nimport RatePlanPeriodService from \"~/packages/TravelgoOne/services/RatePlanPeriodService\";\n\n\nimport Layout from \"~/components/Layouts/MainLayout/MainLayout\";\nimport BookingSearchBox from \"~/components/Partials/BookingSearchBox\";\n\n\nconst SitemapHotels = models => {\n  return (\n    <ul>\n      {Object.entries(models).map((model, index) => {\n        {console.log('model', model)}\n        <li key={index}>\n          <Link href={`${process.env.app_url}/${model.slug}`}>\n            <a>{model.title}</a>\n          </Link>\n        </li>\n      })}\n    </ul>\n  )\n}\n\n// const SitemapHotels = (models) => `<ul>\n//   ${models.map((model, index) => {\n//     return `\n//       <li>\n//           <a href=\"${`${process.env.app_url}/strutture-ricettive/${model.slug.it}`}\">${model.title.it}</a>\n//       </li>\n//         `;\n//   })\n//   .join('')}\n//   </ul>\n// `;\n\nconst SitemapHtml = props => {console.log('props', props)\n  return (\n    <Layout \n      settings={{template:\"front-page\", menu: props.menu}}\n      meta={{\n        title: \"Mappa del sito\",\n        description: \"Mappa del sito\",\n        url: `${process.env.meta.url}/sitemap-html`,\n        image: null\n      }}\n      >\n\n      <BookingSearchBox query={props.query} />\n\n      <section className=\"section-main\">\n        <div className=\"container\">\n          <SitemapHotels models={props.hotels} />\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nSitemapHtml.getInitialProps = async ctx => {\n  let menu = null;\n  let pages = [];\n  let hotels = [];\n  let pagefilters = [];\n  let rateplanperiods = [];\n  try {\n    let menuService = new MenuService();\n    menu = await menuService.get(1);\n\n    let postService = new PostService();\n    pages = await postService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    }) || [];\n\n    let hotelService = new HotelService();\n    hotels = await hotelService.all({\n      status: {key: 'status', compare: '=', value: 1}\n    }) || [];\n\n    let pagefilterService = new PageFilterService();\n    pagefilters = await pagefilterService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    }) || [];\n\n    let rateplanperiodService = new RatePlanPeriodService();\n    rateplanperiods = await rateplanperiodService.all({\n      stauts: {key: 'status', compare: '=', value: 1}\n    }) || [];\n  } catch (e) {\n    console.log('error', e)\n  }\n\n  return {\n    params: ctx.params,\n    query: ctx.query,\n    menu,\n    pages,\n    hotels,\n    pagefilters,\n    rateplanperiods\n  };\n};\n\nexport default SitemapHtml;\n\n\n// const mapStateToProps = (state) => {\n// \treturn {\n//     hotelLoading: state.hotel.loading,\n//     hotelSeatchParams: state.hotel.params,\n// \t\thotels: state.hotel.items,\n//     hotelMeta: state.hotel.meta,\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   let hotelAction = new HotelAction()\n//   return {\n//     loading: (state) => {\n//       dispatch(hotelAction.loading(state))\n//     },\n//     query: (data) => {\n//       dispatch(hotelAction.query(data))\n//     },\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(SitemapHtml);\n\n\n"]},"metadata":{},"sourceType":"module"}