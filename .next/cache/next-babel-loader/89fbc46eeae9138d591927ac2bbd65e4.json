{"ast":null,"code":"import BaseAction from '~/packages/BaseAction';\nimport PageLoaderAction from '~/packages/Base/actions/PageLoaderAction';\nimport AlertMessageAction from '~/packages/Base/actions/AlertMessageAction';\nimport HotelService from '../services/HotelService';\nexport const hotelConsts = {\n  LOADING: 'HOTEL_LIST_LOADING',\n  ITEMS: 'HOTEL_LIST_ITEMS',\n  RESET_ITEMS: 'HOTEL_LIST_RESET_ITEMS' // RESET_ITEM: 'PRACTICE_BY_GUEST_RESET_ITEM',\n  // GET_CLIENT_IP: 'PRACTICE_BY_GUEST_GET_CLIENT_IP',\n  // CREATE: 'PRACTICE_BY_GUEST_CREATE',\n\n};\nexport default class HotelAction extends BaseAction {\n  constructor() {\n    super();\n    this.service = new HotelService();\n    this.consts = hotelConsts;\n  }\n\n  loading(state) {\n    return dispatch => {\n      dispatch({\n        type: this.consts.LOADING,\n        loading: state\n      });\n    };\n  }\n\n  query(params) {\n    return dispatch => {\n      dispatch(PageLoaderAction.show());\n      dispatch(this.loading(1));\n      this.service.query(params).then(response => {\n        dispatch({\n          type: this.consts.ITEMS,\n          items: response.data,\n          meta: response.meta\n        });\n        dispatch(PageLoaderAction.hide()); // if( response.data.length > 0 )\n\n        if (parseInt(response.meta.last_page) > 1) dispatch(this.loading(0));else dispatch(this.loading(1));\n      }).catch(error => {\n        dispatch({\n          type: this.consts.RESET_ITEMS,\n          items: [],\n          meta: null\n        });\n        dispatch(PageLoaderAction.hide());\n        dispatch(this.loading(0));\n      });\n    };\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}