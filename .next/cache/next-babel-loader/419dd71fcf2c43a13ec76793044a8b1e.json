{"ast":null,"code":"var _jsxFileName = \"/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/Partials/PriceTableWrap2.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport PriceTable from './PriceTable';\nexport const getPriceList = period => {\n  let priceList = {};\n\n  for (const [roomTypeName, roomTypeContent] of Object.entries(period.viewPeriodPrices)) {\n    priceList[roomTypeName] = {};\n\n    if (roomTypeContent.prices) {\n      for (const [key, treatmentObj] of Object.entries(roomTypeContent.prices)) {\n        priceList[roomTypeName][key] = {\n          n1: treatmentObj.n1 ? treatmentObj.n1 : null,\n          n2: treatmentObj.n2 ? treatmentObj.n2 : null,\n          n3: treatmentObj.n3 ? treatmentObj.n3 : null,\n          n4: treatmentObj.n4 ? treatmentObj.n4 : null,\n          n5: treatmentObj.n5 ? treatmentObj.n5 : null,\n          n6: treatmentObj.n6 ? treatmentObj.n6 : null,\n          n7: treatmentObj.n7 ? treatmentObj.n7 : null\n        };\n      }\n    }\n  }\n\n  return priceList;\n};\n\nconst PriceTableWrap2 = props => {\n  // const priceList = getPriceList(props.period)\n  // return(\n  //   <>\n  //   {priceList && Object.entries(priceList).map( ([roomType, treatments], index) => \n  //     <React.Fragment key={index}>\n  //       {treatments && Object.entries(treatments).map( ([treatment, prices], index2) => \n  //         <React.Fragment key={index2}>\n  //           <div><span style={{color: '#4fbaad'}}>{roomType}</span></div>\n  //           <PriceTable \n  //             // key={index2}\n  //             index={index}\n  //             room_type={roomType}\n  //             treatment={treatment}\n  //             prices={prices}\n  //             hotel={props.hotel}\n  //             period={props.period}\n  //             priceTableLink={true}\n  //           />\n  //         </React.Fragment>\n  //       )}\n  //     </React.Fragment>\n  //   )}\n  //   </>\n  // )\n  return __jsx(React.Fragment, null, props.period.viewPeriodPrices && Object.entries(props.period.viewPeriodPrices).map(([roomType, roomTypeContent], index) => __jsx(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, roomTypeContent.prices && Object.entries(roomTypeContent.prices).map(([treatment, prices], index2) => __jsx(React.Fragment, {\n    key: index2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    style: {\n      color: '#4fbaad'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }\n  }, roomTypeContent.room_type.name)), __jsx(PriceTable // key={index2}\n  , {\n    index: index,\n    room_type: roomTypeContent.room_type,\n    treatment: treatment,\n    prices: prices,\n    hotel: props.hotel,\n    period: props.period,\n    priceTableLink: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nexport default PriceTableWrap2;","map":{"version":3,"sources":["/Users/giuseppe/Workspace/Di Costanzo Marco/nextravel.it/www/nextravel-nextjs/components/Partials/PriceTableWrap2.js"],"names":["React","moment","PriceTable","getPriceList","period","priceList","roomTypeName","roomTypeContent","Object","entries","viewPeriodPrices","prices","key","treatmentObj","n1","n2","n3","n4","n5","n6","n7","PriceTableWrap2","props","map","roomType","index","treatment","index2","color","room_type","name","hotel"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nimport PriceTable from './PriceTable';\n\nexport const getPriceList = period =>{\n  let priceList = {}\n\n  for (const [roomTypeName, roomTypeContent] of Object.entries(period.viewPeriodPrices)){\n    priceList[roomTypeName] = {};\n\n    if( roomTypeContent.prices ){\n      for (const [key, treatmentObj] of Object.entries(roomTypeContent.prices)) {\n        priceList[roomTypeName][key] = {\n          n1: (treatmentObj.n1) ? treatmentObj.n1 : null,\n          n2: (treatmentObj.n2) ? treatmentObj.n2 : null,\n          n3: (treatmentObj.n3) ? treatmentObj.n3 : null,\n          n4: (treatmentObj.n4) ? treatmentObj.n4 : null,\n          n5: (treatmentObj.n5) ? treatmentObj.n5 : null,\n          n6: (treatmentObj.n6) ? treatmentObj.n6 : null,\n          n7: (treatmentObj.n7) ? treatmentObj.n7 : null,\n        };\n      }\n    }\n  }\n\n  return priceList\n}\n\nconst PriceTableWrap2 = props => {\n  // const priceList = getPriceList(props.period)\n  \n  // return(\n  //   <>\n  //   {priceList && Object.entries(priceList).map( ([roomType, treatments], index) => \n  //     <React.Fragment key={index}>\n  //       {treatments && Object.entries(treatments).map( ([treatment, prices], index2) => \n  //         <React.Fragment key={index2}>\n  //           <div><span style={{color: '#4fbaad'}}>{roomType}</span></div>\n  //           <PriceTable \n  //             // key={index2}\n  //             index={index}\n  //             room_type={roomType}\n  //             treatment={treatment}\n  //             prices={prices}\n  //             hotel={props.hotel}\n  //             period={props.period}\n  //             priceTableLink={true}\n  //           />\n  //         </React.Fragment>\n  //       )}\n  //     </React.Fragment>\n  //   )}\n  //   </>\n  // )\n\n\n  return(\n    <>\n    {props.period.viewPeriodPrices && Object.entries(props.period.viewPeriodPrices).map( ([roomType, roomTypeContent], index) => \n      <React.Fragment key={index}>\n        {roomTypeContent.prices && Object.entries(roomTypeContent.prices).map( ([treatment, prices], index2) => \n          <React.Fragment key={index2}>\n            <div><span style={{color: '#4fbaad'}}>{roomTypeContent.room_type.name}</span></div>\n            <PriceTable \n              // key={index2}\n              index={index}\n              room_type={roomTypeContent.room_type}\n              treatment={treatment}\n              prices={prices}\n              hotel={props.hotel}\n              period={props.period}\n              priceTableLink={true}\n            />\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    )}\n    </>\n  )\n}\n\nexport default PriceTableWrap2;"]},"metadata":{},"sourceType":"module"}